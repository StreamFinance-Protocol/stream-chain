/// <reference types="node" />
import _ from 'lodash';
import { PerpetualPositionFromDatabase, PerpetualPositionQueryConfig, PerpetualPositionCreateObject, PerpetualPositionUpdateObject, PerpetualPositionCloseObject, Options, QueryableField, MarketOpenInterest, PerpetualPositionSubaccountUpdateObject, SubaccountToPerpetualPositionsMap } from '../types';
export declare function uuid(subaccountId: string, openEventId: Buffer): string;
export declare function findAll({ id, subaccountId, perpetualId, side, status, createdBeforeOrAtHeight, createdBeforeOrAt, limit, }: PerpetualPositionQueryConfig, requiredFields: QueryableField[], options?: Options): Promise<PerpetualPositionFromDatabase[]>;
export declare function create(perpetualPosition: PerpetualPositionCreateObject, options?: Options): Promise<PerpetualPositionFromDatabase>;
export declare function update({ id, ...fields }: PerpetualPositionUpdateObject, options?: Options): Promise<PerpetualPositionFromDatabase | undefined>;
export declare function findById(id: string, options?: Options): Promise<PerpetualPositionFromDatabase | undefined>;
export declare function findOpenPositionForSubaccountPerpetual(subaccountId: string, perpetualId: string, options?: Options): Promise<PerpetualPositionFromDatabase | undefined>;
export declare function findOpenPositionsForSubaccounts(subaccountIds: string[], options?: Options): Promise<SubaccountToPerpetualPositionsMap>;
export declare function closePosition(existingPosition: PerpetualPositionFromDatabase, perpetualPositionCloseObject: PerpetualPositionCloseObject, options?: Options): Promise<PerpetualPositionFromDatabase | undefined>;
/**
 * Validates close position and returns the update object to update the position.
 */
export declare function closePositionUpdateObject(existingPosition: PerpetualPositionFromDatabase, perpetualPositionCloseObject: PerpetualPositionCloseObject): PerpetualPositionSubaccountUpdateObject;
export declare function getOpenInterestLong(perpetualMarketIds: string[]): Promise<_.Dictionary<MarketOpenInterest>>;
export declare function bulkCreate(positions: PerpetualPositionCreateObject[], options?: Options): Promise<PerpetualPositionFromDatabase[]>;
/**
 * Bulk update for processing SubaccountUpdateEvents. Updates the following fields:
 * - closedAt
 * - closedAtHeight
 * - closeEventId
 * - lastEventId
 * - settledFunding
 * - status
 * - size
 * - maxSize
 * maxSize is calculated algorithmically based on the previous maxSize and the new size.
 */
export declare function bulkUpdateSubaccountFields(positions: PerpetualPositionSubaccountUpdateObject[], options?: Options): Promise<void>;
