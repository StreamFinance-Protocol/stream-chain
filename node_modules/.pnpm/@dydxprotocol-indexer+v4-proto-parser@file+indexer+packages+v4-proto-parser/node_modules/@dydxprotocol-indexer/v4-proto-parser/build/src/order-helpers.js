"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.requiresImmediateExecution = exports.isStatefulOrder = exports.getOrderIdHash = void 0;
const crypto_1 = require("crypto");
const v4_protos_1 = require("@dydxprotocol-indexer/v4-protos");
const constants_1 = require("./constants");
/**
 * Gets the hash of an order id. Matches the function in V4 to get the hash of an order.
 * https://github.com/dydxprotocol/v4/blob/311411a3ce92230d4866a7c4abb1422fbc4ef3b9/indexer/off_chain_updates/off_chain_updates.go#L293
 * @param orderId
 * @returns
 */
function getOrderIdHash(orderId) {
    const bytes = Buffer.from(Uint8Array.from(v4_protos_1.IndexerOrderId.encode(orderId).finish()));
    return (0, crypto_1.createHash)('sha256').update(bytes).digest();
}
exports.getOrderIdHash = getOrderIdHash;
function isStatefulOrder(orderFlag) {
    const numberOrderFlag = Number(orderFlag);
    // A string that is not a number will be converted to NaN, and should return false.
    if (Number.isNaN(numberOrderFlag)) {
        return false;
    }
    return numberOrderFlag === constants_1.ORDER_FLAG_CONDITIONAL || numberOrderFlag === constants_1.ORDER_FLAG_LONG_TERM;
}
exports.isStatefulOrder = isStatefulOrder;
function requiresImmediateExecution(tif) {
    return (tif === v4_protos_1.IndexerOrder_TimeInForce.TIME_IN_FORCE_FILL_OR_KILL ||
        tif === v4_protos_1.IndexerOrder_TimeInForce.TIME_IN_FORCE_IOC);
}
exports.requiresImmediateExecution = requiresImmediateExecution;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vcmRlci1oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1DQUFvQztBQUVwQywrREFBMkY7QUFFM0YsMkNBQTJFO0FBRTNFOzs7OztHQUtHO0FBQ0gsU0FBZ0IsY0FBYyxDQUFDLE9BQXVCO0lBQ3BELE1BQU0sS0FBSyxHQUFXLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQywwQkFBYyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUYsT0FBTyxJQUFBLG1CQUFVLEVBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3JELENBQUM7QUFIRCx3Q0FHQztBQUVELFNBQWdCLGVBQWUsQ0FBQyxTQUEwQjtJQUN4RCxNQUFNLGVBQWUsR0FBVyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbEQsbUZBQW1GO0lBQ25GLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUNqQyxPQUFPLEtBQUssQ0FBQztLQUNkO0lBQ0QsT0FBTyxlQUFlLEtBQUssa0NBQXNCLElBQUksZUFBZSxLQUFLLGdDQUFvQixDQUFDO0FBQ2hHLENBQUM7QUFQRCwwQ0FPQztBQUVELFNBQWdCLDBCQUEwQixDQUFDLEdBQTZCO0lBQ3RFLE9BQU8sQ0FDTCxHQUFHLEtBQUssb0NBQXdCLENBQUMsMEJBQTBCO1FBQzNELEdBQUcsS0FBSyxvQ0FBd0IsQ0FBQyxpQkFBaUIsQ0FDbkQsQ0FBQztBQUNKLENBQUM7QUFMRCxnRUFLQyJ9