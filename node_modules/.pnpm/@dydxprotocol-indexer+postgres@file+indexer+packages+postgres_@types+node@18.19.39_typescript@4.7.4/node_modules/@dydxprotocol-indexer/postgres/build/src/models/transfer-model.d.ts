/// <reference types="node" />
import { Model } from 'objection';
import { IsoString } from '../types';
export default class TransferModel extends Model {
    static get tableName(): string;
    static get idColumn(): string;
    static relationMappings: {
        recipientSubaccount: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        senderSubaccount: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        asset: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        tendermintEvents: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        blocks: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
    };
    static get jsonSchema(): {
        type: string;
        required: string[];
        properties: {
            id: {
                type: string;
                format: string;
            };
            senderSubaccountId: {
                type: string[];
                default: null;
                format: string;
            };
            recipientSubaccountId: {
                type: string[];
                default: null;
                format: string;
            };
            senderWalletAddress: {
                type: string[];
                default: null;
            };
            recipientWalletAddress: {
                type: string[];
                default: null;
            };
            assetId: {
                type: string;
                pattern: string;
            };
            size: {
                type: string;
                pattern: string;
            };
            transactionHash: {
                type: string;
            };
            createdAt: {
                type: string;
                format: string;
            };
            createdAtHeight: {
                type: string;
                pattern: string;
            };
        };
    };
    /**
     * A mapping from column name to JSON conversion expected.
     * See getSqlConversionForDydxModelTypes for valid conversions.
     *
     * TODO(IND-239): Ensure that jsonSchema() / sqlToJsonConversions() / model fields match.
     */
    static get sqlToJsonConversions(): {
        id: string;
        senderSubaccountId: string;
        recipientSubaccountId: string;
        senderWalletAddress: string;
        recipientWalletAddress: string;
        assetId: string;
        size: string;
        eventId: string;
        transactionHash: string;
        createdAt: string;
        createdAtHeight: string;
    };
    id: string;
    senderSubaccountId?: string;
    recipientSubaccountId?: string;
    senderWalletAddress?: string;
    recipientWalletAddress?: string;
    assetId: string;
    size: string;
    eventId: Buffer;
    transactionHash: string;
    createdAt: IsoString;
    createdAtHeight: string;
}
