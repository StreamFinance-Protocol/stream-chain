import { Model } from 'objection';
import { PerpetualMarketStatus, PerpetualMarketType } from '../types';
export default class PerpetualMarketModel extends Model {
    static get tableName(): string;
    static get idColumn(): string;
    static relationMappings: {
        perpetualPosition: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        market: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        liquidityTiers: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
    };
    static get jsonSchema(): {
        type: string;
        required: string[];
        properties: {
            id: {
                type: string;
                pattern: string;
            };
            clobPairId: {
                type: string;
                pattern: string;
            };
            ticker: {
                type: string;
            };
            marketId: {
                type: string;
            };
            status: {
                type: string;
                enum: PerpetualMarketStatus[];
            };
            priceChange24H: {
                type: string;
                pattern: string;
            };
            volume24H: {
                type: string;
                pattern: string;
            };
            trades24H: {
                type: string;
            };
            nextFundingRate: {
                type: string;
                pattern: string;
            };
            openInterest: {
                type: string;
                pattern: string;
            };
            quantumConversionExponent: {
                type: string;
            };
            atomicResolution: {
                type: string;
            };
            subticksPerTick: {
                type: string;
            };
            stepBaseQuantums: {
                type: string;
            };
            liquidityTierId: {
                type: string;
            };
            marketType: {
                type: string;
            };
        };
    };
    /**
     * A mapping from column name to JSON conversion expected.
     * See getSqlConversionForDydxModelTypes for valid conversions.
     *
     * TODO(IND-239): Ensure that jsonSchema() / sqlToJsonConversions() / model fields match.
     */
    static get sqlToJsonConversions(): {
        id: string;
        clobPairId: string;
        ticker: string;
        marketId: string;
        status: string;
        priceChange24H: string;
        volume24H: string;
        trades24H: string;
        nextFundingRate: string;
        openInterest: string;
        quantumConversionExponent: string;
        atomicResolution: string;
        subticksPerTick: string;
        stepBaseQuantums: string;
        liquidityTierId: string;
        marketType: string;
    };
    id: string;
    clobPairId: string;
    ticker: string;
    marketId: number;
    status: PerpetualMarketStatus;
    priceChange24H: string;
    volume24H: string;
    trades24H: number;
    nextFundingRate: string;
    openInterest: string;
    quantumConversionExponent: number;
    atomicResolution: number;
    subticksPerTick: number;
    stepBaseQuantums: number;
    liquidityTierId: number;
    marketType: PerpetualMarketType;
}
