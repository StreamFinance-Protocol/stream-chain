"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const order_helpers_1 = require("../src/order-helpers");
const src_1 = require("../src");
describe('getOrderIdHash', () => {
    // Test cases match test cases in V4
    // https://github.com/dydxprotocol/v4/blob/311411a3ce92230d4866a7c4abb1422fbc4ef3b9/indexer/off_chain_updates/off_chain_updates_test.go#L278-L299
    it('hashes an order id correctly', () => {
        const orderId = {
            subaccountId: {
                owner: 'dydx199tqg4wdlnu4qjlxchpd7seg454937hjrknju4',
                number: 0,
            },
            clientId: 0,
            orderFlags: 0,
            clobPairId: 0,
        };
        const hash = (0, order_helpers_1.getOrderIdHash)(orderId);
        const expectedHash = Buffer.from([
            0x5c, 0x2e, 0xc7, 0xcb, 0xfc, 0xf2, 0x63, 0xf6, 0xcb, 0x37, 0x44, 0x12, 0x60, 0xcc, 0x8b,
            0x71, 0xdd, 0x28, 0xb7, 0xfc, 0x8f, 0x00, 0xff, 0x00, 0xc1, 0x39, 0x16, 0x45, 0xce, 0x53,
            0x21, 0x95,
        ]);
        expect(hash).toEqual(expectedHash);
    });
    it('hashes empty order id correctly', () => {
        const orderId = {
            subaccountId: {
                owner: '',
                number: 0,
            },
            clientId: 0,
            orderFlags: 0,
            clobPairId: 0,
        };
        const hash = (0, order_helpers_1.getOrderIdHash)(orderId);
        const expectedHash = Buffer.from([
            0x10, 0x2b, 0x51, 0xb9, 0x76, 0x5a, 0x56, 0xa3, 0xe8, 0x99, 0xf7, 0xcf, 0x0e, 0xe3, 0x8e,
            0x52, 0x51, 0xf9, 0xc5, 0x03, 0xb3, 0x57, 0xb3, 0x30, 0xa4, 0x91, 0x83, 0xeb, 0x7b, 0x15,
            0x56, 0x04,
        ]);
        expect(hash).toEqual(expectedHash);
    });
});
describe('isStatefulOrder', () => {
    it.each([
        [src_1.ORDER_FLAG_SHORT_TERM.toString(), 'string', false],
        ['4', 'string', false],
        [src_1.ORDER_FLAG_CONDITIONAL.toString(), 'string', true],
        [src_1.ORDER_FLAG_LONG_TERM.toString(), 'string', true],
        [src_1.ORDER_FLAG_SHORT_TERM, 'number', false],
        [3, 'number', false],
        [src_1.ORDER_FLAG_CONDITIONAL, 'number', true],
        [src_1.ORDER_FLAG_LONG_TERM, 'number', true],
        ['abc', 'string', false],
    ])('Checks if flag %s with type %s is a stateful order', (flag, _type, isStateful) => {
        expect((0, order_helpers_1.isStatefulOrder)(flag)).toEqual(isStateful);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItaGVscGVycy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vX190ZXN0c19fL29yZGVyLWhlbHBlcnMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHdEQUF1RTtBQUN2RSxnQ0FBNkY7QUFFN0YsUUFBUSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRTtJQUM5QixvQ0FBb0M7SUFDcEMsaUpBQWlKO0lBQ2pKLEVBQUUsQ0FBQyw4QkFBOEIsRUFBRSxHQUFHLEVBQUU7UUFDdEMsTUFBTSxPQUFPLEdBQW1CO1lBQzlCLFlBQVksRUFBRTtnQkFDWixLQUFLLEVBQUUsNkNBQTZDO2dCQUNwRCxNQUFNLEVBQUUsQ0FBQzthQUNWO1lBQ0QsUUFBUSxFQUFFLENBQUM7WUFDWCxVQUFVLEVBQUUsQ0FBQztZQUNiLFVBQVUsRUFBRSxDQUFDO1NBQ2QsQ0FBQztRQUNGLE1BQU0sSUFBSSxHQUFXLElBQUEsOEJBQWMsRUFBQyxPQUFPLENBQUMsQ0FBQztRQUU3QyxNQUFNLFlBQVksR0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ3ZDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUN4RixJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7WUFDeEYsSUFBSSxFQUFFLElBQUk7U0FDWCxDQUFDLENBQUM7UUFDSCxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3JDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGlDQUFpQyxFQUFFLEdBQUcsRUFBRTtRQUN6QyxNQUFNLE9BQU8sR0FBbUI7WUFDOUIsWUFBWSxFQUFFO2dCQUNaLEtBQUssRUFBRSxFQUFFO2dCQUNULE1BQU0sRUFBRSxDQUFDO2FBQ1Y7WUFDRCxRQUFRLEVBQUUsQ0FBQztZQUNYLFVBQVUsRUFBRSxDQUFDO1lBQ2IsVUFBVSxFQUFFLENBQUM7U0FDZCxDQUFDO1FBQ0YsTUFBTSxJQUFJLEdBQVcsSUFBQSw4QkFBYyxFQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTdDLE1BQU0sWUFBWSxHQUFXLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDdkMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQ3hGLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUN4RixJQUFJLEVBQUUsSUFBSTtTQUNYLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDckMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLEVBQUU7SUFDL0IsRUFBRSxDQUFDLElBQUksQ0FBQztRQUNOLENBQUMsMkJBQXFCLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQztRQUNuRCxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDO1FBQ3RCLENBQUMsNEJBQXNCLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQztRQUNuRCxDQUFDLDBCQUFvQixDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUM7UUFDakQsQ0FBQywyQkFBcUIsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUM7UUFDcEIsQ0FBQyw0QkFBc0IsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDO1FBQ3hDLENBQUMsMEJBQW9CLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQztRQUN0QyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDO0tBQ3pCLENBQUMsQ0FBQyxvREFBb0QsRUFBRSxDQUN2RCxJQUFxQixFQUNyQixLQUFhLEVBQ2IsVUFBbUIsRUFDbkIsRUFBRTtRQUNGLE1BQU0sQ0FBQyxJQUFBLCtCQUFlLEVBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDcEQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyJ9