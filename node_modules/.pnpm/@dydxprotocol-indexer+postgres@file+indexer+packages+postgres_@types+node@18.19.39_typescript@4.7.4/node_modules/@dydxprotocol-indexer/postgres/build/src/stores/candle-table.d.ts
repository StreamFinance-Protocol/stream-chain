import { CandleCreateObject, CandleFromDatabase, CandleQueryConfig, CandleResolution, CandlesMap, CandleUpdateObject, IsoString, Options, QueryableField } from '../types';
export declare function uuid(startedAt: IsoString, ticker: string, resolution: CandleResolution): string;
/**
 * Find all candles that match the given query config. fromIso is inclusive and toISO is exclusive.
 */
export declare function findAll({ limit, id, ticker, resolution, fromISO, toISO, }: CandleQueryConfig, requiredFields: QueryableField[], options?: Options): Promise<CandleFromDatabase[]>;
export declare function create(candle: CandleCreateObject, options?: Options): Promise<CandleFromDatabase>;
export declare function update({ id, ...fields }: CandleUpdateObject, options?: Options): Promise<CandleFromDatabase | undefined>;
export declare function findById(id: string, options?: Options): Promise<CandleFromDatabase | undefined>;
export declare function findLatest(ticker: string, resolution: CandleResolution, options?: Options): Promise<CandleFromDatabase | undefined>;
export declare function findCandlesMap(tickers: string[], resolutions: CandleResolution[], options?: Options): Promise<CandlesMap>;
