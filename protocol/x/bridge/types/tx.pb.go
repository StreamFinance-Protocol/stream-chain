// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: klyraprotocol/bridge/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgAcknowledgeBridges is the Msg/AcknowledgeBridges request type.
type MsgAcknowledgeBridges struct {
	// The events to acknowledge.
	Events []BridgeEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events"`
}

func (m *MsgAcknowledgeBridges) Reset()         { *m = MsgAcknowledgeBridges{} }
func (m *MsgAcknowledgeBridges) String() string { return proto.CompactTextString(m) }
func (*MsgAcknowledgeBridges) ProtoMessage()    {}
func (*MsgAcknowledgeBridges) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{0}
}
func (m *MsgAcknowledgeBridges) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcknowledgeBridges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcknowledgeBridges.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcknowledgeBridges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcknowledgeBridges.Merge(m, src)
}
func (m *MsgAcknowledgeBridges) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcknowledgeBridges) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcknowledgeBridges.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcknowledgeBridges proto.InternalMessageInfo

func (m *MsgAcknowledgeBridges) GetEvents() []BridgeEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

// MsgAcknowledgeBridgesResponse is the Msg/AcknowledgeBridgesResponse response
// type.
type MsgAcknowledgeBridgesResponse struct {
}

func (m *MsgAcknowledgeBridgesResponse) Reset()         { *m = MsgAcknowledgeBridgesResponse{} }
func (m *MsgAcknowledgeBridgesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAcknowledgeBridgesResponse) ProtoMessage()    {}
func (*MsgAcknowledgeBridgesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{1}
}
func (m *MsgAcknowledgeBridgesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcknowledgeBridgesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcknowledgeBridgesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcknowledgeBridgesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcknowledgeBridgesResponse.Merge(m, src)
}
func (m *MsgAcknowledgeBridgesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcknowledgeBridgesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcknowledgeBridgesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcknowledgeBridgesResponse proto.InternalMessageInfo

// MsgCompleteBridge is the Msg/CompleteBridgeResponse request type.
type MsgCompleteBridge struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The event to complete.
	Event BridgeEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event"`
}

func (m *MsgCompleteBridge) Reset()         { *m = MsgCompleteBridge{} }
func (m *MsgCompleteBridge) String() string { return proto.CompactTextString(m) }
func (*MsgCompleteBridge) ProtoMessage()    {}
func (*MsgCompleteBridge) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{2}
}
func (m *MsgCompleteBridge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompleteBridge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompleteBridge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompleteBridge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompleteBridge.Merge(m, src)
}
func (m *MsgCompleteBridge) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompleteBridge) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompleteBridge.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompleteBridge proto.InternalMessageInfo

func (m *MsgCompleteBridge) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgCompleteBridge) GetEvent() BridgeEvent {
	if m != nil {
		return m.Event
	}
	return BridgeEvent{}
}

// MsgCompleteBridgeResponse is the Msg/CompleteBridgeResponse response type.
type MsgCompleteBridgeResponse struct {
}

func (m *MsgCompleteBridgeResponse) Reset()         { *m = MsgCompleteBridgeResponse{} }
func (m *MsgCompleteBridgeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCompleteBridgeResponse) ProtoMessage()    {}
func (*MsgCompleteBridgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{3}
}
func (m *MsgCompleteBridgeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompleteBridgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompleteBridgeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompleteBridgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompleteBridgeResponse.Merge(m, src)
}
func (m *MsgCompleteBridgeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompleteBridgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompleteBridgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompleteBridgeResponse proto.InternalMessageInfo

// MsgUpdateEventParams is the Msg/UpdateEventParams request type.
type MsgUpdateEventParams struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The parameters to update. Each field must be set.
	Params EventParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateEventParams) Reset()         { *m = MsgUpdateEventParams{} }
func (m *MsgUpdateEventParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEventParams) ProtoMessage()    {}
func (*MsgUpdateEventParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{4}
}
func (m *MsgUpdateEventParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEventParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEventParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEventParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEventParams.Merge(m, src)
}
func (m *MsgUpdateEventParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEventParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEventParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEventParams proto.InternalMessageInfo

func (m *MsgUpdateEventParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateEventParams) GetParams() EventParams {
	if m != nil {
		return m.Params
	}
	return EventParams{}
}

// MsgUpdateEventParamsResponse is the Msg/UpdateEventParams response type.
type MsgUpdateEventParamsResponse struct {
}

func (m *MsgUpdateEventParamsResponse) Reset()         { *m = MsgUpdateEventParamsResponse{} }
func (m *MsgUpdateEventParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEventParamsResponse) ProtoMessage()    {}
func (*MsgUpdateEventParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{5}
}
func (m *MsgUpdateEventParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEventParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEventParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEventParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEventParamsResponse.Merge(m, src)
}
func (m *MsgUpdateEventParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEventParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEventParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEventParamsResponse proto.InternalMessageInfo

// MsgUpdateProposeParams is the Msg/UpdateProposeParams request type.
type MsgUpdateProposeParams struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The parameters to update. Each field must be set.
	Params ProposeParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateProposeParams) Reset()         { *m = MsgUpdateProposeParams{} }
func (m *MsgUpdateProposeParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProposeParams) ProtoMessage()    {}
func (*MsgUpdateProposeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{6}
}
func (m *MsgUpdateProposeParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProposeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProposeParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProposeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProposeParams.Merge(m, src)
}
func (m *MsgUpdateProposeParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProposeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProposeParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProposeParams proto.InternalMessageInfo

func (m *MsgUpdateProposeParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateProposeParams) GetParams() ProposeParams {
	if m != nil {
		return m.Params
	}
	return ProposeParams{}
}

// MsgUpdateProposeParamsResponse is the Msg/UpdateProposeParams response type.
type MsgUpdateProposeParamsResponse struct {
}

func (m *MsgUpdateProposeParamsResponse) Reset()         { *m = MsgUpdateProposeParamsResponse{} }
func (m *MsgUpdateProposeParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProposeParamsResponse) ProtoMessage()    {}
func (*MsgUpdateProposeParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{7}
}
func (m *MsgUpdateProposeParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProposeParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProposeParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProposeParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProposeParamsResponse.Merge(m, src)
}
func (m *MsgUpdateProposeParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProposeParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProposeParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProposeParamsResponse proto.InternalMessageInfo

// MsgUpdateSafetyParams is the Msg/UpdateSafetyParams request type.
type MsgUpdateSafetyParams struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The parameters to update. Each field must be set.
	Params SafetyParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateSafetyParams) Reset()         { *m = MsgUpdateSafetyParams{} }
func (m *MsgUpdateSafetyParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSafetyParams) ProtoMessage()    {}
func (*MsgUpdateSafetyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{8}
}
func (m *MsgUpdateSafetyParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSafetyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSafetyParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSafetyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSafetyParams.Merge(m, src)
}
func (m *MsgUpdateSafetyParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSafetyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSafetyParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSafetyParams proto.InternalMessageInfo

func (m *MsgUpdateSafetyParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateSafetyParams) GetParams() SafetyParams {
	if m != nil {
		return m.Params
	}
	return SafetyParams{}
}

// MsgUpdateSafetyParamsResponse is the Msg/UpdateSafetyParams response type.
type MsgUpdateSafetyParamsResponse struct {
}

func (m *MsgUpdateSafetyParamsResponse) Reset()         { *m = MsgUpdateSafetyParamsResponse{} }
func (m *MsgUpdateSafetyParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSafetyParamsResponse) ProtoMessage()    {}
func (*MsgUpdateSafetyParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_460b12e368aa3378, []int{9}
}
func (m *MsgUpdateSafetyParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSafetyParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSafetyParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSafetyParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSafetyParamsResponse.Merge(m, src)
}
func (m *MsgUpdateSafetyParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSafetyParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSafetyParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSafetyParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAcknowledgeBridges)(nil), "klyraprotocol.bridge.MsgAcknowledgeBridges")
	proto.RegisterType((*MsgAcknowledgeBridgesResponse)(nil), "klyraprotocol.bridge.MsgAcknowledgeBridgesResponse")
	proto.RegisterType((*MsgCompleteBridge)(nil), "klyraprotocol.bridge.MsgCompleteBridge")
	proto.RegisterType((*MsgCompleteBridgeResponse)(nil), "klyraprotocol.bridge.MsgCompleteBridgeResponse")
	proto.RegisterType((*MsgUpdateEventParams)(nil), "klyraprotocol.bridge.MsgUpdateEventParams")
	proto.RegisterType((*MsgUpdateEventParamsResponse)(nil), "klyraprotocol.bridge.MsgUpdateEventParamsResponse")
	proto.RegisterType((*MsgUpdateProposeParams)(nil), "klyraprotocol.bridge.MsgUpdateProposeParams")
	proto.RegisterType((*MsgUpdateProposeParamsResponse)(nil), "klyraprotocol.bridge.MsgUpdateProposeParamsResponse")
	proto.RegisterType((*MsgUpdateSafetyParams)(nil), "klyraprotocol.bridge.MsgUpdateSafetyParams")
	proto.RegisterType((*MsgUpdateSafetyParamsResponse)(nil), "klyraprotocol.bridge.MsgUpdateSafetyParamsResponse")
}

func init() { proto.RegisterFile("klyraprotocol/bridge/tx.proto", fileDescriptor_460b12e368aa3378) }

var fileDescriptor_460b12e368aa3378 = []byte{
	// 572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xcd, 0xd2, 0x52, 0xa9, 0x83, 0x54, 0xa9, 0x26, 0x40, 0x6a, 0xa8, 0x9b, 0x86, 0x43, 0xab,
	0x96, 0xd8, 0x22, 0x45, 0x1c, 0x90, 0x50, 0x49, 0x10, 0xbd, 0x45, 0x8a, 0x12, 0x21, 0x21, 0x2e,
	0xc5, 0xb1, 0x97, 0x8d, 0x69, 0xec, 0xb5, 0xbc, 0xdb, 0x50, 0x5f, 0xf9, 0x02, 0xce, 0x5c, 0x10,
	0xe2, 0x07, 0x38, 0xf0, 0x11, 0x3d, 0x16, 0x4e, 0x9c, 0x10, 0x4a, 0x0e, 0xfc, 0x06, 0x8a, 0xd7,
	0x76, 0x93, 0x78, 0xd3, 0x34, 0xf4, 0x64, 0x7b, 0xe6, 0xcd, 0xbc, 0xf7, 0xd6, 0x33, 0x5a, 0x58,
	0x3f, 0xea, 0x86, 0x81, 0xe9, 0x07, 0x94, 0x53, 0x8b, 0x76, 0x8d, 0x76, 0xe0, 0xd8, 0x04, 0x1b,
	0xfc, 0x44, 0x8f, 0x42, 0x4a, 0x7e, 0x2c, 0xad, 0x8b, 0xb4, 0xba, 0x66, 0x51, 0xe6, 0x52, 0x76,
	0x18, 0xc5, 0x0d, 0xf1, 0x21, 0x0a, 0xd4, 0x3b, 0xe2, 0xcb, 0x70, 0x19, 0x31, 0x7a, 0x0f, 0x87,
	0x8f, 0x38, 0xb1, 0x25, 0x25, 0x12, 0x8f, 0x43, 0xdc, 0xc3, 0x1e, 0x8f, 0x81, 0x9b, 0x52, 0xa0,
	0x6f, 0x06, 0xa6, 0x9b, 0x90, 0xe4, 0x09, 0x25, 0x54, 0x90, 0x0f, 0xdf, 0x44, 0xb4, 0xf4, 0x0a,
	0x6e, 0xd5, 0x19, 0xa9, 0x5a, 0x47, 0x1e, 0x7d, 0xdf, 0xc5, 0x36, 0xc1, 0xb5, 0xa8, 0x94, 0x29,
	0xfb, 0xb0, 0x14, 0x11, 0xb0, 0x02, 0x2a, 0x2e, 0x6c, 0xdf, 0xa8, 0x6c, 0xea, 0x32, 0x57, 0xba,
	0x80, 0xbf, 0x18, 0x22, 0x6b, 0x8b, 0xa7, 0xbf, 0x37, 0x72, 0xcd, 0xb8, 0xac, 0xb4, 0x01, 0xeb,
	0xd2, 0xce, 0x4d, 0xcc, 0x7c, 0xea, 0x31, 0x5c, 0xfa, 0x84, 0x60, 0xb5, 0xce, 0xc8, 0x73, 0xea,
	0xfa, 0x5d, 0xcc, 0xe3, 0xb4, 0xf2, 0x18, 0x96, 0xcd, 0x63, 0xde, 0xa1, 0x81, 0xc3, 0xc3, 0x02,
	0x2a, 0xa2, 0xed, 0xe5, 0x5a, 0xe1, 0xe7, 0xf7, 0x72, 0x3e, 0x3e, 0xb0, 0xaa, 0x6d, 0x07, 0x98,
	0xb1, 0x16, 0x0f, 0x1c, 0x8f, 0x34, 0xcf, 0xa1, 0xca, 0x53, 0xb8, 0x1e, 0x11, 0x17, 0xae, 0x15,
	0xd1, 0x3c, 0x72, 0x45, 0xd5, 0x93, 0x95, 0x0f, 0x7f, 0xbf, 0xed, 0x9c, 0xb7, 0x2b, 0xdd, 0x85,
	0xb5, 0x8c, 0xb6, 0x54, 0xf9, 0x67, 0x04, 0xf9, 0x3a, 0x23, 0x2f, 0x7d, 0xdb, 0xe4, 0xa2, 0x59,
	0x23, 0x3a, 0xe9, 0xff, 0x16, 0xbf, 0x0f, 0x4b, 0xe2, 0x5f, 0x5d, 0xac, 0x7e, 0x84, 0x2a, 0x39,
	0x6c, 0x51, 0x96, 0x91, 0xaf, 0xc1, 0x3d, 0x99, 0xc0, 0xd4, 0xc1, 0x57, 0x04, 0xb7, 0x53, 0x40,
	0x23, 0xa0, 0x3e, 0x65, 0xf8, 0x8a, 0x1e, 0xaa, 0x13, 0x1e, 0xee, 0xcb, 0x3d, 0x8c, 0x91, 0xcd,
	0x70, 0x51, 0x04, 0x4d, 0x2e, 0x32, 0xf5, 0xf1, 0x05, 0x45, 0xf3, 0x2b, 0x20, 0x2d, 0xf3, 0x2d,
	0xe6, 0xe1, 0x15, 0x6d, 0x3c, 0x9b, 0xb0, 0x51, 0x92, 0xdb, 0x18, 0xe5, 0x9a, 0xe1, 0x42, 0x2c,
	0x42, 0x56, 0x62, 0x62, 0xa2, 0xf2, 0x63, 0x11, 0x16, 0xea, 0x8c, 0x28, 0x3d, 0x50, 0x24, 0x8b,
	0xb8, 0x2b, 0x17, 0x20, 0xdd, 0x2d, 0x75, 0x6f, 0x0e, 0x70, 0xc2, 0xaf, 0xbc, 0x83, 0x95, 0x89,
	0x25, 0xdc, 0x9a, 0xda, 0x66, 0x1c, 0xa8, 0x1a, 0x97, 0x04, 0xa6, 0x5c, 0x0c, 0x56, 0xb3, 0x6b,
	0xb3, 0x33, 0xb5, 0x4b, 0x06, 0xab, 0x56, 0x2e, 0x8f, 0x4d, 0x49, 0x43, 0xb8, 0x29, 0x9b, 0xf4,
	0x07, 0x33, 0x5a, 0x8d, 0xa1, 0xd5, 0x47, 0xf3, 0xa0, 0x53, 0xea, 0x1e, 0x28, 0x92, 0xe1, 0xdc,
	0x9d, 0xd1, 0x6b, 0x14, 0x7c, 0xc1, 0x3f, 0x9d, 0x3e, 0x53, 0xb5, 0x37, 0xa7, 0x7d, 0x0d, 0x9d,
	0xf5, 0x35, 0xf4, 0xa7, 0xaf, 0xa1, 0x8f, 0x03, 0x2d, 0x77, 0x36, 0xd0, 0x72, 0xbf, 0x06, 0x5a,
	0xee, 0xf5, 0x01, 0x71, 0x78, 0xe7, 0xb8, 0xad, 0x5b, 0xd4, 0x35, 0x5a, 0x3c, 0xc0, 0xa6, 0x7b,
	0xe0, 0x78, 0xa6, 0x67, 0xe1, 0x72, 0x23, 0xb9, 0x3e, 0x58, 0x14, 0x2e, 0x5b, 0x1d, 0xd3, 0xf1,
	0x8c, 0xf4, 0x52, 0x39, 0x49, 0x2f, 0xba, 0xd0, 0xc7, 0xac, 0xbd, 0x14, 0x25, 0xf6, 0xfe, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x09, 0xa7, 0x78, 0xbd, 0x0d, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AcknowledgeBridges acknowledges bridges and sets them to complete at a
	// later block.
	AcknowledgeBridges(ctx context.Context, in *MsgAcknowledgeBridges, opts ...grpc.CallOption) (*MsgAcknowledgeBridgesResponse, error)
	// CompleteBridge finalizes a bridge by minting coins to an address.
	CompleteBridge(ctx context.Context, in *MsgCompleteBridge, opts ...grpc.CallOption) (*MsgCompleteBridgeResponse, error)
	// UpdateEventParams updates the EventParams in state.
	UpdateEventParams(ctx context.Context, in *MsgUpdateEventParams, opts ...grpc.CallOption) (*MsgUpdateEventParamsResponse, error)
	// UpdateProposeParams updates the ProposeParams in state.
	UpdateProposeParams(ctx context.Context, in *MsgUpdateProposeParams, opts ...grpc.CallOption) (*MsgUpdateProposeParamsResponse, error)
	// UpdateSafetyParams updates the SafetyParams in state.
	UpdateSafetyParams(ctx context.Context, in *MsgUpdateSafetyParams, opts ...grpc.CallOption) (*MsgUpdateSafetyParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AcknowledgeBridges(ctx context.Context, in *MsgAcknowledgeBridges, opts ...grpc.CallOption) (*MsgAcknowledgeBridgesResponse, error) {
	out := new(MsgAcknowledgeBridgesResponse)
	err := c.cc.Invoke(ctx, "/klyraprotocol.bridge.Msg/AcknowledgeBridges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CompleteBridge(ctx context.Context, in *MsgCompleteBridge, opts ...grpc.CallOption) (*MsgCompleteBridgeResponse, error) {
	out := new(MsgCompleteBridgeResponse)
	err := c.cc.Invoke(ctx, "/klyraprotocol.bridge.Msg/CompleteBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEventParams(ctx context.Context, in *MsgUpdateEventParams, opts ...grpc.CallOption) (*MsgUpdateEventParamsResponse, error) {
	out := new(MsgUpdateEventParamsResponse)
	err := c.cc.Invoke(ctx, "/klyraprotocol.bridge.Msg/UpdateEventParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProposeParams(ctx context.Context, in *MsgUpdateProposeParams, opts ...grpc.CallOption) (*MsgUpdateProposeParamsResponse, error) {
	out := new(MsgUpdateProposeParamsResponse)
	err := c.cc.Invoke(ctx, "/klyraprotocol.bridge.Msg/UpdateProposeParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSafetyParams(ctx context.Context, in *MsgUpdateSafetyParams, opts ...grpc.CallOption) (*MsgUpdateSafetyParamsResponse, error) {
	out := new(MsgUpdateSafetyParamsResponse)
	err := c.cc.Invoke(ctx, "/klyraprotocol.bridge.Msg/UpdateSafetyParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AcknowledgeBridges acknowledges bridges and sets them to complete at a
	// later block.
	AcknowledgeBridges(context.Context, *MsgAcknowledgeBridges) (*MsgAcknowledgeBridgesResponse, error)
	// CompleteBridge finalizes a bridge by minting coins to an address.
	CompleteBridge(context.Context, *MsgCompleteBridge) (*MsgCompleteBridgeResponse, error)
	// UpdateEventParams updates the EventParams in state.
	UpdateEventParams(context.Context, *MsgUpdateEventParams) (*MsgUpdateEventParamsResponse, error)
	// UpdateProposeParams updates the ProposeParams in state.
	UpdateProposeParams(context.Context, *MsgUpdateProposeParams) (*MsgUpdateProposeParamsResponse, error)
	// UpdateSafetyParams updates the SafetyParams in state.
	UpdateSafetyParams(context.Context, *MsgUpdateSafetyParams) (*MsgUpdateSafetyParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AcknowledgeBridges(ctx context.Context, req *MsgAcknowledgeBridges) (*MsgAcknowledgeBridgesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcknowledgeBridges not implemented")
}
func (*UnimplementedMsgServer) CompleteBridge(ctx context.Context, req *MsgCompleteBridge) (*MsgCompleteBridgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteBridge not implemented")
}
func (*UnimplementedMsgServer) UpdateEventParams(ctx context.Context, req *MsgUpdateEventParams) (*MsgUpdateEventParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEventParams not implemented")
}
func (*UnimplementedMsgServer) UpdateProposeParams(ctx context.Context, req *MsgUpdateProposeParams) (*MsgUpdateProposeParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProposeParams not implemented")
}
func (*UnimplementedMsgServer) UpdateSafetyParams(ctx context.Context, req *MsgUpdateSafetyParams) (*MsgUpdateSafetyParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSafetyParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AcknowledgeBridges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAcknowledgeBridges)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AcknowledgeBridges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/klyraprotocol.bridge.Msg/AcknowledgeBridges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AcknowledgeBridges(ctx, req.(*MsgAcknowledgeBridges))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CompleteBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCompleteBridge)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CompleteBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/klyraprotocol.bridge.Msg/CompleteBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CompleteBridge(ctx, req.(*MsgCompleteBridge))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEventParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEventParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEventParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/klyraprotocol.bridge.Msg/UpdateEventParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEventParams(ctx, req.(*MsgUpdateEventParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProposeParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProposeParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProposeParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/klyraprotocol.bridge.Msg/UpdateProposeParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProposeParams(ctx, req.(*MsgUpdateProposeParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSafetyParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSafetyParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSafetyParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/klyraprotocol.bridge.Msg/UpdateSafetyParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSafetyParams(ctx, req.(*MsgUpdateSafetyParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "klyraprotocol.bridge.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcknowledgeBridges",
			Handler:    _Msg_AcknowledgeBridges_Handler,
		},
		{
			MethodName: "CompleteBridge",
			Handler:    _Msg_CompleteBridge_Handler,
		},
		{
			MethodName: "UpdateEventParams",
			Handler:    _Msg_UpdateEventParams_Handler,
		},
		{
			MethodName: "UpdateProposeParams",
			Handler:    _Msg_UpdateProposeParams_Handler,
		},
		{
			MethodName: "UpdateSafetyParams",
			Handler:    _Msg_UpdateSafetyParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "klyraprotocol/bridge/tx.proto",
}

func (m *MsgAcknowledgeBridges) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcknowledgeBridges) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcknowledgeBridges) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcknowledgeBridgesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcknowledgeBridgesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcknowledgeBridgesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCompleteBridge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompleteBridge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompleteBridge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Event.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompleteBridgeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompleteBridgeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompleteBridgeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEventParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEventParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEventParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEventParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEventParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEventParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProposeParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProposeParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProposeParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProposeParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProposeParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProposeParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSafetyParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSafetyParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSafetyParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSafetyParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSafetyParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSafetyParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAcknowledgeBridges) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAcknowledgeBridgesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCompleteBridge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Event.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCompleteBridgeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateEventParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateEventParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateProposeParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateProposeParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSafetyParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateSafetyParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAcknowledgeBridges) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcknowledgeBridges: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcknowledgeBridges: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, BridgeEvent{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcknowledgeBridgesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcknowledgeBridgesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcknowledgeBridgesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompleteBridge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompleteBridge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompleteBridge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Event.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompleteBridgeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompleteBridgeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompleteBridgeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEventParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEventParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEventParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEventParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEventParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEventParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProposeParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProposeParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProposeParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProposeParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProposeParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProposeParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSafetyParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSafetyParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSafetyParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSafetyParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSafetyParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSafetyParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
