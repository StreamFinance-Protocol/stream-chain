// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	assetstypes "github.com/StreamFinance-Protocol/stream-chain/protocol/x/assets/types"

	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// AssetsKeeper is an autogenerated mock type for the AssetsKeeper type
type AssetsKeeper struct {
	mock.Mock
}

// GetAsset provides a mock function with given fields: ctx, id
func (_m *AssetsKeeper) GetAsset(ctx types.Context, id uint32) (assetstypes.Asset, bool) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetAsset")
	}

	var r0 assetstypes.Asset
	var r1 bool
	if rf, ok := ret.Get(0).(func(types.Context, uint32) (assetstypes.Asset, bool)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(types.Context, uint32) assetstypes.Asset); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(assetstypes.Asset)
	}

	if rf, ok := ret.Get(1).(func(types.Context, uint32) bool); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// NewAssetsKeeper creates a new instance of AssetsKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAssetsKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *AssetsKeeper {
	mock := &AssetsKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
