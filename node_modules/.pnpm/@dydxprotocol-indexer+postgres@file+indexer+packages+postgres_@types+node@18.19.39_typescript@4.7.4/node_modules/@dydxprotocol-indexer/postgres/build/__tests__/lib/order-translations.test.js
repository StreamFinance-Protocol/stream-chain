"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const SubaccountTable = __importStar(require("../../src/stores/subaccount-table"));
const constants_1 = require("../helpers/constants");
const v4_protos_1 = require("@dydxprotocol-indexer/v4-protos");
const v4_proto_parser_1 = require("@dydxprotocol-indexer/v4-proto-parser");
const long_1 = __importDefault(require("long"));
const order_translations_1 = require("../../src/lib/order-translations");
const db_helpers_1 = require("../../src/helpers/db-helpers");
describe('orderTranslations', () => {
    beforeAll(async () => {
        await (0, db_helpers_1.migrate)();
    });
    afterEach(async () => {
        await (0, db_helpers_1.clearData)();
    });
    afterAll(async () => {
        await (0, db_helpers_1.teardown)();
    });
    describe('convertToIndexerOrder', () => {
        it('successfully converts to indexer order', async () => {
            await SubaccountTable.create(constants_1.defaultSubaccount);
            const order = {
                ...constants_1.defaultOrderGoodTilBlockTime,
                id: constants_1.defaultOrderId,
            };
            const expectedOrder = {
                orderId: {
                    subaccountId: {
                        owner: constants_1.defaultSubaccount.address,
                        number: constants_1.defaultSubaccount.subaccountNumber,
                    },
                    clientId: 2,
                    clobPairId: 1,
                    orderFlags: v4_proto_parser_1.ORDER_FLAG_LONG_TERM,
                },
                side: v4_protos_1.IndexerOrder_Side.SIDE_BUY,
                quantums: long_1.default.fromValue(250000000000, true),
                subticks: long_1.default.fromValue(200000000, true),
                goodTilBlockTime: 1674345600,
                timeInForce: v4_protos_1.IndexerOrder_TimeInForce.TIME_IN_FORCE_FILL_OR_KILL,
                reduceOnly: false,
                clientMetadata: 0,
                conditionType: v4_protos_1.IndexerOrder_ConditionType.CONDITION_TYPE_UNSPECIFIED,
                conditionalOrderTriggerSubticks: long_1.default.fromValue(0, true),
            };
            const indexerOrder = await (0, order_translations_1.convertToIndexerOrder)(order, constants_1.defaultPerpetualMarket);
            expect(indexerOrder).toEqual(expectedOrder);
        });
    });
    it('successfully converts conditional to indexer order', async () => {
        await SubaccountTable.create(constants_1.defaultSubaccount);
        const order = {
            ...constants_1.defaultConditionalOrder,
            id: constants_1.defaultConditionalOrderId,
        };
        const expectedOrder = {
            orderId: {
                subaccountId: {
                    owner: constants_1.defaultSubaccount.address,
                    number: constants_1.defaultSubaccount.subaccountNumber,
                },
                clientId: 3,
                clobPairId: 1,
                orderFlags: v4_proto_parser_1.ORDER_FLAG_CONDITIONAL,
            },
            side: v4_protos_1.IndexerOrder_Side.SIDE_BUY,
            quantums: long_1.default.fromValue(250000000000, true),
            subticks: long_1.default.fromValue(200000000, true),
            goodTilBlockTime: 1674345600,
            timeInForce: v4_protos_1.IndexerOrder_TimeInForce.TIME_IN_FORCE_FILL_OR_KILL,
            reduceOnly: false,
            clientMetadata: 0,
            conditionType: v4_protos_1.IndexerOrder_ConditionType.CONDITION_TYPE_STOP_LOSS,
            // 19_000 * 1e-10 / 1e-6 / 1e-8 = 190_000_000
            conditionalOrderTriggerSubticks: long_1.default.fromValue(190000000, true),
        };
        const indexerOrder = await (0, order_translations_1.convertToIndexerOrder)(order, constants_1.defaultPerpetualMarket);
        expect(indexerOrder).toEqual(expectedOrder);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItdHJhbnNsYXRpb25zLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9fX3Rlc3RzX18vbGliL29yZGVyLXRyYW5zbGF0aW9ucy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtRkFBcUU7QUFDckUsb0RBTzhCO0FBRTlCLCtEQUV5QztBQUN6QywyRUFBcUc7QUFDckcsZ0RBQXdCO0FBQ3hCLHlFQUF5RTtBQUN6RSw2REFBNEU7QUFFNUUsUUFBUSxDQUFDLG1CQUFtQixFQUFFLEdBQUcsRUFBRTtJQUNqQyxTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDbkIsTUFBTSxJQUFBLG9CQUFPLEdBQUUsQ0FBQztJQUNsQixDQUFDLENBQUMsQ0FBQztJQUVILFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNuQixNQUFNLElBQUEsc0JBQVMsR0FBRSxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ2xCLE1BQU0sSUFBQSxxQkFBUSxHQUFFLENBQUM7SUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxFQUFFO1FBQ3JDLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBRSxLQUFLLElBQUksRUFBRTtZQUN0RCxNQUFNLGVBQWUsQ0FBQyxNQUFNLENBQUMsNkJBQWlCLENBQUMsQ0FBQztZQUNoRCxNQUFNLEtBQUssR0FBc0I7Z0JBQy9CLEdBQUcsd0NBQTRCO2dCQUMvQixFQUFFLEVBQUUsMEJBQWM7YUFDbkIsQ0FBQztZQUNGLE1BQU0sYUFBYSxHQUFpQjtnQkFDbEMsT0FBTyxFQUFFO29CQUNQLFlBQVksRUFBRTt3QkFDWixLQUFLLEVBQUUsNkJBQWlCLENBQUMsT0FBTzt3QkFDaEMsTUFBTSxFQUFFLDZCQUFpQixDQUFDLGdCQUFnQjtxQkFDM0M7b0JBQ0QsUUFBUSxFQUFFLENBQUM7b0JBQ1gsVUFBVSxFQUFFLENBQUM7b0JBQ2IsVUFBVSxFQUFFLHNDQUFvQjtpQkFDakM7Z0JBQ0QsSUFBSSxFQUFFLDZCQUFpQixDQUFDLFFBQVE7Z0JBQ2hDLFFBQVEsRUFBRSxjQUFJLENBQUMsU0FBUyxDQUFDLFlBQWUsRUFBRSxJQUFJLENBQUM7Z0JBQy9DLFFBQVEsRUFBRSxjQUFJLENBQUMsU0FBUyxDQUFDLFNBQVcsRUFBRSxJQUFJLENBQUM7Z0JBQzNDLGdCQUFnQixFQUFFLFVBQVU7Z0JBQzVCLFdBQVcsRUFBRSxvQ0FBd0IsQ0FBQywwQkFBMEI7Z0JBQ2hFLFVBQVUsRUFBRSxLQUFLO2dCQUNqQixjQUFjLEVBQUUsQ0FBQztnQkFDakIsYUFBYSxFQUFFLHNDQUEwQixDQUFDLDBCQUEwQjtnQkFDcEUsK0JBQStCLEVBQUUsY0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDO2FBQ3pELENBQUM7WUFDRixNQUFNLFlBQVksR0FBaUIsTUFBTSxJQUFBLDBDQUFxQixFQUFDLEtBQUssRUFBRSxrQ0FBc0IsQ0FBQyxDQUFDO1lBQzlGLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxvREFBb0QsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNsRSxNQUFNLGVBQWUsQ0FBQyxNQUFNLENBQUMsNkJBQWlCLENBQUMsQ0FBQztRQUNoRCxNQUFNLEtBQUssR0FBc0I7WUFDL0IsR0FBRyxtQ0FBdUI7WUFDMUIsRUFBRSxFQUFFLHFDQUF5QjtTQUM5QixDQUFDO1FBQ0YsTUFBTSxhQUFhLEdBQWlCO1lBQ2xDLE9BQU8sRUFBRTtnQkFDUCxZQUFZLEVBQUU7b0JBQ1osS0FBSyxFQUFFLDZCQUFpQixDQUFDLE9BQU87b0JBQ2hDLE1BQU0sRUFBRSw2QkFBaUIsQ0FBQyxnQkFBZ0I7aUJBQzNDO2dCQUNELFFBQVEsRUFBRSxDQUFDO2dCQUNYLFVBQVUsRUFBRSxDQUFDO2dCQUNiLFVBQVUsRUFBRSx3Q0FBc0I7YUFDbkM7WUFDRCxJQUFJLEVBQUUsNkJBQWlCLENBQUMsUUFBUTtZQUNoQyxRQUFRLEVBQUUsY0FBSSxDQUFDLFNBQVMsQ0FBQyxZQUFlLEVBQUUsSUFBSSxDQUFDO1lBQy9DLFFBQVEsRUFBRSxjQUFJLENBQUMsU0FBUyxDQUFDLFNBQVcsRUFBRSxJQUFJLENBQUM7WUFDM0MsZ0JBQWdCLEVBQUUsVUFBVTtZQUM1QixXQUFXLEVBQUUsb0NBQXdCLENBQUMsMEJBQTBCO1lBQ2hFLFVBQVUsRUFBRSxLQUFLO1lBQ2pCLGNBQWMsRUFBRSxDQUFDO1lBQ2pCLGFBQWEsRUFBRSxzQ0FBMEIsQ0FBQyx3QkFBd0I7WUFDbEUsNkNBQTZDO1lBQzdDLCtCQUErQixFQUFFLGNBQUksQ0FBQyxTQUFTLENBQUMsU0FBVyxFQUFFLElBQUksQ0FBQztTQUNuRSxDQUFDO1FBQ0YsTUFBTSxZQUFZLEdBQWlCLE1BQU0sSUFBQSwwQ0FBcUIsRUFBQyxLQUFLLEVBQUUsa0NBQXNCLENBQUMsQ0FBQztRQUM5RixNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzlDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMifQ==