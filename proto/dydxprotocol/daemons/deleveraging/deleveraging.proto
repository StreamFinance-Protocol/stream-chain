syntax = "proto3";
package dydxprotocol.daemons.deleveraging;

import "gogoproto/gogo.proto";
import "dydxprotocol/clob/liquidations.proto";

option go_package = "github.com/StreamFinance-Protocol/stream-chain/protocol/daemons/deleveraging/api";

// DeleveragingService defines the gRPC service used by deleveraging daemon.
service DeleveragingService {
  // Sends a list of subaccount ids that are to be read by the deleveraging mechanism.
  rpc DeleverageSubaccounts(DeleveragingSubaccountsRequest)
      returns (DeleveragingSubaccountsResponse);
}

// DeleveragingSubaccountsRequest is a request message that contains a list of
// perpetuals with the associated subaccounts that have open long and short positions
message DeleveragingSubaccountsRequest {
  // A map of perpetual id to subaccount open position info.
  repeated dydxprotocol.clob.SubaccountOpenPositionInfo
      subaccount_open_position_info = 1 [ (gogoproto.nullable) = false ];
}

// DeleveragingSubaccountsResponse is a response message for
// DeleverageSubaccountsRequest.
message DeleveragingSubaccountsResponse {}
