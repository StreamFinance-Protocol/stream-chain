// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	types "github.com/cosmos/cosmos-sdk/types"
	mock "github.com/stretchr/testify/mock"
)

// FeeTiersKeeper is an autogenerated mock type for the FeeTiersKeeper type
type FeeTiersKeeper struct {
	mock.Mock
}

// GetPerpetualFeePpm provides a mock function with given fields: ctx, address, isTaker
func (_m *FeeTiersKeeper) GetPerpetualFeePpm(ctx types.Context, address string, isTaker bool) int32 {
	ret := _m.Called(ctx, address, isTaker)

	if len(ret) == 0 {
		panic("no return value specified for GetPerpetualFeePpm")
	}

	var r0 int32
	if rf, ok := ret.Get(0).(func(types.Context, string, bool) int32); ok {
		r0 = rf(ctx, address, isTaker)
	} else {
		r0 = ret.Get(0).(int32)
	}

	return r0
}

// NewFeeTiersKeeper creates a new instance of FeeTiersKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFeeTiersKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *FeeTiersKeeper {
	mock := &FeeTiersKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
