"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../src/types");
const helpers_1 = require("../../src/db/helpers");
const constants_1 = require("../helpers/constants");
const PerpetualPositionTable = __importStar(require("../../src/stores/perpetual-position-table"));
const MarketTable = __importStar(require("../../src/stores/market-table"));
const big_js_1 = __importDefault(require("big.js"));
const mock_generators_1 = require("../helpers/mock-generators");
const lodash_1 = __importDefault(require("lodash"));
const db_helpers_1 = require("../../src/helpers/db-helpers");
describe('helpers', () => {
    afterEach(async () => {
        await (0, db_helpers_1.clearData)();
    });
    describe('getUnsettledFunding', () => {
        const position = {
            ...constants_1.defaultPerpetualPosition,
            id: constants_1.defaultPerpetualPositionId,
            entryPrice: constants_1.defaultPerpetualPosition.entryPrice,
            sumOpen: constants_1.defaultPerpetualPosition.sumOpen,
            sumClose: constants_1.defaultPerpetualPosition.sumClose,
        };
        it('compute unsettled funding for long position', () => {
            expect((0, helpers_1.getUnsettledFunding)(position, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('12050'),
            }, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('10050'),
            })).toEqual((0, big_js_1.default)('-20000')); // 10 * (10050-12050). longs pay shorts when funding index is increasing.
        });
        it('compute unsettled funding for short position', () => {
            const shortPosition = {
                ...position,
                side: types_1.PositionSide.SHORT,
                size: '-10',
            };
            expect((0, helpers_1.getUnsettledFunding)(shortPosition, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('12050'),
            }, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('10050'),
            })).toEqual((0, big_js_1.default)('20000')); // -10 * (10050-12050). longs pay shorts when funding index is increasing.
        });
        it('compute unsettled funding for decimal position', () => {
            const shortPosition = {
                ...position,
                size: '1.35',
            };
            expect((0, helpers_1.getUnsettledFunding)(shortPosition, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('12050.124'),
            }, {
                [constants_1.defaultFundingIndexUpdate.perpetualId]: (0, big_js_1.default)('10050'),
            })).toEqual((0, big_js_1.default)('-2700.1674')); // 1.35 * (10050-12050.124). longs pay shorts when funding index is increasing.
        });
    });
    describe('getUnrealizedPnl', () => {
        it('getUnrealizedPnl long', async () => {
            await (0, mock_generators_1.seedData)();
            const perpetualPosition = await PerpetualPositionTable.create(constants_1.defaultPerpetualPosition);
            const markets = await MarketTable.findAll({}, []);
            const marketIdToMarket = lodash_1.default.keyBy(markets, types_1.MarketColumns.id);
            const unrealizedPnl = (0, helpers_1.getUnrealizedPnl)(perpetualPosition, constants_1.defaultPerpetualMarket, marketIdToMarket);
            expect(unrealizedPnl).toEqual((0, big_js_1.default)(-50000).toFixed());
        });
        it('getUnrealizedPnl short', async () => {
            await (0, mock_generators_1.seedData)();
            const perpetualPosition = await PerpetualPositionTable.create({
                ...constants_1.defaultPerpetualPosition,
                side: types_1.PositionSide.SHORT,
                size: '-10',
            });
            const markets = await MarketTable.findAll({}, []);
            const marketIdToMarket = lodash_1.default.keyBy(markets, types_1.MarketColumns.id);
            const unrealizedPnl = (0, helpers_1.getUnrealizedPnl)(perpetualPosition, constants_1.defaultPerpetualMarket, marketIdToMarket);
            expect(unrealizedPnl).toEqual((0, big_js_1.default)(50000).toFixed());
        });
    });
    describe('getMaintenanceMarginPpm', () => {
        it('5% initial margin, 60% maintenance fraction', () => {
            expect((0, helpers_1.getMaintenanceMarginPpm)(50000, 600000)).toEqual(30000);
        });
        it('25% initial margin, 100% maintenance fraction', () => {
            expect((0, helpers_1.getMaintenanceMarginPpm)(250000, 1000000)).toEqual(250000);
        });
        it('100% initial margin, 0% maintenance fraction', () => {
            expect((0, helpers_1.getMaintenanceMarginPpm)(1000000, 0)).toEqual(0);
        });
        it('0% initial margin, 100% maintenance fraction', () => {
            expect((0, helpers_1.getMaintenanceMarginPpm)(0, 1000000)).toEqual(0);
        });
        it('0% initial margin, 0% maintenance fraction', () => {
            expect((0, helpers_1.getMaintenanceMarginPpm)(0, 0)).toEqual(0);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vX190ZXN0c19fL2RiL2hlbHBlcnMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMkNBTXlCO0FBQ3pCLGtEQUFzRztBQUN0RyxvREFLOEI7QUFDOUIsa0dBQW9GO0FBQ3BGLDJFQUE2RDtBQUM3RCxvREFBeUI7QUFDekIsZ0VBQXNEO0FBQ3RELG9EQUF1QjtBQUN2Qiw2REFBeUQ7QUFFekQsUUFBUSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7SUFFdkIsU0FBUyxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ25CLE1BQU0sSUFBQSxzQkFBUyxHQUFFLENBQUM7SUFDcEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFO1FBQ25DLE1BQU0sUUFBUSxHQUFrQztZQUM5QyxHQUFHLG9DQUF3QjtZQUMzQixFQUFFLEVBQUUsc0NBQTBCO1lBQzlCLFVBQVUsRUFBRSxvQ0FBd0IsQ0FBQyxVQUFvQjtZQUN6RCxPQUFPLEVBQUUsb0NBQXdCLENBQUMsT0FBaUI7WUFDbkQsUUFBUSxFQUFFLG9DQUF3QixDQUFDLFFBQWtCO1NBQ3RELENBQUM7UUFFRixFQUFFLENBQUMsNkNBQTZDLEVBQUUsR0FBRyxFQUFFO1lBQ3JELE1BQU0sQ0FDSixJQUFBLDZCQUFtQixFQUNqQixRQUFRLEVBQ1I7Z0JBQ0UsQ0FBQyxxQ0FBeUIsQ0FBQyxXQUFXLENBQUMsRUFBRSxJQUFBLGdCQUFHLEVBQUMsT0FBTyxDQUFDO2FBQ3RELEVBQ0Q7Z0JBQ0UsQ0FBQyxxQ0FBeUIsQ0FBQyxXQUFXLENBQUMsRUFBRSxJQUFBLGdCQUFHLEVBQUMsT0FBTyxDQUFDO2FBQ3RELENBQ0YsQ0FDRixDQUFDLE9BQU8sQ0FBQyxJQUFBLGdCQUFHLEVBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFFLHlF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