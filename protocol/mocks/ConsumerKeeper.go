// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	types "github.com/cosmos/cosmos-sdk/types"
	mock "github.com/stretchr/testify/mock"
)

// ConsumerKeeper is an autogenerated mock type for the ConsumerKeeper type
type ConsumerKeeper struct {
	mock.Mock
}

// GetProviderChannel provides a mock function with given fields: ctx
func (_m *ConsumerKeeper) GetProviderChannel(ctx types.Context) (string, bool) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetProviderChannel")
	}

	var r0 string
	var r1 bool
	if rf, ok := ret.Get(0).(func(types.Context) (string, bool)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(types.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(types.Context) bool); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// NewConsumerKeeper creates a new instance of ConsumerKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConsumerKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConsumerKeeper {
	mock := &ConsumerKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
