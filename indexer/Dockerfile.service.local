# Dockerfile to containerize services locally
FROM dydxprotocol/indexer-node:16-alpine
ENV NODE_ENV=development
ARG service

RUN apk add --no-cache bash jq aws-cli
RUN addgroup -S klyra && \
    adduser -S klyra -G klyra
RUN mkdir -p /home/klyra/app
RUN chown klyra -R /home/klyra/app

WORKDIR /home/klyra/app

# Copy pnpm lock and workspace and package.json from base directory
COPY ./pnpm-lock.yaml ./pnpm-workspace.yaml ./package.json ./

# Copy package.json from all packages being run
COPY ./packages/base/package.json ./packages/base/
COPY ./packages/kafka/package.json ./packages/kafka/
COPY ./packages/postgres/package.json ./packages/postgres/
COPY ./packages/redis/package.json ./packages/redis/
COPY ./packages/v4-protos/package.json ./packages/v4-protos/
COPY ./packages/v4-proto-parser/package.json ./packages/v4-proto-parser/package.json
COPY ./packages/compliance/package.json ./packages/compliance/

# Copy build files from all packages being run
COPY ./packages/base/build ./packages/base/build/
COPY ./packages/kafka/build ./packages/kafka/build/
COPY ./packages/postgres/build ./packages/postgres/build/
COPY ./packages/redis/build ./packages/redis/build/
COPY ./packages/v4-protos/build ./packages/v4-protos/build/
COPY ./packages/v4-proto-parser/build ./packages/v4-proto-parser/build/
COPY ./packages/compliance/build ./packages/compliance/build/

# Add debug logging before copying service files
RUN echo "Service name: ${service}"
RUN echo "Checking source directory structure:"
RUN ls -la ./services/${service}/build/src/scripts/handlers || echo "Source handlers directory not found"


# Copy package.json, build files, and environment files from service being run
COPY ./services/${service}/package.json ./services/${service}/
COPY ./services/${service}/build ./services/${service}/build
COPY ./services/${service}/.env* ./services/${service}/

# Add debug logging after copying
RUN echo "Checking destination directory structure:"
RUN ls -la /home/klyra/app/services/${service}/build/src/scripts/handlers || echo "Destination handlers directory not found"

# Copy container start script
COPY ./scripts/container-run.sh /home/klyra/app/services/$service/scripts/

RUN chown klyra:klyra -R /home/klyra/app

USER klyra

# NOTE: For prod testing, use "RUN pnpm i --loglevel warn --production --frozen-lockfile"
RUN pnpm i --loglevel warn --frozen-lockfile

WORKDIR /home/klyra/app/services/$service

CMD ["sh", "-c", "bash ./scripts/container-run.sh"]
