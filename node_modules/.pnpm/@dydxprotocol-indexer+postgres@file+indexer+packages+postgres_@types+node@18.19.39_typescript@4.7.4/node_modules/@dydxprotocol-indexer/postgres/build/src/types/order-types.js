"use strict";
/* ------- ORDER TYPES ------- */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderColumns = exports.TimeInForce = exports.OrderType = exports.OrderStatus = exports.OrderSide = void 0;
var OrderSide;
(function (OrderSide) {
    OrderSide["BUY"] = "BUY";
    OrderSide["SELL"] = "SELL";
})(OrderSide = exports.OrderSide || (exports.OrderSide = {}));
var OrderStatus;
(function (OrderStatus) {
    OrderStatus["OPEN"] = "OPEN";
    OrderStatus["FILLED"] = "FILLED";
    OrderStatus["CANCELED"] = "CANCELED";
    OrderStatus["BEST_EFFORT_CANCELED"] = "BEST_EFFORT_CANCELED";
    OrderStatus["UNTRIGGERED"] = "UNTRIGGERED";
})(OrderStatus = exports.OrderStatus || (exports.OrderStatus = {}));
var OrderType;
(function (OrderType) {
    OrderType["LIMIT"] = "LIMIT";
    OrderType["MARKET"] = "MARKET";
    OrderType["STOP_LIMIT"] = "STOP_LIMIT";
    OrderType["STOP_MARKET"] = "STOP_MARKET";
    OrderType["TRAILING_STOP"] = "TRAILING_STOP";
    OrderType["TAKE_PROFIT"] = "TAKE_PROFIT";
    OrderType["TAKE_PROFIT_MARKET"] = "TAKE_PROFIT_MARKET";
    OrderType["HARD_TRADE"] = "HARD_TRADE";
    OrderType["FAILED_HARD_TRADE"] = "FAILED_HARD_TRADE";
    OrderType["TRANSFER_PLACEHOLDER"] = "TRANSFER_PLACEHOLDER";
})(OrderType = exports.OrderType || (exports.OrderType = {}));
var TimeInForce;
(function (TimeInForce) {
    // GTT represents Good-Til-Time, where an order will first match with existing orders on the book
    // and any remaining size will be added to the book as a maker order, which will expire at a
    // given expiry time.
    TimeInForce["GTT"] = "GTT";
    // FOK represents Fill-Or-KILl where it's enforced that an order will either be filled
    // completely and immediately by maker orders on the book or canceled if the entire amount can't
    // be filled.
    TimeInForce["FOK"] = "FOK";
    // IOC represents Immediate-Or-Cancel, where it's enforced that an order only be matched with
    // maker orders on the book. If the order has remaining size after matching with existing orders
    // on the book, the remaining size is not placed on the book.
    TimeInForce["IOC"] = "IOC";
    // POST_ONLY is where it's enforced that an order only be placed on the book as a maker order.
    TimeInForce["POST_ONLY"] = "POST_ONLY";
})(TimeInForce = exports.TimeInForce || (exports.TimeInForce = {}));
var OrderColumns;
(function (OrderColumns) {
    OrderColumns["id"] = "id";
    OrderColumns["subaccountId"] = "subaccountId";
    OrderColumns["clientId"] = "clientId";
    OrderColumns["clobPairId"] = "clobPairId";
    OrderColumns["side"] = "side";
    OrderColumns["size"] = "size";
    OrderColumns["totalFilled"] = "totalFilled";
    OrderColumns["price"] = "price";
    OrderColumns["type"] = "type";
    OrderColumns["status"] = "status";
    OrderColumns["timeInForce"] = "timeInForce";
    OrderColumns["reduceOnly"] = "reduceOnly";
    OrderColumns["goodTilBlock"] = "goodTilBlock";
    OrderColumns["goodTilBlockTime"] = "goodTilBlockTime";
    OrderColumns["perpetualId"] = "perpetualId";
    OrderColumns["openEventId"] = "openEventId";
    OrderColumns["orderFlags"] = "orderFlags";
    OrderColumns["updatedAt"] = "updatedAt";
    OrderColumns["updatedAtHeight"] = "updatedAtHeight";
    OrderColumns["createdAtHeight"] = "createdAtHeight";
    OrderColumns["clientMetadata"] = "clientMetadata";
    OrderColumns["triggerPrice"] = "triggerPrice";
})(OrderColumns = exports.OrderColumns || (exports.OrderColumns = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItdHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdHlwZXMvb3JkZXItdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlDQUFpQzs7O0FBSWpDLElBQVksU0FHWDtBQUhELFdBQVksU0FBUztJQUNuQix3QkFBVyxDQUFBO0lBQ1gsMEJBQWEsQ0FBQTtBQUNmLENBQUMsRUFIVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQUdwQjtBQUVELElBQVksV0FNWDtBQU5ELFdBQVksV0FBVztJQUNyQiw0QkFBYSxDQUFBO0lBQ2IsZ0NBQWlCLENBQUE7SUFDakIsb0NBQXFCLENBQUE7SUFDckIsNERBQTZDLENBQUE7SUFDN0MsMENBQTJCLENBQUE7QUFDN0IsQ0FBQyxFQU5XLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBTXRCO0FBRUQsSUFBWSxTQVdYO0FBWEQsV0FBWSxTQUFTO0lBQ25CLDRCQUFlLENBQUE7SUFDZiw4QkFBaUIsQ0FBQTtJQUNqQixzQ0FBeUIsQ0FBQTtJQUN6Qix3Q0FBMkIsQ0FBQTtJQUMzQiw0Q0FBK0IsQ0FBQTtJQUMvQix3Q0FBMkIsQ0FBQTtJQUMzQixzREFBeUMsQ0FBQTtJQUN6QyxzQ0FBeUIsQ0FBQTtJQUN6QixvREFBdUMsQ0FBQTtJQUN2QywwREFBNkMsQ0FBQTtBQUMvQyxDQUFDLEVBWFcsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXcEI7QUFFRCxJQUFZLFdBZVg7QUFmRCxXQUFZLFdBQVc7SUFDckIsaUdBQWlHO0lBQ2pHLDRGQUE0RjtJQUM1RixxQkFBcUI7SUFDckIsMEJBQVcsQ0FBQTtJQUNYLHNGQUFzRjtJQUN0RixnR0FBZ0c7SUFDaEcsYUFBYTtJQUNiLDBCQUFXLENBQUE7SUFDWCw2RkFBNkY7SUFDN0YsZ0dBQWdHO0lBQ2hHLDZEQUE2RDtJQUM3RCwwQkFBVyxDQUFBO0lBQ1gsOEZBQThGO0lBQzlGLHNDQUF1QixDQUFBO0FBQ3pCLENBQUMsRUFmVyxXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQWV0QjtBQTZDRCxJQUFZLFlBdUJYO0FBdkJELFdBQVksWUFBWTtJQUN0Qix5QkFBUyxDQUFBO0lBQ1QsNkNBQTZCLENBQUE7SUFDN0IscUNBQXFCLENBQUE7SUFDckIseUNBQXlCLENBQUE7SUFDekIsNkJBQWEsQ0FBQTtJQUNiLDZCQUFhLENBQUE7SUFDYiwyQ0FBMkIsQ0FBQTtJQUMzQiwrQkFBZSxDQUFBO0lBQ2YsNkJBQWEsQ0FBQTtJQUNiLGlDQUFpQixDQUFBO0lBQ2pCLDJDQUEyQixDQUFBO0lBQzNCLHlDQUF5QixDQUFBO0lBQ3pCLDZDQUE2QixDQUFBO0lBQzdCLHFEQUFxQyxDQUFBO0lBQ3JDLDJDQUEyQixDQUFBO0lBQzNCLDJDQUEyQixDQUFBO0lBQzNCLHlDQUF5QixDQUFBO0lBQ3pCLHVDQUF1QixDQUFBO0lBQ3ZCLG1EQUFtQyxDQUFBO0lBQ25DLG1EQUFtQyxDQUFBO0lBQ25DLGlEQUFpQyxDQUFBO0lBQ2pDLDZDQUE2QixDQUFBO0FBQy9CLENBQUMsRUF2QlcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUF1QnZCIn0=