// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	big "math/big"

	types "github.com/cosmos/cosmos-sdk/types"
	mock "github.com/stretchr/testify/mock"
)

// VEApplierRatelimitKeeper is an autogenerated mock type for the VEApplierRatelimitKeeper type
type VEApplierRatelimitKeeper struct {
	mock.Mock
}

// SetSDAILastBlockUpdated provides a mock function with given fields: ctx, blockHeight
func (_m *VEApplierRatelimitKeeper) SetSDAILastBlockUpdated(ctx types.Context, blockHeight *big.Int) {
	_m.Called(ctx, blockHeight)
}

// SetSDAIPrice provides a mock function with given fields: ctx, price
func (_m *VEApplierRatelimitKeeper) SetSDAIPrice(ctx types.Context, price *big.Int) {
	_m.Called(ctx, price)
}

// NewVEApplierRatelimitKeeper creates a new instance of VEApplierRatelimitKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVEApplierRatelimitKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *VEApplierRatelimitKeeper {
	mock := &VEApplierRatelimitKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
