// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dydxprotocol/daemons/deleveraging/deleveraging.proto

package api

import (
	context "context"
	fmt "fmt"
	types "github.com/StreamFinance-Protocol/stream-chain/protocol/x/clob/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// UpdateSubaccountsListForDeleveragingDaemonRequest is a request message that contains a list of
// perpetuals with the associated subaccounts that have open long and short positions
type UpdateSubaccountsListForDeleveragingDaemonRequest struct {
	// A map of perpetual id to subaccount open position info.
	SubaccountOpenPositionInfo []types.SubaccountOpenPositionInfo `protobuf:"bytes,1,rep,name=subaccount_open_position_info,json=subaccountOpenPositionInfo,proto3" json:"subaccount_open_position_info"`
}

func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) Reset() {
	*m = UpdateSubaccountsListForDeleveragingDaemonRequest{}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateSubaccountsListForDeleveragingDaemonRequest) ProtoMessage() {}
func (*UpdateSubaccountsListForDeleveragingDaemonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a6698eca0130e6, []int{0}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonRequest.Merge(m, src)
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonRequest proto.InternalMessageInfo

func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) GetSubaccountOpenPositionInfo() []types.SubaccountOpenPositionInfo {
	if m != nil {
		return m.SubaccountOpenPositionInfo
	}
	return nil
}

// UpdateSubaccountsListForDeleveragingDaemonResponse is a response message for
// UpdateSubaccountsListForDeleveragingDaemonRequest.
type UpdateSubaccountsListForDeleveragingDaemonResponse struct {
}

func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) Reset() {
	*m = UpdateSubaccountsListForDeleveragingDaemonResponse{}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateSubaccountsListForDeleveragingDaemonResponse) ProtoMessage() {}
func (*UpdateSubaccountsListForDeleveragingDaemonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a6698eca0130e6, []int{1}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonResponse.Merge(m, src)
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubaccountsListForDeleveragingDaemonResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpdateSubaccountsListForDeleveragingDaemonRequest)(nil), "dydxprotocol.daemons.deleveraging.UpdateSubaccountsListForDeleveragingDaemonRequest")
	proto.RegisterType((*UpdateSubaccountsListForDeleveragingDaemonResponse)(nil), "dydxprotocol.daemons.deleveraging.UpdateSubaccountsListForDeleveragingDaemonResponse")
}

func init() {
	proto.RegisterFile("dydxprotocol/daemons/deleveraging/deleveraging.proto", fileDescriptor_51a6698eca0130e6)
}

var fileDescriptor_51a6698eca0130e6 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x4a, 0xc3, 0x40,
	0x14, 0xc6, 0x33, 0x28, 0x2e, 0xe2, 0x2e, 0xba, 0x90, 0x80, 0x51, 0x8b, 0x0b, 0x11, 0x3a, 0xc1,
	0xda, 0x13, 0x94, 0x52, 0x10, 0x04, 0x4b, 0x6b, 0x37, 0x6e, 0xca, 0x64, 0xf2, 0x9a, 0x8e, 0xa4,
	0xf3, 0xa6, 0x99, 0x49, 0xd1, 0x5b, 0x78, 0x0f, 0x2f, 0xd2, 0x65, 0x97, 0xba, 0x11, 0x69, 0x4f,
	0xe0, 0x0d, 0x24, 0x69, 0xd5, 0x64, 0xe1, 0x9f, 0x82, 0xbb, 0x99, 0x79, 0xbf, 0xef, 0xfb, 0xde,
	0xcc, 0x3c, 0xbb, 0x1e, 0xde, 0x87, 0x77, 0x2a, 0x41, 0x83, 0x1c, 0x63, 0x3f, 0x64, 0x30, 0x42,
	0xa9, 0xfd, 0x10, 0x62, 0x98, 0x40, 0xc2, 0x22, 0x21, 0xa3, 0xd2, 0x86, 0xe6, 0xa8, 0x73, 0x54,
	0x54, 0xd1, 0x95, 0x8a, 0x16, 0x41, 0x77, 0x37, 0xc2, 0x08, 0x73, 0xc4, 0xcf, 0x56, 0x4b, 0xa1,
	0x7b, 0x5c, 0x8a, 0xe3, 0x31, 0x06, 0x7e, 0x2c, 0xc6, 0xa9, 0x08, 0x99, 0x11, 0x99, 0x45, 0x5e,
	0xaa, 0x3c, 0x12, 0xfb, 0xac, 0xa7, 0x42, 0x66, 0xa0, 0x9b, 0x06, 0x8c, 0x73, 0x4c, 0xa5, 0xd1,
	0x97, 0x42, 0x9b, 0x16, 0x26, 0xcd, 0x42, 0x48, 0x33, 0x0f, 0xee, 0xc0, 0x38, 0x05, 0x6d, 0x9c,
	0x89, 0xbd, 0xaf, 0x3f, 0xf1, 0x3e, 0x2a, 0x90, 0x7d, 0x85, 0x5a, 0x64, 0xc6, 0x7d, 0x21, 0x07,
	0xb8, 0x47, 0x0e, 0x37, 0x4e, 0xb6, 0x6b, 0x55, 0x5a, 0x6a, 0x3e, 0xeb, 0x81, 0x7e, 0xc5, 0x5c,
	0x29, 0x90, 0xed, 0x95, 0xea, 0x42, 0x0e, 0xb0, 0xb1, 0x39, 0x7d, 0x39, 0xb0, 0x3a, 0xae, 0xfe,
	0x96, 0xa8, 0xd4, 0xed, 0xda, 0x3a, 0xcd, 0x6a, 0x85, 0x52, 0x43, 0xed, 0x8d, 0xd8, 0x3b, 0xc5,
	0x72, 0x17, 0x92, 0x89, 0xe0, 0xe0, 0x3c, 0x13, 0xfb, 0xf4, 0xef, 0x76, 0xce, 0x35, 0xfd, 0xf5,
	0x2b, 0xe8, 0xda, 0x4f, 0xe9, 0xf6, 0xfe, 0xd9, 0x75, 0x79, 0xe7, 0xc6, 0xed, 0x74, 0xee, 0x91,
	0xd9, 0xdc, 0x23, 0xaf, 0x73, 0x8f, 0x3c, 0x2c, 0x3c, 0x6b, 0xb6, 0xf0, 0xac, 0xa7, 0x85, 0x67,
	0xdd, 0xb4, 0x23, 0x61, 0x86, 0x69, 0x40, 0x39, 0x8e, 0xfc, 0xae, 0x49, 0x80, 0x8d, 0x5a, 0x42,
	0x32, 0xc9, 0xa1, 0xda, 0xfe, 0x18, 0x16, 0x9d, 0x1f, 0x57, 0xf9, 0x90, 0x09, 0xe9, 0xff, 0x3c,
	0xb1, 0x4c, 0x89, 0x60, 0x2b, 0x47, 0xce, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x1a, 0x64,
	0x79, 0xe1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeleveragingServiceClient is the client API for DeleveragingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeleveragingServiceClient interface {
	// Sends a list of subaccount ids that can be deleveraged against
	UpdateSubaccountsListForDeleveragingDaemon(ctx context.Context, in *UpdateSubaccountsListForDeleveragingDaemonRequest, opts ...grpc.CallOption) (*UpdateSubaccountsListForDeleveragingDaemonResponse, error)
}

type deleveragingServiceClient struct {
	cc grpc1.ClientConn
}

func NewDeleveragingServiceClient(cc grpc1.ClientConn) DeleveragingServiceClient {
	return &deleveragingServiceClient{cc}
}

func (c *deleveragingServiceClient) UpdateSubaccountsListForDeleveragingDaemon(ctx context.Context, in *UpdateSubaccountsListForDeleveragingDaemonRequest, opts ...grpc.CallOption) (*UpdateSubaccountsListForDeleveragingDaemonResponse, error) {
	out := new(UpdateSubaccountsListForDeleveragingDaemonResponse)
	err := c.cc.Invoke(ctx, "/dydxprotocol.daemons.deleveraging.DeleveragingService/UpdateSubaccountsListForDeleveragingDaemon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeleveragingServiceServer is the server API for DeleveragingService service.
type DeleveragingServiceServer interface {
	// Sends a list of subaccount ids that can be deleveraged against
	UpdateSubaccountsListForDeleveragingDaemon(context.Context, *UpdateSubaccountsListForDeleveragingDaemonRequest) (*UpdateSubaccountsListForDeleveragingDaemonResponse, error)
}

// UnimplementedDeleveragingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeleveragingServiceServer struct {
}

func (*UnimplementedDeleveragingServiceServer) UpdateSubaccountsListForDeleveragingDaemon(ctx context.Context, req *UpdateSubaccountsListForDeleveragingDaemonRequest) (*UpdateSubaccountsListForDeleveragingDaemonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubaccountsListForDeleveragingDaemon not implemented")
}

func RegisterDeleveragingServiceServer(s grpc1.Server, srv DeleveragingServiceServer) {
	s.RegisterService(&_DeleveragingService_serviceDesc, srv)
}

func _DeleveragingService_UpdateSubaccountsListForDeleveragingDaemon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubaccountsListForDeleveragingDaemonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeleveragingServiceServer).UpdateSubaccountsListForDeleveragingDaemon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dydxprotocol.daemons.deleveraging.DeleveragingService/UpdateSubaccountsListForDeleveragingDaemon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeleveragingServiceServer).UpdateSubaccountsListForDeleveragingDaemon(ctx, req.(*UpdateSubaccountsListForDeleveragingDaemonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeleveragingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dydxprotocol.daemons.deleveraging.DeleveragingService",
	HandlerType: (*DeleveragingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateSubaccountsListForDeleveragingDaemon",
			Handler:    _DeleveragingService_UpdateSubaccountsListForDeleveragingDaemon_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dydxprotocol/daemons/deleveraging/deleveraging.proto",
}

func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubaccountOpenPositionInfo) > 0 {
		for iNdEx := len(m.SubaccountOpenPositionInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SubaccountOpenPositionInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDeleveraging(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintDeleveraging(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeleveraging(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SubaccountOpenPositionInfo) > 0 {
		for _, e := range m.SubaccountOpenPositionInfo {
			l = e.Size()
			n += 1 + l + sovDeleveraging(uint64(l))
		}
	}
	return n
}

func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovDeleveraging(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeleveraging(x uint64) (n int) {
	return sovDeleveraging(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpdateSubaccountsListForDeleveragingDaemonRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeleveraging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateSubaccountsListForDeleveragingDaemonRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateSubaccountsListForDeleveragingDaemonRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubaccountOpenPositionInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeleveraging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeleveraging
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeleveraging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubaccountOpenPositionInfo = append(m.SubaccountOpenPositionInfo, types.SubaccountOpenPositionInfo{})
			if err := m.SubaccountOpenPositionInfo[len(m.SubaccountOpenPositionInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeleveraging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeleveraging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateSubaccountsListForDeleveragingDaemonResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeleveraging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateSubaccountsListForDeleveragingDaemonResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateSubaccountsListForDeleveragingDaemonResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDeleveraging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeleveraging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeleveraging(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeleveraging
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeleveraging
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeleveraging
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeleveraging
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeleveraging
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeleveraging
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeleveraging        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeleveraging          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeleveraging = fmt.Errorf("proto: unexpected end of group")
)
