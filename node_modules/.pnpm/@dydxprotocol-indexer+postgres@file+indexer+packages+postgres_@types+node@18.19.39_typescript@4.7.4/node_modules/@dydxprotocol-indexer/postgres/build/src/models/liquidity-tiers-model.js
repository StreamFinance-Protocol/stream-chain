"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const validators_1 = require("../lib/validators");
const base_model_1 = __importDefault(require("./base-model"));
class LiquidityTiersModel extends base_model_1.default {
    static get tableName() {
        return 'liquidity_tiers';
    }
    static get idColumn() {
        return 'id';
    }
    static get jsonSchema() {
        return {
            type: 'object',
            required: [
                'id',
                'name',
                'initialMarginPpm',
                'maintenanceFractionPpm',
            ],
            properties: {
                id: { type: 'integer' },
                name: { type: 'string' },
                initialMarginPpm: { type: 'string', pattern: validators_1.IntegerPattern },
                maintenanceFractionPpm: { type: 'string', pattern: validators_1.IntegerPattern },
            },
        };
    }
    /**
     * A mapping from column name to JSON conversion expected.
     * See getSqlConversionForDydxModelTypes for valid conversions.
     *
     * TODO(IND-239): Ensure that jsonSchema() / sqlToJsonConversions() / model fields match.
     */
    static get sqlToJsonConversions() {
        return {
            id: 'integer',
            name: 'string',
            initialMarginPpm: 'string',
            maintenanceFractionPpm: 'string',
        };
    }
}
exports.default = LiquidityTiersModel;
LiquidityTiersModel.relationMappings = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlxdWlkaXR5LXRpZXJzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGVscy9saXF1aWRpdHktdGllcnMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrREFBbUQ7QUFFbkQsOERBQXFDO0FBRXJDLE1BQXFCLG1CQUFvQixTQUFRLG9CQUFTO0lBQ3hELE1BQU0sS0FBSyxTQUFTO1FBQ2xCLE9BQU8saUJBQWlCLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sS0FBSyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUlELE1BQU0sS0FBSyxVQUFVO1FBQ25CLE9BQU87WUFDTCxJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRTtnQkFDUixJQUFJO2dCQUNKLE1BQU07Z0JBQ04sa0JBQWtCO2dCQUNsQix3QkFBd0I7YUFDekI7WUFDRCxVQUFVLEVBQUU7Z0JBQ1YsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtnQkFDdkIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRTtnQkFDeEIsZ0JBQWdCLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSwyQkFBYyxFQUFFO2dCQUM3RCxzQkFBc0IsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLDJCQUFjLEVBQUU7YUFDcEU7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxLQUFLLG9CQUFvQjtRQUM3QixPQUFPO1lBQ0wsRUFBRSxFQUFFLFNBQVM7WUFDYixJQUFJLEVBQUUsUUFBUTtZQUNkLGdCQUFnQixFQUFFLFFBQVE7WUFDMUIsc0JBQXNCLEVBQUUsUUFBUTtTQUNqQyxDQUFDO0lBQ0osQ0FBQzs7QUExQ0gsc0NBcURDO0FBNUNRLG9DQUFnQixHQUFHLEVBQUUsQ0FBQyJ9