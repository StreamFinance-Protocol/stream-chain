/// <reference types="node" />
import { OrderSide } from './order-types';
export declare type Market24HourTradeVolumes = {
    clobPairId: string;
    trades24H: string;
    volume24H: string;
};
export declare enum Liquidity {
    TAKER = "TAKER",
    MAKER = "MAKER"
}
export declare enum FillType {
    LIMIT = "LIMIT",
    LIQUIDATED = "LIQUIDATED",
    LIQUIDATION = "LIQUIDATION",
    DELEVERAGED = "DELEVERAGED",
    OFFSETTING = "OFFSETTING"
}
export interface FillCreateObject {
    subaccountId: string;
    side: OrderSide;
    liquidity: Liquidity;
    type: FillType;
    clobPairId: string;
    orderId?: string;
    size: string;
    price: string;
    quoteAmount: string;
    eventId: Buffer;
    transactionHash: string;
    createdAt: string;
    createdAtHeight: string;
    clientMetadata?: string;
    fee: string;
}
export interface FillUpdateObject {
    id: string;
    side?: OrderSide;
    type?: FillType;
    clobPairId?: string;
    orderId?: string | null;
    size?: string;
    price?: string;
    quoteAmount?: string;
}
export declare enum FillColumns {
    id = "id",
    subaccountId = "subaccountId",
    side = "side",
    liquidity = "liquidity",
    type = "type",
    clobPairId = "clobPairId",
    orderId = "orderId",
    size = "size",
    price = "price",
    quoteAmount = "quoteAmount",
    eventId = "eventId",
    transactionHash = "transactionHash",
    createdAt = "createdAt",
    createdAtHeight = "createdAtHeight",
    clientMetadata = "clientMetadata",
    fee = "fee"
}
export declare type CostOfFills = {
    cost: number;
};
export interface OrderedFillsWithFundingIndices {
    id: string;
    subaccountId: string;
    side: OrderSide;
    size: string;
    createdAtHeight: string;
    fundingIndex: string;
    lastFillId: string;
    lastFillSide: OrderSide;
    lastFillSize: string;
    lastFillCreatedAtHeight: string;
    lastFillFundingIndex: string;
}
export interface OpenSizeWithFundingIndex {
    clobPairId: string;
    openSize: string;
    lastFillHeight: string;
    fundingIndex: string;
    fundingIndexHeight: string;
}
