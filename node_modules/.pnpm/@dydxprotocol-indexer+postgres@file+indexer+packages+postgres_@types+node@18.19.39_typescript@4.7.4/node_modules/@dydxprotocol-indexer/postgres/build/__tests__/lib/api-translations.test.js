"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../src/types");
const api_translations_1 = require("../../src/lib/api-translations");
describe('apiTranslations', () => {
    describe('orderTIFToAPITIF', () => {
        it.each([
            ['FOK', types_1.TimeInForce.FOK, types_1.APITimeInForce.FOK],
            ['IOC', types_1.TimeInForce.IOC, types_1.APITimeInForce.IOC],
            ['POST_ONLY', types_1.TimeInForce.POST_ONLY, types_1.APITimeInForce.GTT],
            ['GTT', types_1.TimeInForce.GTT, types_1.APITimeInForce.GTT],
        ])('Converts order time in force to api time in force: %s', (_name, orderTimeInForce, expectedApiTimeInForce) => {
            expect((0, api_translations_1.orderTIFToAPITIF)(orderTimeInForce)).toEqual(expectedApiTimeInForce);
        });
    });
    describe('isOrderTIFPostOnly', () => {
        it.each([
            ['FOK', types_1.TimeInForce.FOK, false],
            ['IOC', types_1.TimeInForce.IOC, false],
            ['POST_ONLY', types_1.TimeInForce.POST_ONLY, true],
            ['GTT', types_1.TimeInForce.GTT, false],
        ])('Gets postOnly from order time in force: %s', (_name, orderTimeInForce, expectedPostOnly) => {
            expect((0, api_translations_1.isOrderTIFPostOnly)(orderTimeInForce)).toEqual(expectedPostOnly);
        });
    });
    describe('getChildSubaccountNums', () => {
        it('Gets a list of all possible child subaccount numbers for a parent subaccount 0', () => {
            const childSubaccounts = (0, api_translations_1.getChildSubaccountNums)(0);
            expect(childSubaccounts.length).toEqual(1000);
            expect(childSubaccounts[0]).toEqual(0);
            expect(childSubaccounts[1]).toEqual(128);
            expect(childSubaccounts[999]).toEqual(128 * 999);
        });
        it('Gets a list of all possible child subaccount numbers for a parent subaccount 127', () => {
            const childSubaccounts = (0, api_translations_1.getChildSubaccountNums)(127);
            expect(childSubaccounts.length).toEqual(1000);
            expect(childSubaccounts[0]).toEqual(127);
            expect(childSubaccounts[1]).toEqual(128 + 127);
            expect(childSubaccounts[999]).toEqual(128 * 999 + 127);
        });
    });
    describe('getChildSubaccountNums', () => {
        it('Throws an error if the parent subaccount number is greater than or equal to the maximum parent subaccount number', () => {
            expect(() => (0, api_translations_1.getChildSubaccountNums)(128)).toThrowError('Parent subaccount number must be less than 128');
        });
    });
    describe('getParentSubaccountNum', () => {
        it('Gets the parent subaccount number from a child subaccount number', () => {
            expect((0, api_translations_1.getParentSubaccountNum)(0)).toEqual(0);
            expect((0, api_translations_1.getParentSubaccountNum)(128)).toEqual(0);
            expect((0, api_translations_1.getParentSubaccountNum)(128 * 999 - 1)).toEqual(127);
        });
    });
    describe('getParentSubaccountNum', () => {
        it('Throws an error if the child subaccount number is greater than the max child subaccount number', () => {
            expect(() => (0, api_translations_1.getParentSubaccountNum)(128001)).toThrowError('Child subaccount number must be less than 128000');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLXRyYW5zbGF0aW9ucy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vX190ZXN0c19fL2xpYi9hcGktdHJhbnNsYXRpb25zLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBOEQ7QUFDOUQscUVBS3dDO0FBRXhDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLEVBQUU7SUFDL0IsUUFBUSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRTtRQUNoQyxFQUFFLENBQUMsSUFBSSxDQUFDO1lBQ04sQ0FBQyxLQUFLLEVBQUUsbUJBQVcsQ0FBQyxHQUFHLEVBQUUsc0JBQWMsQ0FBQyxHQUFHLENBQUM7WUFDNUMsQ0FBQyxLQUFLLEVBQUUsbUJBQVcsQ0FBQyxHQUFHLEVBQUUsc0JBQWMsQ0FBQyxHQUFHLENBQUM7WUFDNUMsQ0FBQyxXQUFXLEVBQUUsbUJBQVcsQ0FBQyxTQUFTLEVBQUUsc0JBQWMsQ0FBQyxHQUFHLENBQUM7WUFDeEQsQ0FBQyxLQUFLLEVBQUUsbUJBQVcsQ0FBQyxHQUFHLEVBQUUsc0JBQWMsQ0FBQyxHQUFHLENBQUM7U0FDN0MsQ0FBQyxDQUFDLHVEQUF1RCxFQUFFLENBQzFELEtBQWEsRUFDYixnQkFBNkIsRUFDN0Isc0JBQXNDLEVBQ3RDLEVBQUU7WUFDRixNQUFNLENBQUMsSUFBQSxtQ0FBZ0IsRUFBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDN0UsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxHQUFHLEVBQUU7UUFDbEMsRUFBRSxDQUFDLElBQUksQ0FBQztZQUNOLENBQUMsS0FBSyxFQUFFLG1CQUFXLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQztZQUMvQixDQUFDLEtBQUssRUFBRSxtQkFBVyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUM7WUFDL0IsQ0FB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