import { IndexerSubaccountId } from '@dydxprotocol-indexer/v4-protos';
import { SubaccountFromDatabase, SubaccountQueryConfig, SubaccountCreateObject, Options, QueryableField, SubaccountUpdateObject } from '../types';
export declare function uuid(address: string, subaccountNumber: number): string;
export declare function subaccountIdToUuid(subaccountId: IndexerSubaccountId): string;
export declare function findAll({ id, address, subaccountNumber, updatedBeforeOrAt, updatedOnOrAfter, limit, }: SubaccountQueryConfig, requiredFields: QueryableField[], options?: Options): Promise<SubaccountFromDatabase[]>;
export declare function getSubaccountsWithTransfers(createdBeforeOrAtHeight: string, options?: Options): Promise<SubaccountFromDatabase[]>;
export declare function create(subaccountToCreate: SubaccountCreateObject, options?: Options): Promise<SubaccountFromDatabase>;
export declare function findById(id: string, options?: Options): Promise<SubaccountFromDatabase | undefined>;
export declare function upsert(subaccountToUpsert: SubaccountCreateObject, options?: Options): Promise<SubaccountFromDatabase>;
export declare function update({ id, ...fields }: SubaccountUpdateObject, options?: Options): Promise<SubaccountFromDatabase | undefined>;
