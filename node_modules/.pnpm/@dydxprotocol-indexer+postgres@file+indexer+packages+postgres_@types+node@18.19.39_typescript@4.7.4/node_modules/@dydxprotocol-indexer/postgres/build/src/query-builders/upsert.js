"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const objection_1 = require("objection");
class UpsertQueryBuilder extends objection_1.QueryBuilder {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    upsert(object) {
        const modelClass = this.modelClass();
        const idColumn = modelClass.idColumn;
        const tableDefinedId = `${modelClass.tableName}.${idColumn}`;
        const knex = modelClass.knex();
        const cols = Object.keys(object);
        const values = Object.values(object);
        const colBindings = cols.map(() => '??').join(', ');
        const valBindings = cols.map(() => '?').join(', ');
        const setBindings = cols.map(() => '?? = ?').join(', ');
        const setValues = [];
        for (let i = 0; i < cols.length; ++i) {
            setValues.push(cols[i], values[i]);
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        return this.onBuildKnex((query) => {
            query.insert(knex.raw([
                `(${colBindings}) VALUES (${valBindings})`,
                'ON CONFLICT (??) DO',
                `UPDATE SET ${setBindings}`,
                'WHERE ?? = ?',
            ].join(' '), [
                ...cols,
                ...values,
                modelClass.idColumn,
                ...setValues,
                tableDefinedId,
                object[idColumn],
            ]));
        });
    }
}
exports.default = UpsertQueryBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBzZXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3F1ZXJ5LWJ1aWxkZXJzL3Vwc2VydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlDQUltQjtBQUVuQixNQUFxQixrQkFBNkMsU0FBUSx3QkFBa0I7SUFNMUYsOERBQThEO0lBQzlELE1BQU0sQ0FBQyxNQUFXO1FBQ2hCLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUVyQyxNQUFNLFFBQVEsR0FBVyxVQUFVLENBQUMsUUFBa0IsQ0FBQztRQUV2RCxNQUFNLGNBQWMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxTQUFTLElBQUksUUFBUSxFQUFFLENBQUM7UUFFN0QsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRS9CLE1BQU0sSUFBSSxHQUFhLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0MsTUFBTSxNQUFNLEdBQWEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUUvQyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwRCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuRCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4RCxNQUFNLFNBQVMsR0FBYSxFQUFFLENBQUM7UUFDL0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDcEMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDcEM7UUFFRCw4REFBOEQ7UUFDOUQsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBVSxFQUFFLEVBQUU7WUFDckMsS0FBSyxDQUFDLE1BQU0sQ0FDVixJQUFJLENBQUMsR0FBRyxDQUNOO2dCQUNFLElBQUksV0FBVyxhQUFhLFdBQVcsR0FBRztnQkFDMUMscUJBQXFCO2dCQUNyQixjQUFjLFdBQVcsRUFBRTtnQkFDM0IsY0FBYzthQUNmLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUNYO2dCQUNFLEdBQUcsSUFBSTtnQkFDUCxHQUFHLE1BQU07Z0JBQ1QsVUFBVSxDQUFDLFFBQVE7Z0JBQ25CLEdBQUcsU0FBUztnQkFDWixjQUFjO2dCQUNkLE1BQU0sQ0FBQyxRQUFRLENBQUM7YUFDakIsQ0FDRixDQUNGLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQWxERCxxQ0FrREMifQ==