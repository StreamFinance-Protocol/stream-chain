/// <reference types="node" />
import { Options, FundingIndexUpdatesCreateObject, FundingIndexUpdatesFromDatabase, FundingIndexUpdatesQueryConfig, QueryableField, FundingIndexMap } from '../types';
export declare function uuid(blockHeight: string, eventId: Buffer, perpetualId: string): string;
export declare function findAll({ limit, id, perpetualId, eventId, effectiveAt, effectiveAtHeight, effectiveBeforeOrAt, effectiveBeforeOrAtHeight, }: FundingIndexUpdatesQueryConfig, requiredFields: QueryableField[], options?: Options): Promise<FundingIndexUpdatesFromDatabase[]>;
export declare function create(fundingIndexUpdateToCreate: FundingIndexUpdatesCreateObject, options?: Options): Promise<FundingIndexUpdatesFromDatabase>;
export declare function findById(id: string, options?: Options): Promise<FundingIndexUpdatesFromDatabase | undefined>;
export declare function findMostRecentMarketFundingIndexUpdate(perpetualId: string, options?: Options): Promise<FundingIndexUpdatesFromDatabase | undefined>;
export declare function findFundingIndexMap(effectiveBeforeOrAtHeight: string, options?: Options): Promise<FundingIndexMap>;
