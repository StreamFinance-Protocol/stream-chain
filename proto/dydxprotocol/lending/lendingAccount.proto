syntax = "proto3";

package dydxprotocol.lending;

import "cosmos_proto/cosmos.proto";
import "google/protobuf/struct.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/StreamFinance-Protocol/stream-chain/protocol/x/lending/types";


// represents an individual loan within a lending account.
// amount borrowed in USD can be calculated post USD oracle fetch as 
// (balance - sum(collateralAmounts))
message Loan {
  repeated cosmos.base.v1beta1.Coin collateralAmounts = 1; // Multiple assets can be placed as collateral
  cosmos.base.v1beta1.Coin balance = 2;
}

// account structure for user deposits.
//TotalDepositAmount denominated in USD (using string to handle to handle arbitrary-precision intergers)
message lendingAccount {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 nonce = 2;
  repeated cosmos.base.v1beta1.Coin LendingPositions = 3;
  repeated Loan borrowingPositions = 4;
}
