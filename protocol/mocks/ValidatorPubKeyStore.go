// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	context "context"

	crypto "github.com/cometbft/cometbft/proto/tendermint/crypto"
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// ValidatorPubKeyStore is an autogenerated mock type for the ValidatorPubKeyStore type
type ValidatorPubKeyStore struct {
	mock.Mock
}

// GetPubKeyByConsAddr provides a mock function with given fields: _a0, _a1
func (_m *ValidatorPubKeyStore) GetPubKeyByConsAddr(_a0 context.Context, _a1 types.ConsAddress) (crypto.PublicKey, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetPubKeyByConsAddr")
	}

	var r0 crypto.PublicKey
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, types.ConsAddress) (crypto.PublicKey, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, types.ConsAddress) crypto.PublicKey); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(crypto.PublicKey)
	}

	if rf, ok := ret.Get(1).(func(context.Context, types.ConsAddress) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewValidatorPubKeyStore creates a new instance of ValidatorPubKeyStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewValidatorPubKeyStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *ValidatorPubKeyStore {
	mock := &ValidatorPubKeyStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
