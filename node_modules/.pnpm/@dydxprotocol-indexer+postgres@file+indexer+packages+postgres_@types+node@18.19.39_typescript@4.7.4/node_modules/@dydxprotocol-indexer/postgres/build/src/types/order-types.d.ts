import { IsoString } from './utility-types';
export declare enum OrderSide {
    BUY = "BUY",
    SELL = "SELL"
}
export declare enum OrderStatus {
    OPEN = "OPEN",
    FILLED = "FILLED",
    CANCELED = "CANCELED",
    BEST_EFFORT_CANCELED = "BEST_EFFORT_CANCELED",
    UNTRIGGERED = "UNTRIGGERED"
}
export declare enum OrderType {
    LIMIT = "LIMIT",
    MARKET = "MARKET",
    STOP_LIMIT = "STOP_LIMIT",
    STOP_MARKET = "STOP_MARKET",
    TRAILING_STOP = "TRAILING_STOP",
    TAKE_PROFIT = "TAKE_PROFIT",
    TAKE_PROFIT_MARKET = "TAKE_PROFIT_MARKET",
    HARD_TRADE = "HARD_TRADE",
    FAILED_HARD_TRADE = "FAILED_HARD_TRADE",
    TRANSFER_PLACEHOLDER = "TRANSFER_PLACEHOLDER"
}
export declare enum TimeInForce {
    GTT = "GTT",
    FOK = "FOK",
    IOC = "IOC",
    POST_ONLY = "POST_ONLY"
}
export interface OrderCreateObject {
    subaccountId: string;
    clientId: string;
    clobPairId: string;
    side: OrderSide;
    size: string;
    totalFilled: string;
    price: string;
    type: OrderType;
    status: OrderStatus;
    timeInForce: TimeInForce;
    reduceOnly: boolean;
    orderFlags: string;
    updatedAt: IsoString;
    updatedAtHeight: string;
    goodTilBlock?: string;
    goodTilBlockTime?: string;
    createdAtHeight?: string;
    clientMetadata: string;
    triggerPrice?: string;
}
export interface OrderUpdateObject {
    id: string;
    clobPairId?: string;
    side?: OrderSide;
    size?: string;
    totalFilled?: string;
    price?: string;
    type?: OrderType;
    status?: OrderStatus;
    timeInForce?: TimeInForce;
    reduceOnly?: boolean;
    orderFlags?: string;
    updatedAt?: IsoString;
    updatedAtHeight?: string;
    goodTilBlock?: string | null;
    goodTilBlockTime?: string | null;
    clientMetadata?: string;
    triggerPrice?: string;
}
export declare enum OrderColumns {
    id = "id",
    subaccountId = "subaccountId",
    clientId = "clientId",
    clobPairId = "clobPairId",
    side = "side",
    size = "size",
    totalFilled = "totalFilled",
    price = "price",
    type = "type",
    status = "status",
    timeInForce = "timeInForce",
    reduceOnly = "reduceOnly",
    goodTilBlock = "goodTilBlock",
    goodTilBlockTime = "goodTilBlockTime",
    perpetualId = "perpetualId",
    openEventId = "openEventId",
    orderFlags = "orderFlags",
    updatedAt = "updatedAt",
    updatedAtHeight = "updatedAtHeight",
    createdAtHeight = "createdAtHeight",
    clientMetadata = "clientMetadata",
    triggerPrice = "triggerPrice"
}
