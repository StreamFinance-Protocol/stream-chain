"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findById = exports.create = exports.findAll = exports.uuid = void 0;
const constants_1 = require("../constants");
const stores_helpers_1 = require("../helpers/stores-helpers");
const transaction_1 = __importDefault(require("../helpers/transaction"));
const uuid_1 = require("../helpers/uuid");
const transaction_model_1 = __importDefault(require("../models/transaction-model"));
const types_1 = require("../types");
function uuid(blockHeight, transactionIndex) {
    // TODO(IND-483): Fix all uuid string substitutions to use Array.join.
    return (0, uuid_1.getUuid)(Buffer.from(`${blockHeight}-${transactionIndex}`, constants_1.BUFFER_ENCODING_UTF_8));
}
exports.uuid = uuid;
async function findAll({ id, blockHeight, transactionIndex, transactionHash, limit, }, requiredFields, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    (0, stores_helpers_1.verifyAllRequiredFields)({
        id,
        blockHeight,
        transactionIndex,
        transactionHash,
        limit,
    }, requiredFields);
    let baseQuery = (0, stores_helpers_1.setupBaseQuery)(transaction_model_1.default, options);
    if (id !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.TransactionColumns.id, id);
    }
    if (blockHeight !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.TransactionColumns.blockHeight, blockHeight);
    }
    if (transactionIndex !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.TransactionColumns.transactionIndex, transactionIndex);
    }
    if (transactionHash !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.TransactionColumns.transactionHash, transactionHash);
    }
    if (options.orderBy !== undefined) {
        for (const [column, order] of options.orderBy) {
            baseQuery = baseQuery.orderBy(column, order);
        }
    }
    else {
        baseQuery = baseQuery.orderBy(types_1.TransactionColumns.blockHeight, types_1.Ordering.ASC).orderBy(types_1.TransactionColumns.transactionIndex, types_1.Ordering.ASC);
    }
    if (limit) {
        baseQuery = baseQuery.limit(limit);
    }
    return baseQuery.returning('*');
}
exports.findAll = findAll;
async function create(transactionToCreate, options = { txId: undefined }) {
    return transaction_model_1.default.query(transaction_1.default.get(options.txId)).insert({
        id: uuid(transactionToCreate.blockHeight, transactionToCreate.transactionIndex),
        ...transactionToCreate,
    }).returning('*');
}
exports.create = create;
async function findById(id, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    const baseQuery = (0, stores_helpers_1.setupBaseQuery)(transaction_model_1.default, options);
    return baseQuery
        .findById(id)
        .returning('*');
}
exports.findById = findById;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24tdGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RvcmVzL3RyYW5zYWN0aW9uLXRhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLDRDQUErRTtBQUMvRSw4REFHbUM7QUFDbkMseUVBQWlEO0FBQ2pELDBDQUEwQztBQUMxQyxvRkFBMkQ7QUFDM0Qsb0NBU2tCO0FBRWxCLFNBQWdCLElBQUksQ0FBQyxXQUFtQixFQUFFLGdCQUF3QjtJQUNoRSxzRUFBc0U7SUFDdEUsT0FBTyxJQUFBLGNBQU8sRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsV0FBVyxJQUFJLGdCQUFnQixFQUFFLEVBQUUsaUNBQXFCLENBQUMsQ0FBQyxDQUFDO0FBQzNGLENBQUM7QUFIRCxvQkFHQztBQUVNLEtBQUssVUFBVSxPQUFPLENBQzNCLEVBQ0UsRUFBRSxFQUNGLFdBQVcsRUFDWCxnQkFBZ0IsRUFDaEIsZUFBZSxFQUNmLEtBQUssR0FDa0IsRUFDekIsY0FBZ0MsRUFDaEMsVUFBbUIsb0NBQXdCO0lBRTNDLElBQUEsd0NBQXVCLEVBQ3JCO1FBQ0UsRUFBRTtRQUNGLFdBQVc7UUFDWCxnQkFBZ0I7UUFDaEIsZUFBZTtRQUNmLEtBQUs7S0FDUyxFQUNoQixjQUFjLENBQ2YsQ0FBQztJQUVGLElBQUksU0FBUyxHQUFtQyxJQUFBLCtCQUFjLEVBQzVELDJCQUFnQixFQUNoQixPQUFPLENBQ1IsQ0FBQztJQUVGLElBQUksRUFBRSxLQUFLLFNBQVMsRUFBRTtRQUNwQixTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQywwQkFBa0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDMUQ7SUFFRCxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUU7UUFDN0IsU0FBUyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsMEJBQWtCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0tBQzVFO0lBRUQsSUFBSSxnQkFBZ0IsS0FBSyxTQUFTLEVBQUU7UUFDbEMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsMEJBQWtCLENBQUMsZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztLQUN0RjtJQUVELElBQUksZUFBZSxLQUFLLFNBQVMsRUFBRTtRQUNqQyxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQywwQkFBa0IsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7S0FDcEY7SUFFRCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUFFO1FBQ2pDLEtBQUssTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO1lBQzdDLFNBQVMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUMzQixNQUFNLEVBQ04sS0FBSyxDQUNOLENBQUM7U0FDSDtLQUNGO1NBQU07UUFDTCxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FDM0IsMEJBQWtCLENBQUMsV0FBVyxFQUM5QixnQkFBUSxDQUFDLEdBQUcsQ0FDYixDQUFDLE9BQU8sQ0FDUCwwQkFBa0IsQ0FBQyxnQkFBZ0IsRUFDbkMsZ0JBQVEsQ0FBQyxHQUFHLENBQ2IsQ0FBQztLQUNIO0lBRUQsSUFBSSxLQUFLLEVBQUU7UUFDVCxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBakVELDBCQWlFQztBQUVNLEtBQUssVUFBVSxNQUFNLENBQzFCLG1CQUE0QyxFQUM1QyxVQUFtQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFFdEMsT0FBTywyQkFBZ0IsQ0FBQyxLQUFLLENBQzNCLHFCQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FDOUIsQ0FBQyxNQUFNLENBQUM7UUFDUCxFQUFFLEVBQUUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMvRSxHQUFHLG1CQUFtQjtLQUN2QixDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3BCLENBQUM7QUFWRCx3QkFVQztBQUVNLEtBQUssVUFBVSxRQUFRLENBQzVCLEVBQVUsRUFDVixVQUFtQixvQ0FBd0I7SUFFM0MsTUFBTSxTQUFTLEdBQW1DLElBQUEsK0JBQWMsRUFDOUQsMkJBQWdCLEVBQ2hCLE9BQU8sQ0FDUixDQUFDO0lBQ0YsT0FBTyxTQUFTO1NBQ2IsUUFBUSxDQUFDLEVBQUUsQ0FBQztTQUNaLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNwQixDQUFDO0FBWEQsNEJBV0MifQ==