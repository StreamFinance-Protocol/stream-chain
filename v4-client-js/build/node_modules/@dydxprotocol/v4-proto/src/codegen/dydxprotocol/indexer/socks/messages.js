"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CandleMessage = exports.MarketMessage = exports.TradeMessage = exports.SubaccountMessage = exports.OrderbookMessage = exports.CandleMessage_ResolutionSDKType = exports.CandleMessage_Resolution = void 0;
exports.candleMessage_ResolutionFromJSON = candleMessage_ResolutionFromJSON;
exports.candleMessage_ResolutionToJSON = candleMessage_ResolutionToJSON;
const subaccount_1 = require("../protocol/v1/subaccount");
const _m0 = __importStar(require("protobufjs/minimal"));
/** TODO(IND-210): Make this proto conform and update downstream indexer logic */
var CandleMessage_Resolution;
(function (CandleMessage_Resolution) {
    /**
     * ONE_MINUTE - buf:lint:ignore ENUM_VALUE_PREFIX
     * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
     */
    CandleMessage_Resolution[CandleMessage_Resolution["ONE_MINUTE"] = 0] = "ONE_MINUTE";
    /** FIVE_MINUTES - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["FIVE_MINUTES"] = 1] = "FIVE_MINUTES";
    /** FIFTEEN_MINUTES - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["FIFTEEN_MINUTES"] = 2] = "FIFTEEN_MINUTES";
    /** THIRTY_MINUTES - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["THIRTY_MINUTES"] = 3] = "THIRTY_MINUTES";
    /** ONE_HOUR - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["ONE_HOUR"] = 4] = "ONE_HOUR";
    /** FOUR_HOURS - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["FOUR_HOURS"] = 5] = "FOUR_HOURS";
    /** ONE_DAY - buf:lint:ignore ENUM_VALUE_PREFIX */
    CandleMessage_Resolution[CandleMessage_Resolution["ONE_DAY"] = 6] = "ONE_DAY";
    CandleMessage_Resolution[CandleMessage_Resolution["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(CandleMessage_Resolution || (exports.CandleMessage_Resolution = CandleMessage_Resolution = {}));
exports.CandleMessage_ResolutionSDKType = CandleMessage_Resolution;
function candleMessage_ResolutionFromJSON(object) {
    switch (object) {
        case 0:
        case "ONE_MINUTE":
            return CandleMessage_Resolution.ONE_MINUTE;
        case 1:
        case "FIVE_MINUTES":
            return CandleMessage_Resolution.FIVE_MINUTES;
        case 2:
        case "FIFTEEN_MINUTES":
            return CandleMessage_Resolution.FIFTEEN_MINUTES;
        case 3:
        case "THIRTY_MINUTES":
            return CandleMessage_Resolution.THIRTY_MINUTES;
        case 4:
        case "ONE_HOUR":
            return CandleMessage_Resolution.ONE_HOUR;
        case 5:
        case "FOUR_HOURS":
            return CandleMessage_Resolution.FOUR_HOURS;
        case 6:
        case "ONE_DAY":
            return CandleMessage_Resolution.ONE_DAY;
        case -1:
        case "UNRECOGNIZED":
        default:
            return CandleMessage_Resolution.UNRECOGNIZED;
    }
}
function candleMessage_ResolutionToJSON(object) {
    switch (object) {
        case CandleMessage_Resolution.ONE_MINUTE:
            return "ONE_MINUTE";
        case CandleMessage_Resolution.FIVE_MINUTES:
            return "FIVE_MINUTES";
        case CandleMessage_Resolution.FIFTEEN_MINUTES:
            return "FIFTEEN_MINUTES";
        case CandleMessage_Resolution.THIRTY_MINUTES:
            return "THIRTY_MINUTES";
        case CandleMessage_Resolution.ONE_HOUR:
            return "ONE_HOUR";
        case CandleMessage_Resolution.FOUR_HOURS:
            return "FOUR_HOURS";
        case CandleMessage_Resolution.ONE_DAY:
            return "ONE_DAY";
        case CandleMessage_Resolution.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBaseOrderbookMessage() {
    return {
        contents: "",
        clobPairId: "",
        version: ""
    };
}
exports.OrderbookMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.contents !== "") {
            writer.uint32(10).string(message.contents);
        }
        if (message.clobPairId !== "") {
            writer.uint32(18).string(message.clobPairId);
        }
        if (message.version !== "") {
            writer.uint32(26).string(message.version);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseOrderbookMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.contents = reader.string();
                    break;
                case 2:
                    message.clobPairId = reader.string();
                    break;
                case 3:
                    message.version = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseOrderbookMessage();
        message.contents = (_a = object.contents) !== null && _a !== void 0 ? _a : "";
        message.clobPairId = (_b = object.clobPairId) !== null && _b !== void 0 ? _b : "";
        message.version = (_c = object.version) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseSubaccountMessage() {
    return {
        blockHeight: "",
        transactionIndex: 0,
        eventIndex: 0,
        contents: "",
        subaccountId: undefined,
        version: ""
    };
}
exports.SubaccountMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.blockHeight !== "") {
            writer.uint32(10).string(message.blockHeight);
        }
        if (message.transactionIndex !== 0) {
            writer.uint32(16).int32(message.transactionIndex);
        }
        if (message.eventIndex !== 0) {
            writer.uint32(24).uint32(message.eventIndex);
        }
        if (message.contents !== "") {
            writer.uint32(34).string(message.contents);
        }
        if (message.subaccountId !== undefined) {
            subaccount_1.IndexerSubaccountId.encode(message.subaccountId, writer.uint32(42).fork()).ldelim();
        }
        if (message.version !== "") {
            writer.uint32(50).string(message.version);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSubaccountMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.blockHeight = reader.string();
                    break;
                case 2:
                    message.transactionIndex = reader.int32();
                    break;
                case 3:
                    message.eventIndex = reader.uint32();
                    break;
                case 4:
                    message.contents = reader.string();
                    break;
                case 5:
                    message.subaccountId = subaccount_1.IndexerSubaccountId.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.version = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseSubaccountMessage();
        message.blockHeight = (_a = object.blockHeight) !== null && _a !== void 0 ? _a : "";
        message.transactionIndex = (_b = object.transactionIndex) !== null && _b !== void 0 ? _b : 0;
        message.eventIndex = (_c = object.eventIndex) !== null && _c !== void 0 ? _c : 0;
        message.contents = (_d = object.contents) !== null && _d !== void 0 ? _d : "";
        message.subaccountId = object.subaccountId !== undefined && object.subaccountId !== null ? subaccount_1.IndexerSubaccountId.fromPartial(object.subaccountId) : undefined;
        message.version = (_e = object.version) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function createBaseTradeMessage() {
    return {
        blockHeight: "",
        contents: "",
        clobPairId: "",
        version: ""
    };
}
exports.TradeMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.blockHeight !== "") {
            writer.uint32(10).string(message.blockHeight);
        }
        if (message.contents !== "") {
            writer.uint32(34).string(message.contents);
        }
        if (message.clobPairId !== "") {
            writer.uint32(42).string(message.clobPairId);
        }
        if (message.version !== "") {
            writer.uint32(50).string(message.version);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTradeMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.blockHeight = reader.string();
                    break;
                case 4:
                    message.contents = reader.string();
                    break;
                case 5:
                    message.clobPairId = reader.string();
                    break;
                case 6:
                    message.version = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c, _d;
        const message = createBaseTradeMessage();
        message.blockHeight = (_a = object.blockHeight) !== null && _a !== void 0 ? _a : "";
        message.contents = (_b = object.contents) !== null && _b !== void 0 ? _b : "";
        message.clobPairId = (_c = object.clobPairId) !== null && _c !== void 0 ? _c : "";
        message.version = (_d = object.version) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseMarketMessage() {
    return {
        contents: "",
        version: ""
    };
}
exports.MarketMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.contents !== "") {
            writer.uint32(10).string(message.contents);
        }
        if (message.version !== "") {
            writer.uint32(18).string(message.version);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMarketMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.contents = reader.string();
                    break;
                case 2:
                    message.version = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseMarketMessage();
        message.contents = (_a = object.contents) !== null && _a !== void 0 ? _a : "";
        message.version = (_b = object.version) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseCandleMessage() {
    return {
        contents: "",
        clobPairId: "",
        resolution: 0,
        version: ""
    };
}
exports.CandleMessage = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.contents !== "") {
            writer.uint32(10).string(message.contents);
        }
        if (message.clobPairId !== "") {
            writer.uint32(18).string(message.clobPairId);
        }
        if (message.resolution !== 0) {
            writer.uint32(24).int32(message.resolution);
        }
        if (message.version !== "") {
            writer.uint32(34).string(message.version);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCandleMessage();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.contents = reader.string();
                    break;
                case 2:
                    message.clobPairId = reader.string();
                    break;
                case 3:
                    message.resolution = reader.int32();
                    break;
                case 4:
                    message.version = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c, _d;
        const message = createBaseCandleMessage();
        message.contents = (_a = object.contents) !== null && _a !== void 0 ? _a : "";
        message.clobPairId = (_b = object.clobPairId) !== null && _b !== void 0 ? _b : "";
        message.resolution = (_c = object.resolution) !== null && _c !== void 0 ? _c : 0;
        message.version = (_d = object.version) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
//# sourceMappingURL=data:application/json;base64,