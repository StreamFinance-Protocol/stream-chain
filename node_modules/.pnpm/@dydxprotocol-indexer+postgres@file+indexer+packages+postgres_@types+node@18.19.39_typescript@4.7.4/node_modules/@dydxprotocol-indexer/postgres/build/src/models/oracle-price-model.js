"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const objection_1 = require("objection");
const validators_1 = require("../lib/validators");
class OraclePriceModel extends objection_1.Model {
    static get tableName() {
        return 'oracle_prices';
    }
    static get idColumn() {
        return 'id';
    }
    static get jsonSchema() {
        return {
            type: 'object',
            required: [
                'id',
                'marketId',
                'price',
                'effectiveAt',
                'effectiveAtHeight',
            ],
            properties: {
                id: { type: 'string', format: 'uuid' },
                marketId: { type: 'integer' },
                price: { type: 'string', pattern: validators_1.NonNegativeNumericPattern },
                effectiveAt: { type: 'string', format: 'date-time' },
                effectiveAtHeight: { type: 'string', pattern: validators_1.IntegerPattern },
            },
        };
    }
    /**
     * A mapping from column name to JSON conversion expected.
     * See getSqlConversionForDydxModelTypes for valid conversions.
     *
     * TODO(IND-239): Ensure that jsonSchema() / sqlToJsonConversions() / model fields match.
     */
    static get sqlToJsonConversions() {
        return {
            id: 'string',
            marketId: 'integer',
            price: 'string',
            effectiveAt: 'date-time',
            effectiveAtHeight: 'string',
        };
    }
}
exports.default = OraclePriceModel;
OraclePriceModel.relationMappings = {
    market: {
        relation: objection_1.Model.BelongsToOneRelation,
        modelClass: path_1.default.join(__dirname, 'market-model'),
        join: {
            from: 'oracle_prices.marketId',
            to: 'markets.id',
        },
    },
    blocks: {
        relation: objection_1.Model.BelongsToOneRelation,
        modelClass: path_1.default.join(__dirname, 'block-model'),
        join: {
            from: 'oracle_prices.effectiveAtHeight',
            to: 'blocks.blockHeight',
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JhY2xlLXByaWNlLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGVscy9vcmFjbGUtcHJpY2UtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnREFBd0I7QUFFeEIseUNBQWtDO0FBRWxDLGtEQUE4RTtBQUc5RSxNQUFxQixnQkFBaUIsU0FBUSxpQkFBSztJQUNqRCxNQUFNLEtBQUssU0FBUztRQUNsQixPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRUQsTUFBTSxLQUFLLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBcUJELE1BQU0sS0FBSyxVQUFVO1FBQ25CLE9BQU87WUFDTCxJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRTtnQkFDUixJQUFJO2dCQUNKLFVBQVU7Z0JBQ1YsT0FBTztnQkFDUCxhQUFhO2dCQUNiLG1CQUFtQjthQUNwQjtZQUNELFVBQVUsRUFBRTtnQkFDVixFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUU7Z0JBQ3RDLFFBQVEsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7Z0JBQzdCLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLHNDQUF5QixFQUFFO2dCQUM3RCxXQUFXLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7Z0JBQ3BELGlCQUFpQixFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsMkJBQWMsRUFBRTthQUMvRDtTQUNGLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxNQUFNLEtBQUssb0JBQW9CO1FBQzdCLE9BQU87WUFDTCxFQUFFLEVBQUUsUUFBUTtZQUNaLFFBQVEsRUFBRSxTQUFTO1lBQ25CLEtBQUssRUFBRSxRQUFRO1lBQ2YsV0FBVyxFQUFFLFdBQVc7WUFDeEIsaUJBQWlCLEVBQUUsUUFBUTtTQUM1QixDQUFDO0lBQ0osQ0FBQzs7QUE5REgsbUNBeUVDO0FBaEVRLGlDQUFnQixHQUFHO0lBQ3hCLE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxpQkFBSyxDQUFDLG9CQUFvQjtRQUNwQyxVQUFVLEVBQUUsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsY0FBYyxDQUFDO1FBQ2hELElBQUksRUFBRTtZQUNKLElBQUksRUFBRSx3QkFBd0I7WUFDOUIsRUFBRSxFQUFFLFlBQVk7U0FDakI7S0FDRjtJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxpQkFBSyxDQUFDLG9CQUFvQjtRQUNwQyxVQUFVLEVBQUUsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDO1FBQy9DLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxpQ0FBaUM7WUFDdkMsRUFBRSxFQUFFLG9CQUFvQjtTQUN6QjtLQUNGO0NBQ0YsQ0FBQyJ9