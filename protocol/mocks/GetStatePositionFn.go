// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	big "math/big"

	clobtypes "github.com/StreamFinance-Protocol/stream-chain/protocol/x/clob/types"
	mock "github.com/stretchr/testify/mock"

	types "github.com/StreamFinance-Protocol/stream-chain/protocol/x/subaccounts/types"
)

// GetStatePositionFn is an autogenerated mock type for the GetStatePositionFn type
type GetStatePositionFn struct {
	mock.Mock
}

// Execute provides a mock function with given fields: subaccountId, clobPairId
func (_m *GetStatePositionFn) Execute(subaccountId types.SubaccountId, clobPairId clobtypes.ClobPairId) *big.Int {
	ret := _m.Called(subaccountId, clobPairId)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *big.Int
	if rf, ok := ret.Get(0).(func(types.SubaccountId, clobtypes.ClobPairId) *big.Int); ok {
		r0 = rf(subaccountId, clobPairId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*big.Int)
		}
	}

	return r0
}

// NewGetStatePositionFn creates a new instance of GetStatePositionFn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetStatePositionFn(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetStatePositionFn {
	mock := &GetStatePositionFn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
