"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const OrderTable = __importStar(require("../../src/stores/order-table"));
const knex_1 = require("../../src/helpers/knex");
const db_helpers_1 = require("../../src/helpers/db-helpers");
const constants_1 = require("../helpers/constants");
const mock_generators_1 = require("../helpers/mock-generators");
// NOTE: If a model is modified for a migration then these
// tests must be skipped until the following migration
describe.skip('Test new migration', () => {
    beforeEach(async () => {
        await (0, db_helpers_1.migrate)();
    });
    afterEach(async () => {
        await (0, db_helpers_1.clearData)();
    });
    afterAll(async () => {
        await (0, db_helpers_1.teardown)();
    });
    it('test adding most recent migration', async () => {
        // remove latest migration
        await multiDown(1);
        // add data to verify you can roll up and then later roll down
        await (0, mock_generators_1.seedData)();
        // readd latest migration
        await knex_1.knexPrimary.migrate.latest({ loadExtensions: ['.js'] });
        // re-remove latest migration
        await multiDown(1);
    });
    it('test adding most recent migration with rows that fail index that should only be applied going forward', async () => {
        // remove latest migration
        await multiDown(1);
        // add data to verify you can roll up and then later roll down
        await (0, mock_generators_1.seedData)();
        await OrderTable.create(constants_1.defaultOrder);
        // readd latest migration
        await knex_1.knexPrimary.migrate.latest({ loadExtensions: ['.js'] });
        // re-remove latest migration
        await multiDown(1);
    });
});
/* ------- Helpers ------- */
async function multiDown(downCount = 3) {
    for (let i = 0; i < downCount; i += 1) {
        await knex_1.knexPrimary.migrate.down({ loadExtensions: ['.js'] });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlncmF0aW9ucy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vX190ZXN0c19fL2RiL21pZ3JhdGlvbnMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUVBQTJEO0FBQzNELGlEQUFxRDtBQUNyRCw2REFJc0M7QUFDdEMsb0RBRThCO0FBQzlCLGdFQUFzRDtBQUV0RCwwREFBMEQ7QUFDMUQsc0RBQXNEO0FBQ3RELFFBQVEsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLFVBQVUsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNwQixNQUFNLElBQUEsb0JBQU8sR0FBRSxDQUFDO0lBQ2xCLENBQUMsQ0FBQyxDQUFDO0lBRUgsU0FBUyxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ25CLE1BQU0sSUFBQSxzQkFBUyxHQUFFLENBQUM7SUFDcEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDbEIsTUFBTSxJQUFBLHFCQUFRLEdBQUUsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxtQ0FBbUMsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNqRCwwQkFBMEI7UUFDMUIsTUFBTSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbkIsOERBQThEO1FBQzlELE1BQU0sSUFBQSwwQkFBUSxHQUFFLENBQUM7UUFFakIseUJBQXlCO1FBQ3pCLE1BQU0sa0JBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsY0FBYyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTlELDZCQUE2QjtRQUM3QixNQUFNLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyx1R0FBdUcsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNySCwwQkFBMEI7UUFDMUIsTUFBTSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbkIsOERBQThEO1FBQzlELE1BQU0sSUFBQSwwQkFBUSxHQUFFLENBQUM7UUFDakIsTUFBTSxVQUFVLENBQUMsTUFBTSxDQUFDLHdCQUFZLENBQUMsQ0FBQztRQUV0Qyx5QkFBeUI7UUFDekIsTUFBTSxrQkFBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFOUQsNkJBQTZCO1FBQzdCLE1BQU0sU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFSCw2QkFBNkI7QUFFN0IsS0FBSyxVQUFVLFNBQVMsQ0FBQyxZQUFvQixDQUFDO0lBQzVDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNyQyxNQUFNLGtCQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLGNBQWMsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUM3RDtBQUNILENBQUMifQ==