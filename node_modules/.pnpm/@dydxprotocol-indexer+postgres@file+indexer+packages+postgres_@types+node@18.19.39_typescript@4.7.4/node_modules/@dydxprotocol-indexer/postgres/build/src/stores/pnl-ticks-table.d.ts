import { Options, PnlTicksCreateObject, PnlTicksFromDatabase, PnlTicksQueryConfig, QueryableField } from '../types';
export declare function uuid(subaccountId: string, createdAt: string): string;
export declare function findAll({ limit, id, subaccountId, createdAt, blockHeight, blockTime, createdBeforeOrAt, createdBeforeOrAtBlockHeight, createdOnOrAfter, createdOnOrAfterBlockHeight, }: PnlTicksQueryConfig, requiredFields: QueryableField[], options?: Options): Promise<PnlTicksFromDatabase[]>;
export declare function create(pnlTicksToCreate: PnlTicksCreateObject, options?: Options): Promise<PnlTicksFromDatabase>;
export declare function createMany(pnlTicks: PnlTicksCreateObject[], options?: Options): Promise<PnlTicksFromDatabase[]>;
export declare function findById(id: string, options?: Options): Promise<PnlTicksFromDatabase | undefined>;
export declare function findLatestProcessedBlocktime(): Promise<string>;
export declare function findMostRecentPnlTickForEachAccount(createdOnOrAfterHeight: string): Promise<{
    [subaccountId: string]: PnlTicksCreateObject;
}>;
