"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plugin = void 0;

var _path = require("path");

var _mkdirp = require("mkdirp");

var _package = _interopRequireDefault(require("../../package.json"));

var _files = require("../utils/files");

var _helpers = require("../helpers");

var version = process.env.NODE_ENV === 'test' ? 'latest' : _package["default"].version;
var header = "/**\n* This file and any referenced files were automatically generated by ".concat(_package["default"].name, "@").concat(version, "\n* DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n* and run the transpile command or yarn proto command to regenerate this bundle.\n*/\n\n");

var write = function write(builder, indexFile, content) {
  var indexOutFile = (0, _path.join)(builder.outPath, indexFile);
  (0, _mkdirp.sync)((0, _path.dirname)(indexOutFile));
  (0, _files.writeContentToFile)(builder.outPath, builder.options, header + content, indexOutFile);
};

var plugin = function plugin(builder) {
  write(builder, 'helpers.ts', _helpers.internal); // should be exported

  if (builder.options.includeExternalHelpers || builder.options.reactQuery.enabled) {
    // also react-query needs these...
    builder.files.push('extern.ts');
    write(builder, 'extern.ts', _helpers.external);
  }

  if (builder.options.reactQuery.enabled) {
    builder.files.push('react-query.ts');
    write(builder, 'react-query.ts', _helpers.reactQuery);
  }
};

exports.plugin = plugin;