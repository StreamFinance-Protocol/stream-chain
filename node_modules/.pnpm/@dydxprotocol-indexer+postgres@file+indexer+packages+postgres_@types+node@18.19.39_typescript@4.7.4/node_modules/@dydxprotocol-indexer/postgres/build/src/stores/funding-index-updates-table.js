"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findFundingIndexMap = exports.findMostRecentMarketFundingIndexUpdate = exports.findById = exports.create = exports.findAll = exports.uuid = void 0;
const big_js_1 = __importDefault(require("big.js"));
const lodash_1 = __importDefault(require("lodash"));
const constants_1 = require("../constants");
const stores_helpers_1 = require("../helpers/stores-helpers");
const transaction_1 = __importDefault(require("../helpers/transaction"));
const uuid_1 = require("../helpers/uuid");
const funding_index_updates_model_1 = __importDefault(require("../models/funding-index-updates-model"));
const types_1 = require("../types");
const PerpetualMarketTable = __importStar(require("./perpetual-market-table"));
function uuid(blockHeight, eventId, perpetualId) {
    // TODO(IND-483): Fix all uuid string substitutions to use Array.join.
    return (0, uuid_1.getUuid)(Buffer.from(`${blockHeight}-${eventId.toString('hex')}-${perpetualId}`, constants_1.BUFFER_ENCODING_UTF_8));
}
exports.uuid = uuid;
async function findAll({ limit, id, perpetualId, eventId, effectiveAt, effectiveAtHeight, effectiveBeforeOrAt, effectiveBeforeOrAtHeight, }, requiredFields, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    (0, stores_helpers_1.verifyAllRequiredFields)({
        limit,
        id,
        perpetualId,
        eventId,
        effectiveAt,
        effectiveAtHeight,
        effectiveBeforeOrAt,
        effectiveBeforeOrAtHeight,
    }, requiredFields);
    let baseQuery = (0, stores_helpers_1.setupBaseQuery)(funding_index_updates_model_1.default, options);
    if (id !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.FundingIndexUpdatesColumns.id, id);
    }
    if (perpetualId !== undefined) {
        baseQuery = baseQuery.whereIn(types_1.FundingIndexUpdatesColumns.perpetualId, perpetualId);
    }
    if (eventId !== undefined) {
        baseQuery = baseQuery.where(types_1.FundingIndexUpdatesColumns.eventId, eventId);
    }
    if (effectiveAt !== undefined) {
        baseQuery = baseQuery.where(types_1.FundingIndexUpdatesColumns.effectiveAt, effectiveAt);
    }
    if (effectiveAtHeight !== undefined) {
        baseQuery = baseQuery.where(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, effectiveAtHeight);
    }
    if (effectiveBeforeOrAt !== undefined) {
        baseQuery = baseQuery.where(types_1.FundingIndexUpdatesColumns.effectiveAt, '<=', effectiveBeforeOrAt);
    }
    if (effectiveBeforeOrAtHeight !== undefined) {
        baseQuery = baseQuery.where(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, '<=', effectiveBeforeOrAtHeight);
    }
    if (options.orderBy !== undefined) {
        for (const [column, order] of options.orderBy) {
            baseQuery = baseQuery.orderBy(column, order);
        }
    }
    else {
        baseQuery = baseQuery.orderBy(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, types_1.Ordering.DESC).orderBy(types_1.FundingIndexUpdatesColumns.eventId, types_1.Ordering.DESC);
    }
    if (limit !== undefined) {
        baseQuery = baseQuery.limit(limit);
    }
    return baseQuery.returning('*');
}
exports.findAll = findAll;
async function create(fundingIndexUpdateToCreate, options = { txId: undefined }) {
    return funding_index_updates_model_1.default.query(transaction_1.default.get(options.txId)).insert({
        id: uuid(fundingIndexUpdateToCreate.effectiveAtHeight, fundingIndexUpdateToCreate.eventId, fundingIndexUpdateToCreate.perpetualId),
        ...fundingIndexUpdateToCreate,
    }).returning('*');
}
exports.create = create;
async function findById(id, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    const baseQuery = (0, stores_helpers_1.setupBaseQuery)(funding_index_updates_model_1.default, options);
    return baseQuery
        .findById(id)
        .returning('*');
}
exports.findById = findById;
async function findMostRecentMarketFundingIndexUpdate(perpetualId, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    const baseQuery = (0, stores_helpers_1.setupBaseQuery)(funding_index_updates_model_1.default, options);
    const fundingIndexUpdates = await baseQuery
        .where(types_1.FundingIndexUpdatesColumns.perpetualId, perpetualId)
        .orderBy(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, types_1.Ordering.DESC)
        .limit(1)
        .returning('*');
    if (fundingIndexUpdates.length === 0) {
        return undefined;
    }
    return fundingIndexUpdates[0];
}
exports.findMostRecentMarketFundingIndexUpdate = findMostRecentMarketFundingIndexUpdate;
async function findFundingIndexMap(effectiveBeforeOrAtHeight, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    // TODO(IND-39): Remove this default when the database is seeded using events emitted from
    // protocol during genesis.
    // Default funding index per perpetual market is 0.
    const perpetualMarkets = await PerpetualMarketTable.findAll({}, [], options);
    const initialFundingIndexMap = lodash_1.default.reduce(perpetualMarkets, (acc, perpetualMarket) => {
        acc[perpetualMarket.id] = (0, big_js_1.default)(0);
        return acc;
    }, {});
    const baseQuery = (0, stores_helpers_1.setupBaseQuery)(funding_index_updates_model_1.default, options);
    const fundingIndexUpdates = await baseQuery
        .distinctOn(types_1.FundingIndexUpdatesColumns.perpetualId)
        .where(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, '<=', effectiveBeforeOrAtHeight)
        .orderBy(types_1.FundingIndexUpdatesColumns.perpetualId)
        .orderBy(types_1.FundingIndexUpdatesColumns.effectiveAtHeight, types_1.Ordering.DESC)
        .returning('*');
    return lodash_1.default.reduce(fundingIndexUpdates, (acc, fundingIndexUpdate) => {
        acc[fundingIndexUpdate.perpetualId] = (0, big_js_1.default)(fundingIndexUpdate.fundingIndex);
        return acc;
    }, initialFundingIndexMap);
}
exports.findFundingIndexMap = findFundingIndexMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuZGluZy1pbmRleC11cGRhdGVzLXRhYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0b3Jlcy9mdW5kaW5nLWluZGV4LXVwZGF0ZXMtdGFibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvREFBeUI7QUFDekIsb0RBQXVCO0FBR3ZCLDRDQUErRTtBQUMvRSw4REFBb0Y7QUFDcEYseUVBQWlEO0FBQ2pELDBDQUEwQztBQUMxQyx3R0FBNkU7QUFDN0Usb0NBV2tCO0FBQ2xCLCtFQUFpRTtBQUVqRSxTQUFnQixJQUFJLENBQ2xCLFdBQW1CLEVBQ25CLE9BQWUsRUFDZixXQUFtQjtJQUVuQixzRUFBc0U7SUFDdEUsT0FBTyxJQUFBLGNBQU8sRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsV0FBVyxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksV0FBVyxFQUFFLEVBQUUsaUNBQXFCLENBQUMsQ0FBQyxDQUFDO0FBQ2pILENBQUM7QUFQRCxvQkFPQztBQUVNLEtBQUssVUFBVSxPQUFPLENBQzNCLEVBQ0UsS0FBSyxFQUNMLEVBQUUsRUFDRixXQUFXLEVBQ1gsT0FBTyxFQUNQLFdBQVcsRUFDWCxpQkFBaUIsRUFDakIsbUJBQW1CLEVBQ25CLHlCQUF5QixHQUNNLEVBQ2pDLGNBQWdDLEVBQ2hDLFVBQW1CLG9DQUF3QjtJQUUzQyxJQUFBLHdDQUF1QixFQUNyQjtRQUNFLEtBQUs7UUFDTCxFQUFFO1FBQ0YsV0FBVztRQUNYLE9BQU87UUFDUCxXQUFXO1FBQ1gsaUJBQWlCO1FBQ2pCLG1CQUFtQjtRQUNuQix5QkFBeUI7S0FDWCxFQUNoQixjQUFjLENBQ2YsQ0FBQztJQUVGLElBQUksU0FBUyxHQUEyQyxJQUFBLCtCQUFjLEVBQ3BFLHFDQUF3QixFQUN4QixPQUFPLENBQ1IsQ0FBQztJQUVGLElBQUksRUFBRSxLQUFLLFNBQVMs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