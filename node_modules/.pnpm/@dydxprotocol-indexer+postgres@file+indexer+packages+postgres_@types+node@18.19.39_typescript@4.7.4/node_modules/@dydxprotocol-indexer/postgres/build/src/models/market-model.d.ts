import { Model } from 'objection';
export default class MarketModel extends Model {
    static get tableName(): string;
    static get idColumn(): string;
    static relationMappings: {
        perpetualMarket: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
        oraclePrices: {
            relation: import("objection").RelationType;
            modelClass: string;
            join: {
                from: string;
                to: string;
            };
        };
    };
    static get jsonSchema(): {
        type: string;
        required: string[];
        properties: {
            id: {
                type: string;
            };
            pair: {
                type: string;
            };
            exponent: {
                type: string;
            };
            minPriceChangePpm: {
                type: string;
            };
            oraclePrice: {
                type: string[];
                pattern: string;
                default: null;
            };
        };
    };
    /**
     * A mapping from column name to JSON conversion expected.
     * See getSqlConversionForDydxModelTypes for valid conversions.
     *
     * TODO(IND-239): Ensure that jsonSchema() / sqlToJsonConversions() / model fields match.
     */
    static get sqlToJsonConversions(): {
        id: string;
        pair: string;
        exponent: string;
        minPriceChangePpm: string;
        oraclePrice: string;
    };
    id: number;
    pair: string;
    exponent: number;
    minPriceChangePpm: number;
    oraclePrice?: string;
}
