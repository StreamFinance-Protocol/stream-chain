"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findById = exports.update = exports.create = exports.findAll = void 0;
const constants_1 = require("../constants");
const stores_helpers_1 = require("../helpers/stores-helpers");
const transaction_1 = __importDefault(require("../helpers/transaction"));
const asset_model_1 = __importDefault(require("../models/asset-model"));
const types_1 = require("../types");
async function findAll({ limit, id, symbol, atomicResolution, hasMarket, marketId, }, requiredFields, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    (0, stores_helpers_1.verifyAllRequiredFields)({
        id,
        symbol,
        atomicResolution,
        hasMarket,
    }, requiredFields);
    let baseQuery = (0, stores_helpers_1.setupBaseQuery)(asset_model_1.default, options);
    if (id) {
        baseQuery = baseQuery.whereIn(types_1.AssetColumns.id, id);
    }
    if (symbol) {
        baseQuery = baseQuery.where(types_1.AssetColumns.symbol, symbol);
    }
    if (atomicResolution) {
        baseQuery = baseQuery.where(types_1.AssetColumns.atomicResolution, atomicResolution);
    }
    if (hasMarket) {
        baseQuery = baseQuery.where(types_1.AssetColumns.hasMarket, hasMarket);
    }
    if (marketId) {
        baseQuery = baseQuery.where(types_1.AssetColumns.marketId, marketId);
    }
    if (options.orderBy !== undefined) {
        for (const [column, order] of options.orderBy) {
            baseQuery = baseQuery.orderBy(column, order);
        }
    }
    else {
        baseQuery = baseQuery.orderBy(types_1.AssetColumns.symbol, types_1.Ordering.ASC);
    }
    if (limit) {
        baseQuery = baseQuery.limit(limit);
    }
    return baseQuery.returning('*');
}
exports.findAll = findAll;
async function create(assetToCreate, options = { txId: undefined }) {
    return asset_model_1.default.query(transaction_1.default.get(options.txId)).insert(assetToCreate).returning('*');
}
exports.create = create;
async function update({ id, ...fields }, options = { txId: undefined }) {
    const asset = await asset_model_1.default.query(transaction_1.default.get(options.txId)).findById(id);
    const updatedAsset = await asset.$query().patch(fields).returning('*');
    // The objection types mistakenly think the query returns an array of assets.
    return updatedAsset;
}
exports.update = update;
async function findById(id, options = constants_1.DEFAULT_POSTGRES_OPTIONS) {
    const baseQuery = (0, stores_helpers_1.setupBaseQuery)(asset_model_1.default, options);
    return baseQuery
        .findById(id)
        .returning('*');
}
exports.findById = findById;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtdGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RvcmVzL2Fzc2V0LXRhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLDRDQUF3RDtBQUN4RCw4REFBb0Y7QUFDcEYseUVBQWlEO0FBQ2pELHdFQUErQztBQUMvQyxvQ0FVa0I7QUFFWCxLQUFLLFVBQVUsT0FBTyxDQUMzQixFQUNFLEtBQUssRUFDTCxFQUFFLEVBQ0YsTUFBTSxFQUNOLGdCQUFnQixFQUNoQixTQUFTLEVBQ1QsUUFBUSxHQUNTLEVBQ25CLGNBQWdDLEVBQ2hDLFVBQW1CLG9DQUF3QjtJQUUzQyxJQUFBLHdDQUF1QixFQUNyQjtRQUNFLEVBQUU7UUFDRixNQUFNO1FBQ04sZ0JBQWdCO1FBQ2hCLFNBQVM7S0FDSyxFQUNoQixjQUFjLENBQ2YsQ0FBQztJQUVGLElBQUksU0FBUyxHQUE2QixJQUFBLCtCQUFjLEVBQ3RELHFCQUFVLEVBQ1YsT0FBTyxDQUNSLENBQUM7SUFFRixJQUFJLEVBQUUsRUFBRTtRQUNOLFNBQVMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLG9CQUFZLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ3BEO0lBRUQsSUFBSSxNQUFNLEVBQUU7UUFDVixTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxvQkFBWSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMxRDtJQUVELElBQUksZ0JBQWdCLEVBQUU7UUFDcEIsU0FBUyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsb0JBQVksQ0FBQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0tBQzlFO0lBRUQsSUFBSSxTQUFTLEVBQUU7UUFDYixTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxvQkFBWSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztLQUNoRTtJQUVELElBQUksUUFBUSxFQUFFO1FBQ1osU0FBUyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsb0JBQVksQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDOUQ7SUFFRCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUFFO1FBQ2pDLEtBQUssTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO1lBQzdDLFNBQVMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUMzQixNQUFNLEVBQ04sS0FBSyxDQUNOLENBQUM7U0FDSDtLQUNGO1NBQU07UUFDTCxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FDM0Isb0JBQVksQ0FBQyxNQUFNLEVBQ25CLGdCQUFRLENBQUMsR0FBRyxDQUNiLENBQUM7S0FDSDtJQUVELElBQUksS0FBSyxFQUFFO1FBQ1QsU0FBUyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDcEM7SUFFRCxPQUFPLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbEMsQ0FBQztBQWxFRCwwQkFrRUM7QUFFTSxLQUFLLFVBQVUsTUFBTSxDQUMxQixhQUFnQyxFQUNoQyxVQUFtQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFFdEMsT0FBTyxxQkFBVSxDQUFDLEtBQUssQ0FDckIscUJBQVcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUM5QixDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDekMsQ0FBQztBQVBELHdCQU9DO0FBRU0sS0FBSyxVQUFVLE1BQU0sQ0FDMUIsRUFDRSxFQUFFLEVBQ0YsR0FBRyxNQUFNLEVBQ1MsRUFDcEIsVUFBbUIsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBRXRDLE1BQU0sS0FBSyxHQUFHLE1BQU0scUJBQVUsQ0FBQyxLQUFLLENBQ2xDLHFCQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FHOUIsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZixNQUFNLFlBQVksR0FBRyxNQUFNLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBd0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6Ryw2RUFBNkU7SUFDN0UsT0FBTyxZQUEwRCxDQUFDO0FBQ3BFLENBQUM7QUFmRCx3QkFlQztBQUVNLEtBQUssVUFBVSxRQUFRLENBQzVCLEVBQVUsRUFDVixVQUFtQixvQ0FBd0I7SUFFM0MsTUFBTSxTQUFTLEdBQTZCLElBQUEsK0JBQWMsRUFDeEQscUJBQVUsRUFDVixPQUFPLENBQ1IsQ0FBQztJQUNGLE9BQU8sU0FBUztTQUNiLFFBQVEsQ0FBQyxFQUFFLENBQUM7U0FDWixTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDcEIsQ0FBQztBQVhELDRCQVdDIn0=