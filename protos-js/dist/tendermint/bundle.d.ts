import * as _169 from "./abci/types";
import * as _170 from "./crypto/keys";
import * as _171 from "./crypto/proof";
import * as _172 from "./libs/bits/types";
import * as _173 from "./p2p/types";
import * as _174 from "./types/block";
import * as _175 from "./types/evidence";
import * as _176 from "./types/params";
import * as _177 from "./types/types";
import * as _178 from "./types/validator";
import * as _179 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _169.CheckTxType;
        checkTxTypeToJSON(object: _169.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _169.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _169.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _169.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _169.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _169.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _169.ResponseProcessProposal_ProposalStatus): string;
        responseVerifyVoteExtension_VerifyStatusFromJSON(object: any): _169.ResponseVerifyVoteExtension_VerifyStatus;
        responseVerifyVoteExtension_VerifyStatusToJSON(object: _169.ResponseVerifyVoteExtension_VerifyStatus): string;
        misbehaviorTypeFromJSON(object: any): _169.MisbehaviorType;
        misbehaviorTypeToJSON(object: _169.MisbehaviorType): string;
        CheckTxType: typeof _169.CheckTxType;
        CheckTxTypeSDKType: typeof _169.CheckTxType;
        CheckTxTypeAmino: typeof _169.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _169.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _169.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _169.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _169.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _169.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _169.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _169.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _169.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _169.ResponseProcessProposal_ProposalStatus;
        ResponseVerifyVoteExtension_VerifyStatus: typeof _169.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusSDKType: typeof _169.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusAmino: typeof _169.ResponseVerifyVoteExtension_VerifyStatus;
        MisbehaviorType: typeof _169.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _169.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _169.MisbehaviorType;
        Request: {
            typeUrl: string;
            is(o: any): o is _169.Request;
            isSDK(o: any): o is _169.RequestSDKType;
            isAmino(o: any): o is _169.RequestAmino;
            encode(message: _169.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Request;
            fromPartial(object: Partial<_169.Request>): _169.Request;
            fromAmino(object: _169.RequestAmino): _169.Request;
            toAmino(message: _169.Request): _169.RequestAmino;
            fromAminoMsg(object: _169.RequestAminoMsg): _169.Request;
            fromProtoMsg(message: _169.RequestProtoMsg): _169.Request;
            toProto(message: _169.Request): Uint8Array;
            toProtoMsg(message: _169.Request): _169.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _169.RequestEcho;
            isSDK(o: any): o is _169.RequestEchoSDKType;
            isAmino(o: any): o is _169.RequestEchoAmino;
            encode(message: _169.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestEcho;
            fromPartial(object: Partial<_169.RequestEcho>): _169.RequestEcho;
            fromAmino(object: _169.RequestEchoAmino): _169.RequestEcho;
            toAmino(message: _169.RequestEcho): _169.RequestEchoAmino;
            fromAminoMsg(object: _169.RequestEchoAminoMsg): _169.RequestEcho;
            fromProtoMsg(message: _169.RequestEchoProtoMsg): _169.RequestEcho;
            toProto(message: _169.RequestEcho): Uint8Array;
            toProtoMsg(message: _169.RequestEcho): _169.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _169.RequestFlush;
            isSDK(o: any): o is _169.RequestFlushSDKType;
            isAmino(o: any): o is _169.RequestFlushAmino;
            encode(_: _169.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestFlush;
            fromPartial(_: Partial<_169.RequestFlush>): _169.RequestFlush;
            fromAmino(_: _169.RequestFlushAmino): _169.RequestFlush;
            toAmino(_: _169.RequestFlush): _169.RequestFlushAmino;
            fromAminoMsg(object: _169.RequestFlushAminoMsg): _169.RequestFlush;
            fromProtoMsg(message: _169.RequestFlushProtoMsg): _169.RequestFlush;
            toProto(message: _169.RequestFlush): Uint8Array;
            toProtoMsg(message: _169.RequestFlush): _169.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _169.RequestInfo;
            isSDK(o: any): o is _169.RequestInfoSDKType;
            isAmino(o: any): o is _169.RequestInfoAmino;
            encode(message: _169.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestInfo;
            fromPartial(object: Partial<_169.RequestInfo>): _169.RequestInfo;
            fromAmino(object: _169.RequestInfoAmino): _169.RequestInfo;
            toAmino(message: _169.RequestInfo): _169.RequestInfoAmino;
            fromAminoMsg(object: _169.RequestInfoAminoMsg): _169.RequestInfo;
            fromProtoMsg(message: _169.RequestInfoProtoMsg): _169.RequestInfo;
            toProto(message: _169.RequestInfo): Uint8Array;
            toProtoMsg(message: _169.RequestInfo): _169.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _169.RequestInitChain;
            isSDK(o: any): o is _169.RequestInitChainSDKType;
            isAmino(o: any): o is _169.RequestInitChainAmino;
            encode(message: _169.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestInitChain;
            fromPartial(object: Partial<_169.RequestInitChain>): _169.RequestInitChain;
            fromAmino(object: _169.RequestInitChainAmino): _169.RequestInitChain;
            toAmino(message: _169.RequestInitChain): _169.RequestInitChainAmino;
            fromAminoMsg(object: _169.RequestInitChainAminoMsg): _169.RequestInitChain;
            fromProtoMsg(message: _169.RequestInitChainProtoMsg): _169.RequestInitChain;
            toProto(message: _169.RequestInitChain): Uint8Array;
            toProtoMsg(message: _169.RequestInitChain): _169.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _169.RequestQuery;
            isSDK(o: any): o is _169.RequestQuerySDKType;
            isAmino(o: any): o is _169.RequestQueryAmino;
            encode(message: _169.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestQuery;
            fromPartial(object: Partial<_169.RequestQuery>): _169.RequestQuery;
            fromAmino(object: _169.RequestQueryAmino): _169.RequestQuery;
            toAmino(message: _169.RequestQuery): _169.RequestQueryAmino;
            fromAminoMsg(object: _169.RequestQueryAminoMsg): _169.RequestQuery;
            fromProtoMsg(message: _169.RequestQueryProtoMsg): _169.RequestQuery;
            toProto(message: _169.RequestQuery): Uint8Array;
            toProtoMsg(message: _169.RequestQuery): _169.RequestQueryProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _169.RequestCheckTx;
            isSDK(o: any): o is _169.RequestCheckTxSDKType;
            isAmino(o: any): o is _169.RequestCheckTxAmino;
            encode(message: _169.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestCheckTx;
            fromPartial(object: Partial<_169.RequestCheckTx>): _169.RequestCheckTx;
            fromAmino(object: _169.RequestCheckTxAmino): _169.RequestCheckTx;
            toAmino(message: _169.RequestCheckTx): _169.RequestCheckTxAmino;
            fromAminoMsg(object: _169.RequestCheckTxAminoMsg): _169.RequestCheckTx;
            fromProtoMsg(message: _169.RequestCheckTxProtoMsg): _169.RequestCheckTx;
            toProto(message: _169.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _169.RequestCheckTx): _169.RequestCheckTxProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _169.RequestCommit;
            isSDK(o: any): o is _169.RequestCommitSDKType;
            isAmino(o: any): o is _169.RequestCommitAmino;
            encode(_: _169.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestCommit;
            fromPartial(_: Partial<_169.RequestCommit>): _169.RequestCommit;
            fromAmino(_: _169.RequestCommitAmino): _169.RequestCommit;
            toAmino(_: _169.RequestCommit): _169.RequestCommitAmino;
            fromAminoMsg(object: _169.RequestCommitAminoMsg): _169.RequestCommit;
            fromProtoMsg(message: _169.RequestCommitProtoMsg): _169.RequestCommit;
            toProto(message: _169.RequestCommit): Uint8Array;
            toProtoMsg(message: _169.RequestCommit): _169.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _169.RequestListSnapshots;
            isSDK(o: any): o is _169.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _169.RequestListSnapshotsAmino;
            encode(_: _169.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestListSnapshots;
            fromPartial(_: Partial<_169.RequestListSnapshots>): _169.RequestListSnapshots;
            fromAmino(_: _169.RequestListSnapshotsAmino): _169.RequestListSnapshots;
            toAmino(_: _169.RequestListSnapshots): _169.RequestListSnapshotsAmino;
            fromAminoMsg(object: _169.RequestListSnapshotsAminoMsg): _169.RequestListSnapshots;
            fromProtoMsg(message: _169.RequestListSnapshotsProtoMsg): _169.RequestListSnapshots;
            toProto(message: _169.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _169.RequestListSnapshots): _169.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _169.RequestOfferSnapshot;
            isSDK(o: any): o is _169.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _169.RequestOfferSnapshotAmino;
            encode(message: _169.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestOfferSnapshot;
            fromPartial(object: Partial<_169.RequestOfferSnapshot>): _169.RequestOfferSnapshot;
            fromAmino(object: _169.RequestOfferSnapshotAmino): _169.RequestOfferSnapshot;
            toAmino(message: _169.RequestOfferSnapshot): _169.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _169.RequestOfferSnapshotAminoMsg): _169.RequestOfferSnapshot;
            fromProtoMsg(message: _169.RequestOfferSnapshotProtoMsg): _169.RequestOfferSnapshot;
            toProto(message: _169.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _169.RequestOfferSnapshot): _169.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _169.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _169.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _169.RequestLoadSnapshotChunkAmino;
            encode(message: _169.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_169.RequestLoadSnapshotChunk>): _169.RequestLoadSnapshotChunk;
            fromAmino(object: _169.RequestLoadSnapshotChunkAmino): _169.RequestLoadSnapshotChunk;
            toAmino(message: _169.RequestLoadSnapshotChunk): _169.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _169.RequestLoadSnapshotChunkAminoMsg): _169.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _169.RequestLoadSnapshotChunkProtoMsg): _169.RequestLoadSnapshotChunk;
            toProto(message: _169.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _169.RequestLoadSnapshotChunk): _169.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _169.RequestApplySnapshotChunk;
            isSDK(o: any): o is _169.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _169.RequestApplySnapshotChunkAmino;
            encode(message: _169.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_169.RequestApplySnapshotChunk>): _169.RequestApplySnapshotChunk;
            fromAmino(object: _169.RequestApplySnapshotChunkAmino): _169.RequestApplySnapshotChunk;
            toAmino(message: _169.RequestApplySnapshotChunk): _169.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _169.RequestApplySnapshotChunkAminoMsg): _169.RequestApplySnapshotChunk;
            fromProtoMsg(message: _169.RequestApplySnapshotChunkProtoMsg): _169.RequestApplySnapshotChunk;
            toProto(message: _169.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _169.RequestApplySnapshotChunk): _169.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            is(o: any): o is _169.RequestPrepareProposal;
            isSDK(o: any): o is _169.RequestPrepareProposalSDKType;
            isAmino(o: any): o is _169.RequestPrepareProposalAmino;
            encode(message: _169.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestPrepareProposal;
            fromPartial(object: Partial<_169.RequestPrepareProposal>): _169.RequestPrepareProposal;
            fromAmino(object: _169.RequestPrepareProposalAmino): _169.RequestPrepareProposal;
            toAmino(message: _169.RequestPrepareProposal): _169.RequestPrepareProposalAmino;
            fromAminoMsg(object: _169.RequestPrepareProposalAminoMsg): _169.RequestPrepareProposal;
            fromProtoMsg(message: _169.RequestPrepareProposalProtoMsg): _169.RequestPrepareProposal;
            toProto(message: _169.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _169.RequestPrepareProposal): _169.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            is(o: any): o is _169.RequestProcessProposal;
            isSDK(o: any): o is _169.RequestProcessProposalSDKType;
            isAmino(o: any): o is _169.RequestProcessProposalAmino;
            encode(message: _169.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestProcessProposal;
            fromPartial(object: Partial<_169.RequestProcessProposal>): _169.RequestProcessProposal;
            fromAmino(object: _169.RequestProcessProposalAmino): _169.RequestProcessProposal;
            toAmino(message: _169.RequestProcessProposal): _169.RequestProcessProposalAmino;
            fromAminoMsg(object: _169.RequestProcessProposalAminoMsg): _169.RequestProcessProposal;
            fromProtoMsg(message: _169.RequestProcessProposalProtoMsg): _169.RequestProcessProposal;
            toProto(message: _169.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _169.RequestProcessProposal): _169.RequestProcessProposalProtoMsg;
        };
        RequestExtendVote: {
            typeUrl: string;
            is(o: any): o is _169.RequestExtendVote;
            isSDK(o: any): o is _169.RequestExtendVoteSDKType;
            isAmino(o: any): o is _169.RequestExtendVoteAmino;
            encode(message: _169.RequestExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestExtendVote;
            fromPartial(object: Partial<_169.RequestExtendVote>): _169.RequestExtendVote;
            fromAmino(object: _169.RequestExtendVoteAmino): _169.RequestExtendVote;
            toAmino(message: _169.RequestExtendVote): _169.RequestExtendVoteAmino;
            fromAminoMsg(object: _169.RequestExtendVoteAminoMsg): _169.RequestExtendVote;
            fromProtoMsg(message: _169.RequestExtendVoteProtoMsg): _169.RequestExtendVote;
            toProto(message: _169.RequestExtendVote): Uint8Array;
            toProtoMsg(message: _169.RequestExtendVote): _169.RequestExtendVoteProtoMsg;
        };
        RequestVerifyVoteExtension: {
            typeUrl: string;
            is(o: any): o is _169.RequestVerifyVoteExtension;
            isSDK(o: any): o is _169.RequestVerifyVoteExtensionSDKType;
            isAmino(o: any): o is _169.RequestVerifyVoteExtensionAmino;
            encode(message: _169.RequestVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestVerifyVoteExtension;
            fromPartial(object: Partial<_169.RequestVerifyVoteExtension>): _169.RequestVerifyVoteExtension;
            fromAmino(object: _169.RequestVerifyVoteExtensionAmino): _169.RequestVerifyVoteExtension;
            toAmino(message: _169.RequestVerifyVoteExtension): _169.RequestVerifyVoteExtensionAmino;
            fromAminoMsg(object: _169.RequestVerifyVoteExtensionAminoMsg): _169.RequestVerifyVoteExtension;
            fromProtoMsg(message: _169.RequestVerifyVoteExtensionProtoMsg): _169.RequestVerifyVoteExtension;
            toProto(message: _169.RequestVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _169.RequestVerifyVoteExtension): _169.RequestVerifyVoteExtensionProtoMsg;
        };
        RequestFinalizeBlock: {
            typeUrl: string;
            is(o: any): o is _169.RequestFinalizeBlock;
            isSDK(o: any): o is _169.RequestFinalizeBlockSDKType;
            isAmino(o: any): o is _169.RequestFinalizeBlockAmino;
            encode(message: _169.RequestFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.RequestFinalizeBlock;
            fromPartial(object: Partial<_169.RequestFinalizeBlock>): _169.RequestFinalizeBlock;
            fromAmino(object: _169.RequestFinalizeBlockAmino): _169.RequestFinalizeBlock;
            toAmino(message: _169.RequestFinalizeBlock): _169.RequestFinalizeBlockAmino;
            fromAminoMsg(object: _169.RequestFinalizeBlockAminoMsg): _169.RequestFinalizeBlock;
            fromProtoMsg(message: _169.RequestFinalizeBlockProtoMsg): _169.RequestFinalizeBlock;
            toProto(message: _169.RequestFinalizeBlock): Uint8Array;
            toProtoMsg(message: _169.RequestFinalizeBlock): _169.RequestFinalizeBlockProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _169.Response;
            isSDK(o: any): o is _169.ResponseSDKType;
            isAmino(o: any): o is _169.ResponseAmino;
            encode(message: _169.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Response;
            fromPartial(object: Partial<_169.Response>): _169.Response;
            fromAmino(object: _169.ResponseAmino): _169.Response;
            toAmino(message: _169.Response): _169.ResponseAmino;
            fromAminoMsg(object: _169.ResponseAminoMsg): _169.Response;
            fromProtoMsg(message: _169.ResponseProtoMsg): _169.Response;
            toProto(message: _169.Response): Uint8Array;
            toProtoMsg(message: _169.Response): _169.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _169.ResponseException;
            isSDK(o: any): o is _169.ResponseExceptionSDKType;
            isAmino(o: any): o is _169.ResponseExceptionAmino;
            encode(message: _169.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseException;
            fromPartial(object: Partial<_169.ResponseException>): _169.ResponseException;
            fromAmino(object: _169.ResponseExceptionAmino): _169.ResponseException;
            toAmino(message: _169.ResponseException): _169.ResponseExceptionAmino;
            fromAminoMsg(object: _169.ResponseExceptionAminoMsg): _169.ResponseException;
            fromProtoMsg(message: _169.ResponseExceptionProtoMsg): _169.ResponseException;
            toProto(message: _169.ResponseException): Uint8Array;
            toProtoMsg(message: _169.ResponseException): _169.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _169.ResponseEcho;
            isSDK(o: any): o is _169.ResponseEchoSDKType;
            isAmino(o: any): o is _169.ResponseEchoAmino;
            encode(message: _169.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseEcho;
            fromPartial(object: Partial<_169.ResponseEcho>): _169.ResponseEcho;
            fromAmino(object: _169.ResponseEchoAmino): _169.ResponseEcho;
            toAmino(message: _169.ResponseEcho): _169.ResponseEchoAmino;
            fromAminoMsg(object: _169.ResponseEchoAminoMsg): _169.ResponseEcho;
            fromProtoMsg(message: _169.ResponseEchoProtoMsg): _169.ResponseEcho;
            toProto(message: _169.ResponseEcho): Uint8Array;
            toProtoMsg(message: _169.ResponseEcho): _169.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _169.ResponseFlush;
            isSDK(o: any): o is _169.ResponseFlushSDKType;
            isAmino(o: any): o is _169.ResponseFlushAmino;
            encode(_: _169.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseFlush;
            fromPartial(_: Partial<_169.ResponseFlush>): _169.ResponseFlush;
            fromAmino(_: _169.ResponseFlushAmino): _169.ResponseFlush;
            toAmino(_: _169.ResponseFlush): _169.ResponseFlushAmino;
            fromAminoMsg(object: _169.ResponseFlushAminoMsg): _169.ResponseFlush;
            fromProtoMsg(message: _169.ResponseFlushProtoMsg): _169.ResponseFlush;
            toProto(message: _169.ResponseFlush): Uint8Array;
            toProtoMsg(message: _169.ResponseFlush): _169.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _169.ResponseInfo;
            isSDK(o: any): o is _169.ResponseInfoSDKType;
            isAmino(o: any): o is _169.ResponseInfoAmino;
            encode(message: _169.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseInfo;
            fromPartial(object: Partial<_169.ResponseInfo>): _169.ResponseInfo;
            fromAmino(object: _169.ResponseInfoAmino): _169.ResponseInfo;
            toAmino(message: _169.ResponseInfo): _169.ResponseInfoAmino;
            fromAminoMsg(object: _169.ResponseInfoAminoMsg): _169.ResponseInfo;
            fromProtoMsg(message: _169.ResponseInfoProtoMsg): _169.ResponseInfo;
            toProto(message: _169.ResponseInfo): Uint8Array;
            toProtoMsg(message: _169.ResponseInfo): _169.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _169.ResponseInitChain;
            isSDK(o: any): o is _169.ResponseInitChainSDKType;
            isAmino(o: any): o is _169.ResponseInitChainAmino;
            encode(message: _169.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseInitChain;
            fromPartial(object: Partial<_169.ResponseInitChain>): _169.ResponseInitChain;
            fromAmino(object: _169.ResponseInitChainAmino): _169.ResponseInitChain;
            toAmino(message: _169.ResponseInitChain): _169.ResponseInitChainAmino;
            fromAminoMsg(object: _169.ResponseInitChainAminoMsg): _169.ResponseInitChain;
            fromProtoMsg(message: _169.ResponseInitChainProtoMsg): _169.ResponseInitChain;
            toProto(message: _169.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _169.ResponseInitChain): _169.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _169.ResponseQuery;
            isSDK(o: any): o is _169.ResponseQuerySDKType;
            isAmino(o: any): o is _169.ResponseQueryAmino;
            encode(message: _169.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseQuery;
            fromPartial(object: Partial<_169.ResponseQuery>): _169.ResponseQuery;
            fromAmino(object: _169.ResponseQueryAmino): _169.ResponseQuery;
            toAmino(message: _169.ResponseQuery): _169.ResponseQueryAmino;
            fromAminoMsg(object: _169.ResponseQueryAminoMsg): _169.ResponseQuery;
            fromProtoMsg(message: _169.ResponseQueryProtoMsg): _169.ResponseQuery;
            toProto(message: _169.ResponseQuery): Uint8Array;
            toProtoMsg(message: _169.ResponseQuery): _169.ResponseQueryProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _169.ResponseCheckTx;
            isSDK(o: any): o is _169.ResponseCheckTxSDKType;
            isAmino(o: any): o is _169.ResponseCheckTxAmino;
            encode(message: _169.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseCheckTx;
            fromPartial(object: Partial<_169.ResponseCheckTx>): _169.ResponseCheckTx;
            fromAmino(object: _169.ResponseCheckTxAmino): _169.ResponseCheckTx;
            toAmino(message: _169.ResponseCheckTx): _169.ResponseCheckTxAmino;
            fromAminoMsg(object: _169.ResponseCheckTxAminoMsg): _169.ResponseCheckTx;
            fromProtoMsg(message: _169.ResponseCheckTxProtoMsg): _169.ResponseCheckTx;
            toProto(message: _169.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _169.ResponseCheckTx): _169.ResponseCheckTxProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _169.ResponseCommit;
            isSDK(o: any): o is _169.ResponseCommitSDKType;
            isAmino(o: any): o is _169.ResponseCommitAmino;
            encode(message: _169.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseCommit;
            fromPartial(object: Partial<_169.ResponseCommit>): _169.ResponseCommit;
            fromAmino(object: _169.ResponseCommitAmino): _169.ResponseCommit;
            toAmino(message: _169.ResponseCommit): _169.ResponseCommitAmino;
            fromAminoMsg(object: _169.ResponseCommitAminoMsg): _169.ResponseCommit;
            fromProtoMsg(message: _169.ResponseCommitProtoMsg): _169.ResponseCommit;
            toProto(message: _169.ResponseCommit): Uint8Array;
            toProtoMsg(message: _169.ResponseCommit): _169.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _169.ResponseListSnapshots;
            isSDK(o: any): o is _169.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _169.ResponseListSnapshotsAmino;
            encode(message: _169.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseListSnapshots;
            fromPartial(object: Partial<_169.ResponseListSnapshots>): _169.ResponseListSnapshots;
            fromAmino(object: _169.ResponseListSnapshotsAmino): _169.ResponseListSnapshots;
            toAmino(message: _169.ResponseListSnapshots): _169.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _169.ResponseListSnapshotsAminoMsg): _169.ResponseListSnapshots;
            fromProtoMsg(message: _169.ResponseListSnapshotsProtoMsg): _169.ResponseListSnapshots;
            toProto(message: _169.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _169.ResponseListSnapshots): _169.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _169.ResponseOfferSnapshot;
            isSDK(o: any): o is _169.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _169.ResponseOfferSnapshotAmino;
            encode(message: _169.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseOfferSnapshot;
            fromPartial(object: Partial<_169.ResponseOfferSnapshot>): _169.ResponseOfferSnapshot;
            fromAmino(object: _169.ResponseOfferSnapshotAmino): _169.ResponseOfferSnapshot;
            toAmino(message: _169.ResponseOfferSnapshot): _169.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _169.ResponseOfferSnapshotAminoMsg): _169.ResponseOfferSnapshot;
            fromProtoMsg(message: _169.ResponseOfferSnapshotProtoMsg): _169.ResponseOfferSnapshot;
            toProto(message: _169.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _169.ResponseOfferSnapshot): _169.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _169.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _169.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _169.ResponseLoadSnapshotChunkAmino;
            encode(message: _169.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_169.ResponseLoadSnapshotChunk>): _169.ResponseLoadSnapshotChunk;
            fromAmino(object: _169.ResponseLoadSnapshotChunkAmino): _169.ResponseLoadSnapshotChunk;
            toAmino(message: _169.ResponseLoadSnapshotChunk): _169.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _169.ResponseLoadSnapshotChunkAminoMsg): _169.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _169.ResponseLoadSnapshotChunkProtoMsg): _169.ResponseLoadSnapshotChunk;
            toProto(message: _169.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _169.ResponseLoadSnapshotChunk): _169.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _169.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _169.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _169.ResponseApplySnapshotChunkAmino;
            encode(message: _169.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_169.ResponseApplySnapshotChunk>): _169.ResponseApplySnapshotChunk;
            fromAmino(object: _169.ResponseApplySnapshotChunkAmino): _169.ResponseApplySnapshotChunk;
            toAmino(message: _169.ResponseApplySnapshotChunk): _169.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _169.ResponseApplySnapshotChunkAminoMsg): _169.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _169.ResponseApplySnapshotChunkProtoMsg): _169.ResponseApplySnapshotChunk;
            toProto(message: _169.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _169.ResponseApplySnapshotChunk): _169.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            is(o: any): o is _169.ResponsePrepareProposal;
            isSDK(o: any): o is _169.ResponsePrepareProposalSDKType;
            isAmino(o: any): o is _169.ResponsePrepareProposalAmino;
            encode(message: _169.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponsePrepareProposal;
            fromPartial(object: Partial<_169.ResponsePrepareProposal>): _169.ResponsePrepareProposal;
            fromAmino(object: _169.ResponsePrepareProposalAmino): _169.ResponsePrepareProposal;
            toAmino(message: _169.ResponsePrepareProposal): _169.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _169.ResponsePrepareProposalAminoMsg): _169.ResponsePrepareProposal;
            fromProtoMsg(message: _169.ResponsePrepareProposalProtoMsg): _169.ResponsePrepareProposal;
            toProto(message: _169.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _169.ResponsePrepareProposal): _169.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            is(o: any): o is _169.ResponseProcessProposal;
            isSDK(o: any): o is _169.ResponseProcessProposalSDKType;
            isAmino(o: any): o is _169.ResponseProcessProposalAmino;
            encode(message: _169.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseProcessProposal;
            fromPartial(object: Partial<_169.ResponseProcessProposal>): _169.ResponseProcessProposal;
            fromAmino(object: _169.ResponseProcessProposalAmino): _169.ResponseProcessProposal;
            toAmino(message: _169.ResponseProcessProposal): _169.ResponseProcessProposalAmino;
            fromAminoMsg(object: _169.ResponseProcessProposalAminoMsg): _169.ResponseProcessProposal;
            fromProtoMsg(message: _169.ResponseProcessProposalProtoMsg): _169.ResponseProcessProposal;
            toProto(message: _169.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _169.ResponseProcessProposal): _169.ResponseProcessProposalProtoMsg;
        };
        ResponseExtendVote: {
            typeUrl: string;
            is(o: any): o is _169.ResponseExtendVote;
            isSDK(o: any): o is _169.ResponseExtendVoteSDKType;
            isAmino(o: any): o is _169.ResponseExtendVoteAmino;
            encode(message: _169.ResponseExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseExtendVote;
            fromPartial(object: Partial<_169.ResponseExtendVote>): _169.ResponseExtendVote;
            fromAmino(object: _169.ResponseExtendVoteAmino): _169.ResponseExtendVote;
            toAmino(message: _169.ResponseExtendVote): _169.ResponseExtendVoteAmino;
            fromAminoMsg(object: _169.ResponseExtendVoteAminoMsg): _169.ResponseExtendVote;
            fromProtoMsg(message: _169.ResponseExtendVoteProtoMsg): _169.ResponseExtendVote;
            toProto(message: _169.ResponseExtendVote): Uint8Array;
            toProtoMsg(message: _169.ResponseExtendVote): _169.ResponseExtendVoteProtoMsg;
        };
        ResponseVerifyVoteExtension: {
            typeUrl: string;
            is(o: any): o is _169.ResponseVerifyVoteExtension;
            isSDK(o: any): o is _169.ResponseVerifyVoteExtensionSDKType;
            isAmino(o: any): o is _169.ResponseVerifyVoteExtensionAmino;
            encode(message: _169.ResponseVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseVerifyVoteExtension;
            fromPartial(object: Partial<_169.ResponseVerifyVoteExtension>): _169.ResponseVerifyVoteExtension;
            fromAmino(object: _169.ResponseVerifyVoteExtensionAmino): _169.ResponseVerifyVoteExtension;
            toAmino(message: _169.ResponseVerifyVoteExtension): _169.ResponseVerifyVoteExtensionAmino;
            fromAminoMsg(object: _169.ResponseVerifyVoteExtensionAminoMsg): _169.ResponseVerifyVoteExtension;
            fromProtoMsg(message: _169.ResponseVerifyVoteExtensionProtoMsg): _169.ResponseVerifyVoteExtension;
            toProto(message: _169.ResponseVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _169.ResponseVerifyVoteExtension): _169.ResponseVerifyVoteExtensionProtoMsg;
        };
        ResponseFinalizeBlock: {
            typeUrl: string;
            is(o: any): o is _169.ResponseFinalizeBlock;
            isSDK(o: any): o is _169.ResponseFinalizeBlockSDKType;
            isAmino(o: any): o is _169.ResponseFinalizeBlockAmino;
            encode(message: _169.ResponseFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ResponseFinalizeBlock;
            fromPartial(object: Partial<_169.ResponseFinalizeBlock>): _169.ResponseFinalizeBlock;
            fromAmino(object: _169.ResponseFinalizeBlockAmino): _169.ResponseFinalizeBlock;
            toAmino(message: _169.ResponseFinalizeBlock): _169.ResponseFinalizeBlockAmino;
            fromAminoMsg(object: _169.ResponseFinalizeBlockAminoMsg): _169.ResponseFinalizeBlock;
            fromProtoMsg(message: _169.ResponseFinalizeBlockProtoMsg): _169.ResponseFinalizeBlock;
            toProto(message: _169.ResponseFinalizeBlock): Uint8Array;
            toProtoMsg(message: _169.ResponseFinalizeBlock): _169.ResponseFinalizeBlockProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            is(o: any): o is _169.CommitInfo;
            isSDK(o: any): o is _169.CommitInfoSDKType;
            isAmino(o: any): o is _169.CommitInfoAmino;
            encode(message: _169.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.CommitInfo;
            fromPartial(object: Partial<_169.CommitInfo>): _169.CommitInfo;
            fromAmino(object: _169.CommitInfoAmino): _169.CommitInfo;
            toAmino(message: _169.CommitInfo): _169.CommitInfoAmino;
            fromAminoMsg(object: _169.CommitInfoAminoMsg): _169.CommitInfo;
            fromProtoMsg(message: _169.CommitInfoProtoMsg): _169.CommitInfo;
            toProto(message: _169.CommitInfo): Uint8Array;
            toProtoMsg(message: _169.CommitInfo): _169.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            is(o: any): o is _169.ExtendedCommitInfo;
            isSDK(o: any): o is _169.ExtendedCommitInfoSDKType;
            isAmino(o: any): o is _169.ExtendedCommitInfoAmino;
            encode(message: _169.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ExtendedCommitInfo;
            fromPartial(object: Partial<_169.ExtendedCommitInfo>): _169.ExtendedCommitInfo;
            fromAmino(object: _169.ExtendedCommitInfoAmino): _169.ExtendedCommitInfo;
            toAmino(message: _169.ExtendedCommitInfo): _169.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _169.ExtendedCommitInfoAminoMsg): _169.ExtendedCommitInfo;
            fromProtoMsg(message: _169.ExtendedCommitInfoProtoMsg): _169.ExtendedCommitInfo;
            toProto(message: _169.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _169.ExtendedCommitInfo): _169.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _169.Event;
            isSDK(o: any): o is _169.EventSDKType;
            isAmino(o: any): o is _169.EventAmino;
            encode(message: _169.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Event;
            fromPartial(object: Partial<_169.Event>): _169.Event;
            fromAmino(object: _169.EventAmino): _169.Event;
            toAmino(message: _169.Event): _169.EventAmino;
            fromAminoMsg(object: _169.EventAminoMsg): _169.Event;
            fromProtoMsg(message: _169.EventProtoMsg): _169.Event;
            toProto(message: _169.Event): Uint8Array;
            toProtoMsg(message: _169.Event): _169.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _169.EventAttribute;
            isSDK(o: any): o is _169.EventAttributeSDKType;
            isAmino(o: any): o is _169.EventAttributeAmino;
            encode(message: _169.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.EventAttribute;
            fromPartial(object: Partial<_169.EventAttribute>): _169.EventAttribute;
            fromAmino(object: _169.EventAttributeAmino): _169.EventAttribute;
            toAmino(message: _169.EventAttribute): _169.EventAttributeAmino;
            fromAminoMsg(object: _169.EventAttributeAminoMsg): _169.EventAttribute;
            fromProtoMsg(message: _169.EventAttributeProtoMsg): _169.EventAttribute;
            toProto(message: _169.EventAttribute): Uint8Array;
            toProtoMsg(message: _169.EventAttribute): _169.EventAttributeProtoMsg;
        };
        ExecTxResult: {
            typeUrl: string;
            is(o: any): o is _169.ExecTxResult;
            isSDK(o: any): o is _169.ExecTxResultSDKType;
            isAmino(o: any): o is _169.ExecTxResultAmino;
            encode(message: _169.ExecTxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ExecTxResult;
            fromPartial(object: Partial<_169.ExecTxResult>): _169.ExecTxResult;
            fromAmino(object: _169.ExecTxResultAmino): _169.ExecTxResult;
            toAmino(message: _169.ExecTxResult): _169.ExecTxResultAmino;
            fromAminoMsg(object: _169.ExecTxResultAminoMsg): _169.ExecTxResult;
            fromProtoMsg(message: _169.ExecTxResultProtoMsg): _169.ExecTxResult;
            toProto(message: _169.ExecTxResult): Uint8Array;
            toProtoMsg(message: _169.ExecTxResult): _169.ExecTxResultProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _169.TxResult;
            isSDK(o: any): o is _169.TxResultSDKType;
            isAmino(o: any): o is _169.TxResultAmino;
            encode(message: _169.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.TxResult;
            fromPartial(object: Partial<_169.TxResult>): _169.TxResult;
            fromAmino(object: _169.TxResultAmino): _169.TxResult;
            toAmino(message: _169.TxResult): _169.TxResultAmino;
            fromAminoMsg(object: _169.TxResultAminoMsg): _169.TxResult;
            fromProtoMsg(message: _169.TxResultProtoMsg): _169.TxResult;
            toProto(message: _169.TxResult): Uint8Array;
            toProtoMsg(message: _169.TxResult): _169.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _169.Validator;
            isSDK(o: any): o is _169.ValidatorSDKType;
            isAmino(o: any): o is _169.ValidatorAmino;
            encode(message: _169.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Validator;
            fromPartial(object: Partial<_169.Validator>): _169.Validator;
            fromAmino(object: _169.ValidatorAmino): _169.Validator;
            toAmino(message: _169.Validator): _169.ValidatorAmino;
            fromAminoMsg(object: _169.ValidatorAminoMsg): _169.Validator;
            fromProtoMsg(message: _169.ValidatorProtoMsg): _169.Validator;
            toProto(message: _169.Validator): Uint8Array;
            toProtoMsg(message: _169.Validator): _169.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _169.ValidatorUpdate;
            isSDK(o: any): o is _169.ValidatorUpdateSDKType;
            isAmino(o: any): o is _169.ValidatorUpdateAmino;
            encode(message: _169.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ValidatorUpdate;
            fromPartial(object: Partial<_169.ValidatorUpdate>): _169.ValidatorUpdate;
            fromAmino(object: _169.ValidatorUpdateAmino): _169.ValidatorUpdate;
            toAmino(message: _169.ValidatorUpdate): _169.ValidatorUpdateAmino;
            fromAminoMsg(object: _169.ValidatorUpdateAminoMsg): _169.ValidatorUpdate;
            fromProtoMsg(message: _169.ValidatorUpdateProtoMsg): _169.ValidatorUpdate;
            toProto(message: _169.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _169.ValidatorUpdate): _169.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _169.VoteInfo;
            isSDK(o: any): o is _169.VoteInfoSDKType;
            isAmino(o: any): o is _169.VoteInfoAmino;
            encode(message: _169.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.VoteInfo;
            fromPartial(object: Partial<_169.VoteInfo>): _169.VoteInfo;
            fromAmino(object: _169.VoteInfoAmino): _169.VoteInfo;
            toAmino(message: _169.VoteInfo): _169.VoteInfoAmino;
            fromAminoMsg(object: _169.VoteInfoAminoMsg): _169.VoteInfo;
            fromProtoMsg(message: _169.VoteInfoProtoMsg): _169.VoteInfo;
            toProto(message: _169.VoteInfo): Uint8Array;
            toProtoMsg(message: _169.VoteInfo): _169.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            is(o: any): o is _169.ExtendedVoteInfo;
            isSDK(o: any): o is _169.ExtendedVoteInfoSDKType;
            isAmino(o: any): o is _169.ExtendedVoteInfoAmino;
            encode(message: _169.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ExtendedVoteInfo;
            fromPartial(object: Partial<_169.ExtendedVoteInfo>): _169.ExtendedVoteInfo;
            fromAmino(object: _169.ExtendedVoteInfoAmino): _169.ExtendedVoteInfo;
            toAmino(message: _169.ExtendedVoteInfo): _169.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _169.ExtendedVoteInfoAminoMsg): _169.ExtendedVoteInfo;
            fromProtoMsg(message: _169.ExtendedVoteInfoProtoMsg): _169.ExtendedVoteInfo;
            toProto(message: _169.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _169.ExtendedVoteInfo): _169.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            is(o: any): o is _169.Misbehavior;
            isSDK(o: any): o is _169.MisbehaviorSDKType;
            isAmino(o: any): o is _169.MisbehaviorAmino;
            encode(message: _169.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Misbehavior;
            fromPartial(object: Partial<_169.Misbehavior>): _169.Misbehavior;
            fromAmino(object: _169.MisbehaviorAmino): _169.Misbehavior;
            toAmino(message: _169.Misbehavior): _169.MisbehaviorAmino;
            fromAminoMsg(object: _169.MisbehaviorAminoMsg): _169.Misbehavior;
            fromProtoMsg(message: _169.MisbehaviorProtoMsg): _169.Misbehavior;
            toProto(message: _169.Misbehavior): Uint8Array;
            toProtoMsg(message: _169.Misbehavior): _169.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _169.Snapshot;
            isSDK(o: any): o is _169.SnapshotSDKType;
            isAmino(o: any): o is _169.SnapshotAmino;
            encode(message: _169.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Snapshot;
            fromPartial(object: Partial<_169.Snapshot>): _169.Snapshot;
            fromAmino(object: _169.SnapshotAmino): _169.Snapshot;
            toAmino(message: _169.Snapshot): _169.SnapshotAmino;
            fromAminoMsg(object: _169.SnapshotAminoMsg): _169.Snapshot;
            fromProtoMsg(message: _169.SnapshotProtoMsg): _169.Snapshot;
            toProto(message: _169.Snapshot): Uint8Array;
            toProtoMsg(message: _169.Snapshot): _169.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _171.Proof;
            isSDK(o: any): o is _171.ProofSDKType;
            isAmino(o: any): o is _171.ProofAmino;
            encode(message: _171.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.Proof;
            fromPartial(object: Partial<_171.Proof>): _171.Proof;
            fromAmino(object: _171.ProofAmino): _171.Proof;
            toAmino(message: _171.Proof): _171.ProofAmino;
            fromAminoMsg(object: _171.ProofAminoMsg): _171.Proof;
            fromProtoMsg(message: _171.ProofProtoMsg): _171.Proof;
            toProto(message: _171.Proof): Uint8Array;
            toProtoMsg(message: _171.Proof): _171.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _171.ValueOp;
            isSDK(o: any): o is _171.ValueOpSDKType;
            isAmino(o: any): o is _171.ValueOpAmino;
            encode(message: _171.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.ValueOp;
            fromPartial(object: Partial<_171.ValueOp>): _171.ValueOp;
            fromAmino(object: _171.ValueOpAmino): _171.ValueOp;
            toAmino(message: _171.ValueOp): _171.ValueOpAmino;
            fromAminoMsg(object: _171.ValueOpAminoMsg): _171.ValueOp;
            fromProtoMsg(message: _171.ValueOpProtoMsg): _171.ValueOp;
            toProto(message: _171.ValueOp): Uint8Array;
            toProtoMsg(message: _171.ValueOp): _171.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _171.DominoOp;
            isSDK(o: any): o is _171.DominoOpSDKType;
            isAmino(o: any): o is _171.DominoOpAmino;
            encode(message: _171.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.DominoOp;
            fromPartial(object: Partial<_171.DominoOp>): _171.DominoOp;
            fromAmino(object: _171.DominoOpAmino): _171.DominoOp;
            toAmino(message: _171.DominoOp): _171.DominoOpAmino;
            fromAminoMsg(object: _171.DominoOpAminoMsg): _171.DominoOp;
            fromProtoMsg(message: _171.DominoOpProtoMsg): _171.DominoOp;
            toProto(message: _171.DominoOp): Uint8Array;
            toProtoMsg(message: _171.DominoOp): _171.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _171.ProofOp;
            isSDK(o: any): o is _171.ProofOpSDKType;
            isAmino(o: any): o is _171.ProofOpAmino;
            encode(message: _171.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.ProofOp;
            fromPartial(object: Partial<_171.ProofOp>): _171.ProofOp;
            fromAmino(object: _171.ProofOpAmino): _171.ProofOp;
            toAmino(message: _171.ProofOp): _171.ProofOpAmino;
            fromAminoMsg(object: _171.ProofOpAminoMsg): _171.ProofOp;
            fromProtoMsg(message: _171.ProofOpProtoMsg): _171.ProofOp;
            toProto(message: _171.ProofOp): Uint8Array;
            toProtoMsg(message: _171.ProofOp): _171.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _171.ProofOps;
            isSDK(o: any): o is _171.ProofOpsSDKType;
            isAmino(o: any): o is _171.ProofOpsAmino;
            encode(message: _171.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.ProofOps;
            fromPartial(object: Partial<_171.ProofOps>): _171.ProofOps;
            fromAmino(object: _171.ProofOpsAmino): _171.ProofOps;
            toAmino(message: _171.ProofOps): _171.ProofOpsAmino;
            fromAminoMsg(object: _171.ProofOpsAminoMsg): _171.ProofOps;
            fromProtoMsg(message: _171.ProofOpsProtoMsg): _171.ProofOps;
            toProto(message: _171.ProofOps): Uint8Array;
            toProtoMsg(message: _171.ProofOps): _171.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _170.PublicKey;
            isSDK(o: any): o is _170.PublicKeySDKType;
            isAmino(o: any): o is _170.PublicKeyAmino;
            encode(message: _170.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.PublicKey;
            fromPartial(object: Partial<_170.PublicKey>): _170.PublicKey;
            fromAmino(object: _170.PublicKeyAmino): _170.PublicKey;
            toAmino(message: _170.PublicKey): _170.PublicKeyAmino;
            fromAminoMsg(object: _170.PublicKeyAminoMsg): _170.PublicKey;
            fromProtoMsg(message: _170.PublicKeyProtoMsg): _170.PublicKey;
            toProto(message: _170.PublicKey): Uint8Array;
            toProtoMsg(message: _170.PublicKey): _170.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _172.BitArray;
                isSDK(o: any): o is _172.BitArraySDKType;
                isAmino(o: any): o is _172.BitArrayAmino;
                encode(message: _172.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: import("..").BinaryReader | Uint8Array, length?: number): _172.BitArray;
                fromPartial(object: Partial<_172.BitArray>): _172.BitArray;
                fromAmino(object: _172.BitArrayAmino): _172.BitArray;
                toAmino(message: _172.BitArray): _172.BitArrayAmino;
                fromAminoMsg(object: _172.BitArrayAminoMsg): _172.BitArray;
                fromProtoMsg(message: _172.BitArrayProtoMsg): _172.BitArray;
                toProto(message: _172.BitArray): Uint8Array;
                toProtoMsg(message: _172.BitArray): _172.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            is(o: any): o is _173.NetAddress;
            isSDK(o: any): o is _173.NetAddressSDKType;
            isAmino(o: any): o is _173.NetAddressAmino;
            encode(message: _173.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _173.NetAddress;
            fromPartial(object: Partial<_173.NetAddress>): _173.NetAddress;
            fromAmino(object: _173.NetAddressAmino): _173.NetAddress;
            toAmino(message: _173.NetAddress): _173.NetAddressAmino;
            fromAminoMsg(object: _173.NetAddressAminoMsg): _173.NetAddress;
            fromProtoMsg(message: _173.NetAddressProtoMsg): _173.NetAddress;
            toProto(message: _173.NetAddress): Uint8Array;
            toProtoMsg(message: _173.NetAddress): _173.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _173.ProtocolVersion;
            isSDK(o: any): o is _173.ProtocolVersionSDKType;
            isAmino(o: any): o is _173.ProtocolVersionAmino;
            encode(message: _173.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _173.ProtocolVersion;
            fromPartial(object: Partial<_173.ProtocolVersion>): _173.ProtocolVersion;
            fromAmino(object: _173.ProtocolVersionAmino): _173.ProtocolVersion;
            toAmino(message: _173.ProtocolVersion): _173.ProtocolVersionAmino;
            fromAminoMsg(object: _173.ProtocolVersionAminoMsg): _173.ProtocolVersion;
            fromProtoMsg(message: _173.ProtocolVersionProtoMsg): _173.ProtocolVersion;
            toProto(message: _173.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _173.ProtocolVersion): _173.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            is(o: any): o is _173.DefaultNodeInfo;
            isSDK(o: any): o is _173.DefaultNodeInfoSDKType;
            isAmino(o: any): o is _173.DefaultNodeInfoAmino;
            encode(message: _173.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _173.DefaultNodeInfo;
            fromPartial(object: Partial<_173.DefaultNodeInfo>): _173.DefaultNodeInfo;
            fromAmino(object: _173.DefaultNodeInfoAmino): _173.DefaultNodeInfo;
            toAmino(message: _173.DefaultNodeInfo): _173.DefaultNodeInfoAmino;
            fromAminoMsg(object: _173.DefaultNodeInfoAminoMsg): _173.DefaultNodeInfo;
            fromProtoMsg(message: _173.DefaultNodeInfoProtoMsg): _173.DefaultNodeInfo;
            toProto(message: _173.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _173.DefaultNodeInfo): _173.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _173.DefaultNodeInfoOther;
            isSDK(o: any): o is _173.DefaultNodeInfoOtherSDKType;
            isAmino(o: any): o is _173.DefaultNodeInfoOtherAmino;
            encode(message: _173.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _173.DefaultNodeInfoOther;
            fromPartial(object: Partial<_173.DefaultNodeInfoOther>): _173.DefaultNodeInfoOther;
            fromAmino(object: _173.DefaultNodeInfoOtherAmino): _173.DefaultNodeInfoOther;
            toAmino(message: _173.DefaultNodeInfoOther): _173.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _173.DefaultNodeInfoOtherAminoMsg): _173.DefaultNodeInfoOther;
            fromProtoMsg(message: _173.DefaultNodeInfoOtherProtoMsg): _173.DefaultNodeInfoOther;
            toProto(message: _173.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _173.DefaultNodeInfoOther): _173.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        blockIDFlagFromJSON(object: any): _178.BlockIDFlag;
        blockIDFlagToJSON(object: _178.BlockIDFlag): string;
        BlockIDFlag: typeof _178.BlockIDFlag;
        BlockIDFlagSDKType: typeof _178.BlockIDFlag;
        BlockIDFlagAmino: typeof _178.BlockIDFlag;
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _178.ValidatorSet;
            isSDK(o: any): o is _178.ValidatorSetSDKType;
            isAmino(o: any): o is _178.ValidatorSetAmino;
            encode(message: _178.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _178.ValidatorSet;
            fromPartial(object: Partial<_178.ValidatorSet>): _178.ValidatorSet;
            fromAmino(object: _178.ValidatorSetAmino): _178.ValidatorSet;
            toAmino(message: _178.ValidatorSet): _178.ValidatorSetAmino;
            fromAminoMsg(object: _178.ValidatorSetAminoMsg): _178.ValidatorSet;
            fromProtoMsg(message: _178.ValidatorSetProtoMsg): _178.ValidatorSet;
            toProto(message: _178.ValidatorSet): Uint8Array;
            toProtoMsg(message: _178.ValidatorSet): _178.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _178.Validator;
            isSDK(o: any): o is _178.ValidatorSDKType;
            isAmino(o: any): o is _178.ValidatorAmino;
            encode(message: _178.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _178.Validator;
            fromPartial(object: Partial<_178.Validator>): _178.Validator;
            fromAmino(object: _178.ValidatorAmino): _178.Validator;
            toAmino(message: _178.Validator): _178.ValidatorAmino;
            fromAminoMsg(object: _178.ValidatorAminoMsg): _178.Validator;
            fromProtoMsg(message: _178.ValidatorProtoMsg): _178.Validator;
            toProto(message: _178.Validator): Uint8Array;
            toProtoMsg(message: _178.Validator): _178.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _178.SimpleValidator;
            isSDK(o: any): o is _178.SimpleValidatorSDKType;
            isAmino(o: any): o is _178.SimpleValidatorAmino;
            encode(message: _178.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _178.SimpleValidator;
            fromPartial(object: Partial<_178.SimpleValidator>): _178.SimpleValidator;
            fromAmino(object: _178.SimpleValidatorAmino): _178.SimpleValidator;
            toAmino(message: _178.SimpleValidator): _178.SimpleValidatorAmino;
            fromAminoMsg(object: _178.SimpleValidatorAminoMsg): _178.SimpleValidator;
            fromProtoMsg(message: _178.SimpleValidatorProtoMsg): _178.SimpleValidator;
            toProto(message: _178.SimpleValidator): Uint8Array;
            toProtoMsg(message: _178.SimpleValidator): _178.SimpleValidatorProtoMsg;
        };
        signedMsgTypeFromJSON(object: any): _177.SignedMsgType;
        signedMsgTypeToJSON(object: _177.SignedMsgType): string;
        SignedMsgType: typeof _177.SignedMsgType;
        SignedMsgTypeSDKType: typeof _177.SignedMsgType;
        SignedMsgTypeAmino: typeof _177.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _177.PartSetHeader;
            isSDK(o: any): o is _177.PartSetHeaderSDKType;
            isAmino(o: any): o is _177.PartSetHeaderAmino;
            encode(message: _177.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.PartSetHeader;
            fromPartial(object: Partial<_177.PartSetHeader>): _177.PartSetHeader;
            fromAmino(object: _177.PartSetHeaderAmino): _177.PartSetHeader;
            toAmino(message: _177.PartSetHeader): _177.PartSetHeaderAmino;
            fromAminoMsg(object: _177.PartSetHeaderAminoMsg): _177.PartSetHeader;
            fromProtoMsg(message: _177.PartSetHeaderProtoMsg): _177.PartSetHeader;
            toProto(message: _177.PartSetHeader): Uint8Array;
            toProtoMsg(message: _177.PartSetHeader): _177.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _177.Part;
            isSDK(o: any): o is _177.PartSDKType;
            isAmino(o: any): o is _177.PartAmino;
            encode(message: _177.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Part;
            fromPartial(object: Partial<_177.Part>): _177.Part;
            fromAmino(object: _177.PartAmino): _177.Part;
            toAmino(message: _177.Part): _177.PartAmino;
            fromAminoMsg(object: _177.PartAminoMsg): _177.Part;
            fromProtoMsg(message: _177.PartProtoMsg): _177.Part;
            toProto(message: _177.Part): Uint8Array;
            toProtoMsg(message: _177.Part): _177.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _177.BlockID;
            isSDK(o: any): o is _177.BlockIDSDKType;
            isAmino(o: any): o is _177.BlockIDAmino;
            encode(message: _177.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.BlockID;
            fromPartial(object: Partial<_177.BlockID>): _177.BlockID;
            fromAmino(object: _177.BlockIDAmino): _177.BlockID;
            toAmino(message: _177.BlockID): _177.BlockIDAmino;
            fromAminoMsg(object: _177.BlockIDAminoMsg): _177.BlockID;
            fromProtoMsg(message: _177.BlockIDProtoMsg): _177.BlockID;
            toProto(message: _177.BlockID): Uint8Array;
            toProtoMsg(message: _177.BlockID): _177.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _177.Header;
            isSDK(o: any): o is _177.HeaderSDKType;
            isAmino(o: any): o is _177.HeaderAmino;
            encode(message: _177.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Header;
            fromPartial(object: Partial<_177.Header>): _177.Header;
            fromAmino(object: _177.HeaderAmino): _177.Header;
            toAmino(message: _177.Header): _177.HeaderAmino;
            fromAminoMsg(object: _177.HeaderAminoMsg): _177.Header;
            fromProtoMsg(message: _177.HeaderProtoMsg): _177.Header;
            toProto(message: _177.Header): Uint8Array;
            toProtoMsg(message: _177.Header): _177.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _177.Data;
            isSDK(o: any): o is _177.DataSDKType;
            isAmino(o: any): o is _177.DataAmino;
            encode(message: _177.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Data;
            fromPartial(object: Partial<_177.Data>): _177.Data;
            fromAmino(object: _177.DataAmino): _177.Data;
            toAmino(message: _177.Data): _177.DataAmino;
            fromAminoMsg(object: _177.DataAminoMsg): _177.Data;
            fromProtoMsg(message: _177.DataProtoMsg): _177.Data;
            toProto(message: _177.Data): Uint8Array;
            toProtoMsg(message: _177.Data): _177.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _177.Vote;
            isSDK(o: any): o is _177.VoteSDKType;
            isAmino(o: any): o is _177.VoteAmino;
            encode(message: _177.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Vote;
            fromPartial(object: Partial<_177.Vote>): _177.Vote;
            fromAmino(object: _177.VoteAmino): _177.Vote;
            toAmino(message: _177.Vote): _177.VoteAmino;
            fromAminoMsg(object: _177.VoteAminoMsg): _177.Vote;
            fromProtoMsg(message: _177.VoteProtoMsg): _177.Vote;
            toProto(message: _177.Vote): Uint8Array;
            toProtoMsg(message: _177.Vote): _177.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _177.Commit;
            isSDK(o: any): o is _177.CommitSDKType;
            isAmino(o: any): o is _177.CommitAmino;
            encode(message: _177.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Commit;
            fromPartial(object: Partial<_177.Commit>): _177.Commit;
            fromAmino(object: _177.CommitAmino): _177.Commit;
            toAmino(message: _177.Commit): _177.CommitAmino;
            fromAminoMsg(object: _177.CommitAminoMsg): _177.Commit;
            fromProtoMsg(message: _177.CommitProtoMsg): _177.Commit;
            toProto(message: _177.Commit): Uint8Array;
            toProtoMsg(message: _177.Commit): _177.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _177.CommitSig;
            isSDK(o: any): o is _177.CommitSigSDKType;
            isAmino(o: any): o is _177.CommitSigAmino;
            encode(message: _177.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.CommitSig;
            fromPartial(object: Partial<_177.CommitSig>): _177.CommitSig;
            fromAmino(object: _177.CommitSigAmino): _177.CommitSig;
            toAmino(message: _177.CommitSig): _177.CommitSigAmino;
            fromAminoMsg(object: _177.CommitSigAminoMsg): _177.CommitSig;
            fromProtoMsg(message: _177.CommitSigProtoMsg): _177.CommitSig;
            toProto(message: _177.CommitSig): Uint8Array;
            toProtoMsg(message: _177.CommitSig): _177.CommitSigProtoMsg;
        };
        ExtendedCommit: {
            typeUrl: string;
            is(o: any): o is _177.ExtendedCommit;
            isSDK(o: any): o is _177.ExtendedCommitSDKType;
            isAmino(o: any): o is _177.ExtendedCommitAmino;
            encode(message: _177.ExtendedCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.ExtendedCommit;
            fromPartial(object: Partial<_177.ExtendedCommit>): _177.ExtendedCommit;
            fromAmino(object: _177.ExtendedCommitAmino): _177.ExtendedCommit;
            toAmino(message: _177.ExtendedCommit): _177.ExtendedCommitAmino;
            fromAminoMsg(object: _177.ExtendedCommitAminoMsg): _177.ExtendedCommit;
            fromProtoMsg(message: _177.ExtendedCommitProtoMsg): _177.ExtendedCommit;
            toProto(message: _177.ExtendedCommit): Uint8Array;
            toProtoMsg(message: _177.ExtendedCommit): _177.ExtendedCommitProtoMsg;
        };
        ExtendedCommitSig: {
            typeUrl: string;
            is(o: any): o is _177.ExtendedCommitSig;
            isSDK(o: any): o is _177.ExtendedCommitSigSDKType;
            isAmino(o: any): o is _177.ExtendedCommitSigAmino;
            encode(message: _177.ExtendedCommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.ExtendedCommitSig;
            fromPartial(object: Partial<_177.ExtendedCommitSig>): _177.ExtendedCommitSig;
            fromAmino(object: _177.ExtendedCommitSigAmino): _177.ExtendedCommitSig;
            toAmino(message: _177.ExtendedCommitSig): _177.ExtendedCommitSigAmino;
            fromAminoMsg(object: _177.ExtendedCommitSigAminoMsg): _177.ExtendedCommitSig;
            fromProtoMsg(message: _177.ExtendedCommitSigProtoMsg): _177.ExtendedCommitSig;
            toProto(message: _177.ExtendedCommitSig): Uint8Array;
            toProtoMsg(message: _177.ExtendedCommitSig): _177.ExtendedCommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _177.Proposal;
            isSDK(o: any): o is _177.ProposalSDKType;
            isAmino(o: any): o is _177.ProposalAmino;
            encode(message: _177.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Proposal;
            fromPartial(object: Partial<_177.Proposal>): _177.Proposal;
            fromAmino(object: _177.ProposalAmino): _177.Proposal;
            toAmino(message: _177.Proposal): _177.ProposalAmino;
            fromAminoMsg(object: _177.ProposalAminoMsg): _177.Proposal;
            fromProtoMsg(message: _177.ProposalProtoMsg): _177.Proposal;
            toProto(message: _177.Proposal): Uint8Array;
            toProtoMsg(message: _177.Proposal): _177.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _177.SignedHeader;
            isSDK(o: any): o is _177.SignedHeaderSDKType;
            isAmino(o: any): o is _177.SignedHeaderAmino;
            encode(message: _177.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.SignedHeader;
            fromPartial(object: Partial<_177.SignedHeader>): _177.SignedHeader;
            fromAmino(object: _177.SignedHeaderAmino): _177.SignedHeader;
            toAmino(message: _177.SignedHeader): _177.SignedHeaderAmino;
            fromAminoMsg(object: _177.SignedHeaderAminoMsg): _177.SignedHeader;
            fromProtoMsg(message: _177.SignedHeaderProtoMsg): _177.SignedHeader;
            toProto(message: _177.SignedHeader): Uint8Array;
            toProtoMsg(message: _177.SignedHeader): _177.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _177.LightBlock;
            isSDK(o: any): o is _177.LightBlockSDKType;
            isAmino(o: any): o is _177.LightBlockAmino;
            encode(message: _177.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.LightBlock;
            fromPartial(object: Partial<_177.LightBlock>): _177.LightBlock;
            fromAmino(object: _177.LightBlockAmino): _177.LightBlock;
            toAmino(message: _177.LightBlock): _177.LightBlockAmino;
            fromAminoMsg(object: _177.LightBlockAminoMsg): _177.LightBlock;
            fromProtoMsg(message: _177.LightBlockProtoMsg): _177.LightBlock;
            toProto(message: _177.LightBlock): Uint8Array;
            toProtoMsg(message: _177.LightBlock): _177.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _177.BlockMeta;
            isSDK(o: any): o is _177.BlockMetaSDKType;
            isAmino(o: any): o is _177.BlockMetaAmino;
            encode(message: _177.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.BlockMeta;
            fromPartial(object: Partial<_177.BlockMeta>): _177.BlockMeta;
            fromAmino(object: _177.BlockMetaAmino): _177.BlockMeta;
            toAmino(message: _177.BlockMeta): _177.BlockMetaAmino;
            fromAminoMsg(object: _177.BlockMetaAminoMsg): _177.BlockMeta;
            fromProtoMsg(message: _177.BlockMetaProtoMsg): _177.BlockMeta;
            toProto(message: _177.BlockMeta): Uint8Array;
            toProtoMsg(message: _177.BlockMeta): _177.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _177.TxProof;
            isSDK(o: any): o is _177.TxProofSDKType;
            isAmino(o: any): o is _177.TxProofAmino;
            encode(message: _177.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.TxProof;
            fromPartial(object: Partial<_177.TxProof>): _177.TxProof;
            fromAmino(object: _177.TxProofAmino): _177.TxProof;
            toAmino(message: _177.TxProof): _177.TxProofAmino;
            fromAminoMsg(object: _177.TxProofAminoMsg): _177.TxProof;
            fromProtoMsg(message: _177.TxProofProtoMsg): _177.TxProof;
            toProto(message: _177.TxProof): Uint8Array;
            toProtoMsg(message: _177.TxProof): _177.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _176.ConsensusParams;
            isSDK(o: any): o is _176.ConsensusParamsSDKType;
            isAmino(o: any): o is _176.ConsensusParamsAmino;
            encode(message: _176.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.ConsensusParams;
            fromPartial(object: Partial<_176.ConsensusParams>): _176.ConsensusParams;
            fromAmino(object: _176.ConsensusParamsAmino): _176.ConsensusParams;
            toAmino(message: _176.ConsensusParams): _176.ConsensusParamsAmino;
            fromAminoMsg(object: _176.ConsensusParamsAminoMsg): _176.ConsensusParams;
            fromProtoMsg(message: _176.ConsensusParamsProtoMsg): _176.ConsensusParams;
            toProto(message: _176.ConsensusParams): Uint8Array;
            toProtoMsg(message: _176.ConsensusParams): _176.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _176.BlockParams;
            isSDK(o: any): o is _176.BlockParamsSDKType;
            isAmino(o: any): o is _176.BlockParamsAmino;
            encode(message: _176.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.BlockParams;
            fromPartial(object: Partial<_176.BlockParams>): _176.BlockParams;
            fromAmino(object: _176.BlockParamsAmino): _176.BlockParams;
            toAmino(message: _176.BlockParams): _176.BlockParamsAmino;
            fromAminoMsg(object: _176.BlockParamsAminoMsg): _176.BlockParams;
            fromProtoMsg(message: _176.BlockParamsProtoMsg): _176.BlockParams;
            toProto(message: _176.BlockParams): Uint8Array;
            toProtoMsg(message: _176.BlockParams): _176.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _176.EvidenceParams;
            isSDK(o: any): o is _176.EvidenceParamsSDKType;
            isAmino(o: any): o is _176.EvidenceParamsAmino;
            encode(message: _176.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.EvidenceParams;
            fromPartial(object: Partial<_176.EvidenceParams>): _176.EvidenceParams;
            fromAmino(object: _176.EvidenceParamsAmino): _176.EvidenceParams;
            toAmino(message: _176.EvidenceParams): _176.EvidenceParamsAmino;
            fromAminoMsg(object: _176.EvidenceParamsAminoMsg): _176.EvidenceParams;
            fromProtoMsg(message: _176.EvidenceParamsProtoMsg): _176.EvidenceParams;
            toProto(message: _176.EvidenceParams): Uint8Array;
            toProtoMsg(message: _176.EvidenceParams): _176.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _176.ValidatorParams;
            isSDK(o: any): o is _176.ValidatorParamsSDKType;
            isAmino(o: any): o is _176.ValidatorParamsAmino;
            encode(message: _176.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.ValidatorParams;
            fromPartial(object: Partial<_176.ValidatorParams>): _176.ValidatorParams;
            fromAmino(object: _176.ValidatorParamsAmino): _176.ValidatorParams;
            toAmino(message: _176.ValidatorParams): _176.ValidatorParamsAmino;
            fromAminoMsg(object: _176.ValidatorParamsAminoMsg): _176.ValidatorParams;
            fromProtoMsg(message: _176.ValidatorParamsProtoMsg): _176.ValidatorParams;
            toProto(message: _176.ValidatorParams): Uint8Array;
            toProtoMsg(message: _176.ValidatorParams): _176.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _176.VersionParams;
            isSDK(o: any): o is _176.VersionParamsSDKType;
            isAmino(o: any): o is _176.VersionParamsAmino;
            encode(message: _176.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.VersionParams;
            fromPartial(object: Partial<_176.VersionParams>): _176.VersionParams;
            fromAmino(object: _176.VersionParamsAmino): _176.VersionParams;
            toAmino(message: _176.VersionParams): _176.VersionParamsAmino;
            fromAminoMsg(object: _176.VersionParamsAminoMsg): _176.VersionParams;
            fromProtoMsg(message: _176.VersionParamsProtoMsg): _176.VersionParams;
            toProto(message: _176.VersionParams): Uint8Array;
            toProtoMsg(message: _176.VersionParams): _176.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _176.HashedParams;
            isSDK(o: any): o is _176.HashedParamsSDKType;
            isAmino(o: any): o is _176.HashedParamsAmino;
            encode(message: _176.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.HashedParams;
            fromPartial(object: Partial<_176.HashedParams>): _176.HashedParams;
            fromAmino(object: _176.HashedParamsAmino): _176.HashedParams;
            toAmino(message: _176.HashedParams): _176.HashedParamsAmino;
            fromAminoMsg(object: _176.HashedParamsAminoMsg): _176.HashedParams;
            fromProtoMsg(message: _176.HashedParamsProtoMsg): _176.HashedParams;
            toProto(message: _176.HashedParams): Uint8Array;
            toProtoMsg(message: _176.HashedParams): _176.HashedParamsProtoMsg;
        };
        ABCIParams: {
            typeUrl: string;
            is(o: any): o is _176.ABCIParams;
            isSDK(o: any): o is _176.ABCIParamsSDKType;
            isAmino(o: any): o is _176.ABCIParamsAmino;
            encode(message: _176.ABCIParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.ABCIParams;
            fromPartial(object: Partial<_176.ABCIParams>): _176.ABCIParams;
            fromAmino(object: _176.ABCIParamsAmino): _176.ABCIParams;
            toAmino(message: _176.ABCIParams): _176.ABCIParamsAmino;
            fromAminoMsg(object: _176.ABCIParamsAminoMsg): _176.ABCIParams;
            fromProtoMsg(message: _176.ABCIParamsProtoMsg): _176.ABCIParams;
            toProto(message: _176.ABCIParams): Uint8Array;
            toProtoMsg(message: _176.ABCIParams): _176.ABCIParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _175.Evidence;
            isSDK(o: any): o is _175.EvidenceSDKType;
            isAmino(o: any): o is _175.EvidenceAmino;
            encode(message: _175.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.Evidence;
            fromPartial(object: Partial<_175.Evidence>): _175.Evidence;
            fromAmino(object: _175.EvidenceAmino): _175.Evidence;
            toAmino(message: _175.Evidence): _175.EvidenceAmino;
            fromAminoMsg(object: _175.EvidenceAminoMsg): _175.Evidence;
            fromProtoMsg(message: _175.EvidenceProtoMsg): _175.Evidence;
            toProto(message: _175.Evidence): Uint8Array;
            toProtoMsg(message: _175.Evidence): _175.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _175.DuplicateVoteEvidence;
            isSDK(o: any): o is _175.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _175.DuplicateVoteEvidenceAmino;
            encode(message: _175.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.DuplicateVoteEvidence;
            fromPartial(object: Partial<_175.DuplicateVoteEvidence>): _175.DuplicateVoteEvidence;
            fromAmino(object: _175.DuplicateVoteEvidenceAmino): _175.DuplicateVoteEvidence;
            toAmino(message: _175.DuplicateVoteEvidence): _175.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _175.DuplicateVoteEvidenceAminoMsg): _175.DuplicateVoteEvidence;
            fromProtoMsg(message: _175.DuplicateVoteEvidenceProtoMsg): _175.DuplicateVoteEvidence;
            toProto(message: _175.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _175.DuplicateVoteEvidence): _175.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _175.LightClientAttackEvidence;
            isSDK(o: any): o is _175.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _175.LightClientAttackEvidenceAmino;
            encode(message: _175.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.LightClientAttackEvidence;
            fromPartial(object: Partial<_175.LightClientAttackEvidence>): _175.LightClientAttackEvidence;
            fromAmino(object: _175.LightClientAttackEvidenceAmino): _175.LightClientAttackEvidence;
            toAmino(message: _175.LightClientAttackEvidence): _175.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _175.LightClientAttackEvidenceAminoMsg): _175.LightClientAttackEvidence;
            fromProtoMsg(message: _175.LightClientAttackEvidenceProtoMsg): _175.LightClientAttackEvidence;
            toProto(message: _175.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _175.LightClientAttackEvidence): _175.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _175.EvidenceList;
            isSDK(o: any): o is _175.EvidenceListSDKType;
            isAmino(o: any): o is _175.EvidenceListAmino;
            encode(message: _175.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.EvidenceList;
            fromPartial(object: Partial<_175.EvidenceList>): _175.EvidenceList;
            fromAmino(object: _175.EvidenceListAmino): _175.EvidenceList;
            toAmino(message: _175.EvidenceList): _175.EvidenceListAmino;
            fromAminoMsg(object: _175.EvidenceListAminoMsg): _175.EvidenceList;
            fromProtoMsg(message: _175.EvidenceListProtoMsg): _175.EvidenceList;
            toProto(message: _175.EvidenceList): Uint8Array;
            toProtoMsg(message: _175.EvidenceList): _175.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _174.Block;
            isSDK(o: any): o is _174.BlockSDKType;
            isAmino(o: any): o is _174.BlockAmino;
            encode(message: _174.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _174.Block;
            fromPartial(object: Partial<_174.Block>): _174.Block;
            fromAmino(object: _174.BlockAmino): _174.Block;
            toAmino(message: _174.Block): _174.BlockAmino;
            fromAminoMsg(object: _174.BlockAminoMsg): _174.Block;
            fromProtoMsg(message: _174.BlockProtoMsg): _174.Block;
            toProto(message: _174.Block): Uint8Array;
            toProtoMsg(message: _174.Block): _174.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _179.App;
            isSDK(o: any): o is _179.AppSDKType;
            isAmino(o: any): o is _179.AppAmino;
            encode(message: _179.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _179.App;
            fromPartial(object: Partial<_179.App>): _179.App;
            fromAmino(object: _179.AppAmino): _179.App;
            toAmino(message: _179.App): _179.AppAmino;
            fromAminoMsg(object: _179.AppAminoMsg): _179.App;
            fromProtoMsg(message: _179.AppProtoMsg): _179.App;
            toProto(message: _179.App): Uint8Array;
            toProtoMsg(message: _179.App): _179.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _179.Consensus;
            isSDK(o: any): o is _179.ConsensusSDKType;
            isAmino(o: any): o is _179.ConsensusAmino;
            encode(message: _179.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _179.Consensus;
            fromPartial(object: Partial<_179.Consensus>): _179.Consensus;
            fromAmino(object: _179.ConsensusAmino): _179.Consensus;
            toAmino(message: _179.Consensus): _179.ConsensusAmino;
            fromAminoMsg(object: _179.ConsensusAminoMsg): _179.Consensus;
            fromProtoMsg(message: _179.ConsensusProtoMsg): _179.Consensus;
            toProto(message: _179.Consensus): Uint8Array;
            toProtoMsg(message: _179.Consensus): _179.ConsensusProtoMsg;
        };
    };
}
