"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addAsset = exports.clear = exports.getAssetsMap = exports.getAssetFromId = exports.updateAssets = exports.start = void 0;
const base_1 = require("@dydxprotocol-indexer/base");
const config_1 = __importDefault(require("../config"));
const AssetTable = __importStar(require("../stores/asset-table"));
let idToAsset = {};
/**
 * Refresh loop to cache the list of all assets from the database in-memory.
 */
async function start() {
    for (;;) {
        await updateAssets();
        await (0, base_1.delay)(config_1.default.ASSET_REFRESHER_INTERVAL_MS);
    }
}
exports.start = start;
/**
 * Updates in-memory map of assets.
 */
async function updateAssets(options) {
    const startTime = Date.now();
    const assets = await AssetTable.findAll({}, [], options || { readReplica: true });
    const tmpIdToAsset = {};
    assets.forEach((asset) => {
        tmpIdToAsset[asset.id] = asset;
    });
    idToAsset = tmpIdToAsset;
    base_1.stats.timing(`${config_1.default.SERVICE_NAME}.loops.update_assets`, Date.now() - startTime);
}
exports.updateAssets = updateAssets;
/**
 * Gets the perpetual market for a given id.
 */
function getAssetFromId(id) {
    const asset = idToAsset[id];
    if (asset === undefined) {
        const message = `Unable to find asset with assetId: ${id}`;
        base_1.logger.error({
            at: 'asset-refresher#getAssetFromId',
            message,
        });
        throw new Error(message);
    }
    return asset;
}
exports.getAssetFromId = getAssetFromId;
function getAssetsMap() {
    return idToAsset;
}
exports.getAssetsMap = getAssetsMap;
function clear() {
    if (config_1.default.NODE_ENV !== base_1.NodeEnv.TEST) {
        throw new Error('clear cannot be used in non-test env');
    }
    idToAsset = {};
}
exports.clear = clear;
function addAsset(asset) {
    if (asset.id in idToAsset) {
        throw new Error(`Asset with id ${asset.id} already exists`);
    }
    idToAsset[asset.id] = asset;
}
exports.addAsset = addAsset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtcmVmcmVzaGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xvb3BzL2Fzc2V0LXJlZnJlc2hlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHFEQUVvQztBQUVwQyx1REFBK0I7QUFDL0Isa0VBQW9EO0FBR3BELElBQUksU0FBUyxHQUFjLEVBQUUsQ0FBQztBQUU5Qjs7R0FFRztBQUNJLEtBQUssVUFBVSxLQUFLO0lBQ3pCLFNBQVM7UUFDUCxNQUFNLFlBQVksRUFBRSxDQUFDO1FBQ3JCLE1BQU0sSUFBQSxZQUFLLEVBQUMsZ0JBQU0sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0tBQ2pEO0FBQ0gsQ0FBQztBQUxELHNCQUtDO0FBRUQ7O0dBRUc7QUFDSSxLQUFLLFVBQVUsWUFBWSxDQUFDLE9BQWlCO0lBQ2xELE1BQU0sU0FBUyxHQUFXLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNyQyxNQUFNLE1BQU0sR0FBd0IsTUFBTSxVQUFVLENBQUMsT0FBTyxDQUMxRCxFQUFFLEVBQ0YsRUFBRSxFQUNGLE9BQU8sSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FDakMsQ0FBQztJQUVGLE1BQU0sWUFBWSxHQUFzQyxFQUFFLENBQUM7SUFDM0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixDQUFDLEtBQXdCLEVBQUUsRUFBRTtRQUMzQixZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDLENBQ0YsQ0FBQztJQUVGLFNBQVMsR0FBRyxZQUFZLENBQUM7SUFDekIsWUFBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLGdCQUFNLENBQUMsWUFBWSxzQkFBc0IsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUM7QUFDckYsQ0FBQztBQWpCRCxvQ0FpQkM7QUFFRDs7R0FFRztBQUNILFNBQWdCLGNBQWMsQ0FBQyxFQUFVO0lBQ3ZDLE1BQU0sS0FBSyxHQUFrQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDM0QsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1FBQ3ZCLE1BQU0sT0FBTyxHQUFXLHNDQUFzQyxFQUFFLEVBQUUsQ0FBQztRQUNuRSxhQUFNLENBQUMsS0FBSyxDQUFDO1lBQ1gsRUFBRSxFQUFFLGdDQUFnQztZQUNwQyxPQUFPO1NBQ1IsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUMxQjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVhELHdDQVdDO0FBRUQsU0FBZ0IsWUFBWTtJQUMxQixPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDO0FBRkQsb0NBRUM7QUFFRCxTQUFnQixLQUFLO0lBQ25CLElBQUksZ0JBQU0sQ0FBQyxRQUFRLEtBQUssY0FBTyxDQUFDLElBQUksRUFBRTtRQUNwQyxNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7S0FDekQ7SUFFRCxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLENBQUM7QUFORCxzQkFNQztBQUVELFNBQWdCLFFBQVEsQ0FBQyxLQUF3QjtJQUMvQyxJQUFJLEtBQUssQ0FBQyxFQUFFLElBQUksU0FBUyxFQUFFO1FBQ3pCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLEtBQUssQ0FBQyxFQUFFLGlCQUFpQixDQUFDLENBQUM7S0FDN0Q7SUFFRCxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztBQUM5QixDQUFDO0FBTkQsNEJBTUMifQ==