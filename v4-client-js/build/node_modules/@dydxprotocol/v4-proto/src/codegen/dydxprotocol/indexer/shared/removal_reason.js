"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderRemovalReasonSDKType = exports.OrderRemovalReason = void 0;
exports.orderRemovalReasonFromJSON = orderRemovalReasonFromJSON;
exports.orderRemovalReasonToJSON = orderRemovalReasonToJSON;
/** OrderRemovalReason is an enum of all the reasons an order was removed. */
var OrderRemovalReason;
(function (OrderRemovalReason) {
    /** ORDER_REMOVAL_REASON_UNSPECIFIED - Default value, this is invalid and unused. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_UNSPECIFIED"] = 0] = "ORDER_REMOVAL_REASON_UNSPECIFIED";
    /** ORDER_REMOVAL_REASON_EXPIRED - The order was removed due to being expired. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_EXPIRED"] = 1] = "ORDER_REMOVAL_REASON_EXPIRED";
    /** ORDER_REMOVAL_REASON_USER_CANCELED - The order was removed due to being canceled by a user. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_USER_CANCELED"] = 2] = "ORDER_REMOVAL_REASON_USER_CANCELED";
    /** ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED - The order was removed due to being undercollateralized. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED"] = 3] = "ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED";
    /**
     * ORDER_REMOVAL_REASON_INTERNAL_ERROR - The order caused an internal error during order placement and was
     * removed.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_INTERNAL_ERROR"] = 4] = "ORDER_REMOVAL_REASON_INTERNAL_ERROR";
    /**
     * ORDER_REMOVAL_REASON_SELF_TRADE_ERROR - The order would have matched against another order placed by the same
     * subaccount and was removed.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_SELF_TRADE_ERROR"] = 5] = "ORDER_REMOVAL_REASON_SELF_TRADE_ERROR";
    /**
     * ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER - The order would have matched against maker orders on the orderbook
     * despite being a post-only order and was removed.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER"] = 6] = "ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER";
    /**
     * ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK - The order was an ICO order and would have been placed on the orderbook as
     * resting liquidity and was removed.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK"] = 7] = "ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK";
    /**
     * ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED - The order was a fill-or-kill order that could not be fully filled and was
     * removed.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED"] = 8] = "ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED";
    /**
     * ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE - The order was a reduce-only order that was removed due to either:
     * - being a taker order and fully-filling the order would flip the side of
     *    the subaccount's position, in this case the remaining size of the
     *    order is removed
     * - being a maker order resting on the book and being removed when either
     *    the subaccount's position is closed or flipped sides
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE"] = 9] = "ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE";
    /**
     * ORDER_REMOVAL_REASON_INDEXER_EXPIRED - The order should be expired, according to the Indexer's cached data, but
     * the Indexer has yet to receive a message to remove the order. In order to
     * keep the data cached by the Indexer up-to-date and accurate, clear out
     * the data if it's expired by sending an order removal with this reason.
     * Protocol should never send this reason to Indexer.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_INDEXER_EXPIRED"] = 10] = "ORDER_REMOVAL_REASON_INDEXER_EXPIRED";
    /** ORDER_REMOVAL_REASON_REPLACED - The order has been replaced. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_REPLACED"] = 11] = "ORDER_REMOVAL_REASON_REPLACED";
    /**
     * ORDER_REMOVAL_REASON_FULLY_FILLED - The order has been fully-filled. Only sent by the Indexer for stateful
     * orders.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_FULLY_FILLED"] = 12] = "ORDER_REMOVAL_REASON_FULLY_FILLED";
    /**
     * ORDER_REMOVAL_REASON_EQUITY_TIER - The order has been removed since the subaccount does not satisfy the
     * equity tier requirements.
     */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_EQUITY_TIER"] = 13] = "ORDER_REMOVAL_REASON_EQUITY_TIER";
    /** ORDER_REMOVAL_REASON_FINAL_SETTLEMENT - The order has been removed since its ClobPair has entered final settlement. */
    OrderRemovalReason[OrderRemovalReason["ORDER_REMOVAL_REASON_FINAL_SETTLEMENT"] = 14] = "ORDER_REMOVAL_REASON_FINAL_SETTLEMENT";
    OrderRemovalReason[OrderRemovalReason["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(OrderRemovalReason || (exports.OrderRemovalReason = OrderRemovalReason = {}));
exports.OrderRemovalReasonSDKType = OrderRemovalReason;
function orderRemovalReasonFromJSON(object) {
    switch (object) {
        case 0:
        case "ORDER_REMOVAL_REASON_UNSPECIFIED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_UNSPECIFIED;
        case 1:
        case "ORDER_REMOVAL_REASON_EXPIRED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_EXPIRED;
        case 2:
        case "ORDER_REMOVAL_REASON_USER_CANCELED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_USER_CANCELED;
        case 3:
        case "ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED;
        case 4:
        case "ORDER_REMOVAL_REASON_INTERNAL_ERROR":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_INTERNAL_ERROR;
        case 5:
        case "ORDER_REMOVAL_REASON_SELF_TRADE_ERROR":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_SELF_TRADE_ERROR;
        case 6:
        case "ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER;
        case 7:
        case "ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK;
        case 8:
        case "ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED;
        case 9:
        case "ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE;
        case 10:
        case "ORDER_REMOVAL_REASON_INDEXER_EXPIRED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_INDEXER_EXPIRED;
        case 11:
        case "ORDER_REMOVAL_REASON_REPLACED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_REPLACED;
        case 12:
        case "ORDER_REMOVAL_REASON_FULLY_FILLED":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_FULLY_FILLED;
        case 13:
        case "ORDER_REMOVAL_REASON_EQUITY_TIER":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_EQUITY_TIER;
        case 14:
        case "ORDER_REMOVAL_REASON_FINAL_SETTLEMENT":
            return OrderRemovalReason.ORDER_REMOVAL_REASON_FINAL_SETTLEMENT;
        case -1:
        case "UNRECOGNIZED":
        default:
            return OrderRemovalReason.UNRECOGNIZED;
    }
}
function orderRemovalReasonToJSON(object) {
    switch (object) {
        case OrderRemovalReason.ORDER_REMOVAL_REASON_UNSPECIFIED:
            return "ORDER_REMOVAL_REASON_UNSPECIFIED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_EXPIRED:
            return "ORDER_REMOVAL_REASON_EXPIRED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_USER_CANCELED:
            return "ORDER_REMOVAL_REASON_USER_CANCELED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED:
            return "ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_INTERNAL_ERROR:
            return "ORDER_REMOVAL_REASON_INTERNAL_ERROR";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_SELF_TRADE_ERROR:
            return "ORDER_REMOVAL_REASON_SELF_TRADE_ERROR";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER:
            return "ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK:
            return "ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED:
            return "ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE:
            return "ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_INDEXER_EXPIRED:
            return "ORDER_REMOVAL_REASON_INDEXER_EXPIRED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_REPLACED:
            return "ORDER_REMOVAL_REASON_REPLACED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_FULLY_FILLED:
            return "ORDER_REMOVAL_REASON_FULLY_FILLED";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_EQUITY_TIER:
            return "ORDER_REMOVAL_REASON_EQUITY_TIER";
        case OrderRemovalReason.ORDER_REMOVAL_REASON_FINAL_SETTLEMENT:
            return "ORDER_REMOVAL_REASON_FINAL_SETTLEMENT";
        case OrderRemovalReason.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZhbF9yZWFzb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQGR5ZHhwcm90b2NvbC92NC1wcm90by9zcmMvY29kZWdlbi9keWR4cHJvdG9jb2wvaW5kZXhlci9zaGFyZWQvcmVtb3ZhbF9yZWFzb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBbUZBLGdFQW1FQztBQUNELDREQW1EQztBQTFNRCw2RUFBNkU7QUFDN0UsSUFBWSxrQkFnRlg7QUFoRkQsV0FBWSxrQkFBa0I7SUFDNUIsb0ZBQW9GO0lBQ3BGLG1IQUFvQyxDQUFBO0lBRXBDLGlGQUFpRjtJQUNqRiwyR0FBZ0MsQ0FBQTtJQUVoQyxrR0FBa0c7SUFDbEcsdUhBQXNDLENBQUE7SUFFdEMseUdBQXlHO0lBQ3pHLG1JQUE0QyxDQUFBO0lBRTVDOzs7T0FHRztJQUNILHlIQUF1QyxDQUFBO0lBRXZDOzs7T0FHRztJQUNILDZIQUF5QyxDQUFBO0lBRXpDOzs7T0FHRztJQUNILCtKQUEwRCxDQUFBO0lBRTFEOzs7T0FHRztJQUNILHlLQUErRCxDQUFBO0lBRS9EOzs7T0FHRztJQUNILG1LQUE0RCxDQUFBO0lBRTVEOzs7Ozs7O09BT0c7SUFDSCxpSUFBMkMsQ0FBQTtJQUUzQzs7Ozs7O09BTUc7SUFDSCw0SEFBeUMsQ0FBQTtJQUV6QyxtRUFBbUU7SUFDbkUsOEdBQWtDLENBQUE7SUFFbEM7OztPQUdHO0lBQ0gsc0hBQXNDLENBQUE7SUFFdEM7OztPQUdHO0lBQ0gsb0hBQXFDLENBQUE7SUFFckMsMEhBQTBIO0lBQzFILDhIQUEwQyxDQUFBO0lBQzFDLDRFQUFpQixDQUFBO0FBQ25CLENBQUMsRUFoRlcsa0JBQWtCLGtDQUFsQixrQkFBa0IsUUFnRjdCO0FBQ1ksUUFBQSx5QkFBeUIsR0FBRyxrQkFBa0IsQ0FBQztBQUM1RCxTQUFnQiwwQkFBMEIsQ0FBQyxNQUFXO0lBQ3BELFFBQVEsTUFBTSxFQUFF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