package constants

import (
	sdk "github.com/cosmos/cosmos-sdk/types"
)

var (
	ValidEmptyExtInfoBytes []byte = []byte{}

	Val1 = sdk.ConsAddress("val1")
	Val2 = sdk.ConsAddress("val2")
	Val3 = sdk.ConsAddress("val3")

	ValidSingleVoteExtInfoBytes []byte = []byte{
		18, 147, 1, 10, 25, 10, 20, 41, 86, 4, 85, 205,
		252, 249, 80, 75, 230, 197, 194, 223, 67, 40,
		173, 42, 88, 250, 242, 24, 244, 3, 26, 50,
		10, 14, 8, 1, 18, 10, 10, 3, 2, 234, 102, 18,
		3, 2, 234, 102, 10, 16, 8, 0, 18, 12, 10, 4,
		2, 7, 161, 37, 18, 4, 2, 7, 161, 37, 10, 14,
		8, 2, 18, 10, 10, 3, 2, 27, 95, 18, 3, 2, 27,
		95, 34, 64, 106, 234, 170, 223, 62, 29, 79, 10,
		140, 58, 179, 121, 19, 149, 214, 74, 233, 233,
		210, 126, 189, 40, 189, 45, 122, 125, 180, 118,
		224, 167, 49, 132, 9, 72, 145, 58, 191, 97, 204,
		108, 221, 172, 230, 85, 24, 214, 165, 144,
		60, 105, 254, 32, 15, 80, 97, 97, 221, 9, 53,
		91, 223, 253, 93, 82, 40, 2,
	}

	// return value of the following function call
	// (empty prices vote extension from 4 validators with 500000 power and block height 3)
	// validators, err := tApp.App.StakingKeeper.GetBondedValidatorsByPower(tApp.App.NewContextLegacy(true, tApp.header))
	// if err != nil {
	// 	tApp.builder.t.Fatalf("Failed to get bonded validators: %v", err)
	// }
	// localLastCommit := vetestutil.GetEmptyLocalLastCommit(
	// 	validators,
	// 	tApp.App.LastBlockHeight(),
	// 	0,
	// 	"localklyraprotocol",
	// )
	ValidMultiEmptyVoteExtInfoBytes []byte = []byte{0x12, 0x60, 0xa, 0x1a, 0xa, 0x14, 0x12, 0x4b, 0x88, 0x6, 0x84, 0x40, 0xb,
		0x4c, 0x0, 0x86, 0xbd, 0x4e, 0xe8, 0x82, 0xdc, 0xc5, 0xb6, 0x1c, 0xf7, 0xe3, 0x18, 0xa0, 0xc2, 0x1e, 0x22, 0x40, 0x61,
		0x81, 0x9b, 0xe7, 0x6, 0x93, 0xd5, 0x3, 0xa3, 0x47, 0xee, 0x68, 0xa2, 0xd3, 0xc4, 0xdd, 0xb6, 0x7e, 0xc4, 0x4d, 0x6,
		0x5b, 0x30, 0xe7, 0xd8, 0x19, 0xab, 0xc, 0x77, 0xc7, 0x85, 0x35, 0xfa, 0xe6, 0xf5, 0x7d, 0x80, 0xb1, 0xf2, 0x3c, 0x64,
		0x47, 0x4b, 0xe6, 0x5f, 0x9, 0x5f, 0xc5, 0x52, 0x0, 0xa8, 0xa0, 0x64, 0x5b, 0x2e, 0x47, 0x55, 0x4b, 0xf5, 0x11, 0x6,
		0xbf, 0x74, 0xa, 0x28, 0x2, 0x12, 0x60, 0xa, 0x1a, 0xa, 0x14, 0x61, 0x1f, 0x31, 0xdf, 0xdf, 0xa8, 0xd7, 0x91, 0xe, 0x1d,
		0xb7, 0x7a, 0xd1, 0x57, 0x73, 0x43, 0xbe, 0x16, 0xee, 0xe4, 0x18, 0xa0, 0xc2, 0x1e, 0x22, 0x40, 0x51, 0x9b, 0xc6, 0xe1,
		0xf6, 0x7d, 0x60, 0x19, 0x7d, 0xbe, 0x38, 0x52, 0xe9, 0x4a, 0x9f, 0xde, 0x98, 0x24, 0x1f, 0xc9, 0xd7, 0x8e, 0xa6, 0xd7,
		0xd6, 0xbf, 0xa, 0xae, 0x2, 0x8, 0x96, 0xab, 0x15, 0x95, 0xa6, 0x65, 0xeb, 0x1, 0xc7, 0x79, 0xa0, 0x88, 0x42, 0x5a, 0x42,
		0x3e, 0xe0, 0x53, 0xa4, 0xd3, 0xa0, 0x5a, 0xe5, 0xff, 0x5c, 0xdd, 0x33, 0xda, 0x3c, 0x23, 0xa8, 0xa2, 0xbf, 0x6, 0x28, 0x2,
		0x12, 0x60, 0xa, 0x1a, 0xa, 0x14, 0x82, 0xe5, 0x0, 0xd9, 0x76, 0x85, 0xd1, 0x88, 0x30, 0xf0, 0x9e, 0x41, 0x65, 0x32, 0xa,
		0x74, 0x1f, 0x37, 0x29, 0xc3, 0x18, 0xa0, 0xc2, 0x1e, 0x22, 0x40, 0xea, 0xc5, 0x5d, 0x80, 0xfc, 0x27, 0xf6, 0x44, 0x4c,
		0x28, 0xaa, 0x94, 0xef, 0x84, 0x18, 0x52, 0xfe, 0x73, 0x2a, 0x55, 0x64, 0x63, 0xe, 0x3e, 0xc1, 0xf1, 0xcc, 0x19, 0x8b, 0x61,
		0x35, 0xab, 0x29, 0x51, 0xd3, 0x6e, 0x8a, 0x7b, 0x9e, 0xa2, 0x38, 0xfe, 0xf7, 0xa1, 0x4d, 0x2a, 0xa9, 0x6e, 0x68, 0x24, 0x76,
		0x21, 0x95, 0xec, 0x1f, 0x4e, 0x9d, 0x98, 0xaa, 0x8, 0x3e, 0x4, 0xd2, 0x3, 0x28, 0x2, 0x12, 0x60, 0xa, 0x1a, 0xa, 0x14, 0x87,
		0x9c, 0x4b, 0x43, 0xeb, 0x3c, 0x6d, 0xd2, 0x1b, 0x9d, 0xb2, 0xf2, 0x12, 0xa5, 0xc7, 0x1, 0xb3, 0x49, 0xfa, 0x3c, 0x18, 0xa0,
		0xc2, 0x1e, 0x22, 0x40, 0x44, 0xcd, 0x21, 0x92, 0xff, 0x42, 0xf9, 0x2d, 0x50, 0x7d, 0xda, 0xc9, 0x4b, 0x5b, 0xd, 0x5a, 0xd6,
		0xdb, 0xc3, 0x68, 0xd1, 0xc1, 0x5e, 0xc, 0x1c, 0x22, 0x77, 0xc0, 0x6c, 0xb9, 0xf9, 0xa8, 0xbf, 0xe4, 0x1d, 0x8f, 0xb6, 0xf7,
		0xcc, 0x7e, 0xcd, 0xc8, 0x30, 0x4a, 0x6c, 0x89, 0x4d, 0x89, 0xd7, 0x15, 0x2, 0xf7, 0x9b, 0x18, 0x7, 0xea, 0xb1, 0x9d, 0x2c,
		0xfc, 0x22, 0x6f, 0xc4, 0x5, 0x28, 0x2,
	}
)
