/// <reference types="long" />
import { EventParams, EventParamsSDKType, ProposeParams, ProposeParamsSDKType, SafetyParams, SafetyParamsSDKType } from "./params";
import { BridgeEventInfo, BridgeEventInfoSDKType } from "./bridge_event_info";
import { MsgCompleteBridge, MsgCompleteBridgeSDKType } from "./tx";
import * as _m0 from "protobufjs/minimal";
/** QueryEventParamsRequest is a request type for the EventParams RPC method. */
export interface QueryEventParamsRequest {
}
/** QueryEventParamsRequest is a request type for the EventParams RPC method. */
export interface QueryEventParamsRequestSDKType {
}
/** QueryEventParamsResponse is a response type for the EventParams RPC method. */
export interface QueryEventParamsResponse {
    params?: EventParams;
}
/** QueryEventParamsResponse is a response type for the EventParams RPC method. */
export interface QueryEventParamsResponseSDKType {
    params?: EventParamsSDKType;
}
/** QueryProposeParamsRequest is a request type for the ProposeParams RPC method. */
export interface QueryProposeParamsRequest {
}
/** QueryProposeParamsRequest is a request type for the ProposeParams RPC method. */
export interface QueryProposeParamsRequestSDKType {
}
/**
 * QueryProposeParamsResponse is a response type for the ProposeParams RPC
 * method.
 */
export interface QueryProposeParamsResponse {
    params?: ProposeParams;
}
/**
 * QueryProposeParamsResponse is a response type for the ProposeParams RPC
 * method.
 */
export interface QueryProposeParamsResponseSDKType {
    params?: ProposeParamsSDKType;
}
/** QuerySafetyParamsRequest is a request type for the SafetyParams RPC method. */
export interface QuerySafetyParamsRequest {
}
/** QuerySafetyParamsRequest is a request type for the SafetyParams RPC method. */
export interface QuerySafetyParamsRequestSDKType {
}
/** QuerySafetyParamsResponse is a response type for the SafetyParams RPC method. */
export interface QuerySafetyParamsResponse {
    params?: SafetyParams;
}
/** QuerySafetyParamsResponse is a response type for the SafetyParams RPC method. */
export interface QuerySafetyParamsResponseSDKType {
    params?: SafetyParamsSDKType;
}
/**
 * QueryAcknowledgedEventInfoRequest is a request type for the
 * AcknowledgedEventInfo RPC method.
 */
export interface QueryAcknowledgedEventInfoRequest {
}
/**
 * QueryAcknowledgedEventInfoRequest is a request type for the
 * AcknowledgedEventInfo RPC method.
 */
export interface QueryAcknowledgedEventInfoRequestSDKType {
}
/**
 * QueryAcknowledgedEventInfoResponse is a response type for the
 * AcknowledgedEventInfo RPC method.
 */
export interface QueryAcknowledgedEventInfoResponse {
    info?: BridgeEventInfo;
}
/**
 * QueryAcknowledgedEventInfoResponse is a response type for the
 * AcknowledgedEventInfo RPC method.
 */
export interface QueryAcknowledgedEventInfoResponseSDKType {
    info?: BridgeEventInfoSDKType;
}
/**
 * QueryRecognizedEventInfoRequest is a request type for the
 * RecognizedEventInfo RPC method.
 */
export interface QueryRecognizedEventInfoRequest {
}
/**
 * QueryRecognizedEventInfoRequest is a request type for the
 * RecognizedEventInfo RPC method.
 */
export interface QueryRecognizedEventInfoRequestSDKType {
}
/**
 * QueryRecognizedEventInfoResponse is a response type for the
 * RecognizedEventInfo RPC method.
 */
export interface QueryRecognizedEventInfoResponse {
    info?: BridgeEventInfo;
}
/**
 * QueryRecognizedEventInfoResponse is a response type for the
 * RecognizedEventInfo RPC method.
 */
export interface QueryRecognizedEventInfoResponseSDKType {
    info?: BridgeEventInfoSDKType;
}
/**
 * QueryDelayedCompleteBridgeMessagesRequest is a request type for the
 * DelayedCompleteBridgeMessages RPC method.
 */
export interface QueryDelayedCompleteBridgeMessagesRequest {
    /**
     * QueryDelayedCompleteBridgeMessagesRequest is a request type for the
     * DelayedCompleteBridgeMessages RPC method.
     */
    address: string;
}
/**
 * QueryDelayedCompleteBridgeMessagesRequest is a request type for the
 * DelayedCompleteBridgeMessages RPC method.
 */
export interface QueryDelayedCompleteBridgeMessagesRequestSDKType {
    address: string;
}
/**
 * QueryDelayedCompleteBridgeMessagesResponse is a response type for the
 * DelayedCompleteBridgeMessages RPC method.
 */
export interface QueryDelayedCompleteBridgeMessagesResponse {
    messages: DelayedCompleteBridgeMessage[];
}
/**
 * QueryDelayedCompleteBridgeMessagesResponse is a response type for the
 * DelayedCompleteBridgeMessages RPC method.
 */
export interface QueryDelayedCompleteBridgeMessagesResponseSDKType {
    messages: DelayedCompleteBridgeMessageSDKType[];
}
/**
 * DelayedCompleteBridgeMessage is a message type for the response of
 * DelayedCompleteBridgeMessages RPC method. It contains the message
 * and the block height at which it will execute.
 */
export interface DelayedCompleteBridgeMessage {
    message?: MsgCompleteBridge;
    blockHeight: number;
}
/**
 * DelayedCompleteBridgeMessage is a message type for the response of
 * DelayedCompleteBridgeMessages RPC method. It contains the message
 * and the block height at which it will execute.
 */
export interface DelayedCompleteBridgeMessageSDKType {
    message?: MsgCompleteBridgeSDKType;
    block_height: number;
}
export declare const QueryEventParamsRequest: {
    encode(_: QueryEventParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryEventParamsRequest;
    fromPartial(_: {}): QueryEventParamsRequest;
};
export declare const QueryEventParamsResponse: {
    encode(message: QueryEventParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryEventParamsResponse;
    fromPartial(object: {
        params?: {
            denom?: string | undefined;
            ethChainId?: string | number | import("long").Long | undefined;
            ethAddress?: string | undefined;
        } | undefined;
    }): QueryEventParamsResponse;
};
export declare const QueryProposeParamsRequest: {
    encode(_: QueryProposeParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryProposeParamsRequest;
    fromPartial(_: {}): QueryProposeParamsRequest;
};
export declare const QueryProposeParamsResponse: {
    encode(message: QueryProposeParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryProposeParamsResponse;
    fromPartial(object: {
        params?: {
            maxBridgesPerBlock?: number | undefined;
            proposeDelayDuration?: {
                seconds?: string | number | import("long").Long | undefined;
                nanos?: number | undefined;
            } | undefined;
            skipRatePpm?: number | undefined;
            skipIfBlockDelayedByDuration?: {
                seconds?: string | number | import("long").Long | undefined;
                nanos?: number | undefined;
            } | undefined;
        } | undefined;
    }): QueryProposeParamsResponse;
};
export declare const QuerySafetyParamsRequest: {
    encode(_: QuerySafetyParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QuerySafetyParamsRequest;
    fromPartial(_: {}): QuerySafetyParamsRequest;
};
export declare const QuerySafetyParamsResponse: {
    encode(message: QuerySafetyParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QuerySafetyParamsResponse;
    fromPartial(object: {
        params?: {
            isDisabled?: boolean | undefined;
            delayBlocks?: number | undefined;
        } | undefined;
    }): QuerySafetyParamsResponse;
};
export declare const QueryAcknowledgedEventInfoRequest: {
    encode(_: QueryAcknowledgedEventInfoRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryAcknowledgedEventInfoRequest;
    fromPartial(_: {}): QueryAcknowledgedEventInfoRequest;
};
export declare const QueryAcknowledgedEventInfoResponse: {
    encode(message: QueryAcknowledgedEventInfoResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryAcknowledgedEventInfoResponse;
    fromPartial(object: {
        info?: {
            nextId?: number | undefined;
            ethBlockHeight?: string | number | import("long").Long | undefined;
        } | undefined;
    }): QueryAcknowledgedEventInfoResponse;
};
export declare const QueryRecognizedEventInfoRequest: {
    encode(_: QueryRecognizedEventInfoRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryRecognizedEventInfoRequest;
    fromPartial(_: {}): QueryRecognizedEventInfoRequest;
};
export declare const QueryRecognizedEventInfoResponse: {
    encode(message: QueryRecognizedEventInfoResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryRecognizedEventInfoResponse;
    fromPartial(object: {
        info?: {
            nextId?: number | undefined;
            ethBlockHeight?: string | number | import("long").Long | undefined;
        } | undefined;
    }): QueryRecognizedEventInfoResponse;
};
export declare const QueryDelayedCompleteBridgeMessagesRequest: {
    encode(message: QueryDelayedCompleteBridgeMessagesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryDelayedCompleteBridgeMessagesRequest;
    fromPartial(object: {
        address?: string | undefined;
    }): QueryDelayedCompleteBridgeMessagesRequest;
};
export declare const QueryDelayedCompleteBridgeMessagesResponse: {
    encode(message: QueryDelayedCompleteBridgeMessagesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): QueryDelayedCompleteBridgeMessagesResponse;
    fromPartial(object: {
        messages?: {
            message?: {
                authority?: string | undefined;
                event?: {
                    id?: number | undefined;
                    coin?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                    address?: string | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                } | undefined;
            } | undefined;
            blockHeight?: number | undefined;
        }[] | undefined;
    }): QueryDelayedCompleteBridgeMessagesResponse;
};
export declare const DelayedCompleteBridgeMessage: {
    encode(message: DelayedCompleteBridgeMessage, writer?: _m0.Writer): _m0.Writer;
    decode(input: Uint8Array | _m0.Reader, length?: number | undefined): DelayedCompleteBridgeMessage;
    fromPartial(object: {
        message?: {
            authority?: string | undefined;
            event?: {
                id?: number | undefined;
                coin?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
                address?: string | undefined;
                ethBlockHeight?: string | number | import("long").Long | undefined;
            } | undefined;
        } | undefined;
        blockHeight?: number | undefined;
    }): DelayedCompleteBridgeMessage;
};
