/// <reference types="long" />
import * as _128 from "./assets/asset";
import * as _129 from "./assets/genesis";
import * as _130 from "./assets/query";
import * as _132 from "./blocktime/blocktime";
import * as _133 from "./blocktime/genesis";
import * as _134 from "./blocktime/params";
import * as _135 from "./blocktime/query";
import * as _136 from "./blocktime/tx";
import * as _137 from "./bridge/bridge_event_info";
import * as _138 from "./bridge/bridge_event";
import * as _139 from "./bridge/genesis";
import * as _140 from "./bridge/params";
import * as _141 from "./bridge/query";
import * as _142 from "./bridge/tx";
import * as _143 from "./clob/block_rate_limit_config";
import * as _144 from "./clob/clob_pair";
import * as _145 from "./clob/equity_tier_limit_config";
import * as _146 from "./clob/genesis";
import * as _147 from "./clob/liquidations_config";
import * as _148 from "./clob/liquidations";
import * as _149 from "./clob/matches";
import * as _150 from "./clob/mev";
import * as _151 from "./clob/operation";
import * as _152 from "./clob/order_removals";
import * as _153 from "./clob/order";
import * as _154 from "./clob/process_proposer_matches_events";
import * as _155 from "./clob/query";
import * as _156 from "./clob/tx";
import * as _157 from "./daemons/bridge/bridge";
import * as _158 from "./daemons/liquidation/liquidation";
import * as _159 from "./daemons/pricefeed/price_feed";
import * as _160 from "./delaymsg/block_message_ids";
import * as _161 from "./delaymsg/delayed_message";
import * as _162 from "./delaymsg/genesis";
import * as _163 from "./delaymsg/query";
import * as _164 from "./delaymsg/tx";
import * as _165 from "./epochs/epoch_info";
import * as _166 from "./epochs/genesis";
import * as _167 from "./epochs/query";
import * as _168 from "./feetiers/genesis";
import * as _169 from "./feetiers/params";
import * as _170 from "./feetiers/query";
import * as _171 from "./feetiers/tx";
import * as _172 from "./indexer/events/events";
import * as _173 from "./indexer/indexer_manager/event";
import * as _174 from "./indexer/off_chain_updates/off_chain_updates";
import * as _175 from "./indexer/protocol/v1/clob";
import * as _176 from "./indexer/protocol/v1/subaccount";
import * as _177 from "./indexer/redis/redis_order";
import * as _178 from "./indexer/shared/removal_reason";
import * as _179 from "./indexer/socks/messages";
import * as _180 from "./perpetuals/genesis";
import * as _181 from "./perpetuals/params";
import * as _182 from "./perpetuals/perpetual";
import * as _183 from "./perpetuals/query";
import * as _184 from "./perpetuals/tx";
import * as _185 from "./prices/genesis";
import * as _186 from "./prices/market_param";
import * as _187 from "./prices/market_price";
import * as _188 from "./prices/query";
import * as _189 from "./prices/tx";
import * as _190 from "./ratelimit/capacity";
import * as _191 from "./ratelimit/genesis";
import * as _192 from "./ratelimit/limit_params";
import * as _193 from "./ratelimit/query";
import * as _194 from "./ratelimit/tx";
import * as _195 from "./rewards/genesis";
import * as _196 from "./rewards/params";
import * as _197 from "./rewards/query";
import * as _198 from "./rewards/reward_share";
import * as _199 from "./rewards/tx";
import * as _200 from "./sending/genesis";
import * as _202 from "./sending/transfer";
import * as _203 from "./sending/tx";
import * as _204 from "./stats/genesis";
import * as _205 from "./stats/params";
import * as _206 from "./stats/query";
import * as _207 from "./stats/stats";
import * as _208 from "./stats/tx";
import * as _209 from "./subaccounts/asset_position";
import * as _210 from "./subaccounts/genesis";
import * as _211 from "./subaccounts/perpetual_position";
import * as _212 from "./subaccounts/query";
import * as _213 from "./subaccounts/subaccount";
import * as _214 from "./vest/genesis";
import * as _215 from "./vest/query";
import * as _216 from "./vest/tx";
import * as _217 from "./vest/vest_entry";
import * as _296 from "./assets/query.lcd";
import * as _297 from "./blocktime/query.lcd";
import * as _298 from "./bridge/query.lcd";
import * as _299 from "./clob/query.lcd";
import * as _300 from "./delaymsg/query.lcd";
import * as _301 from "./epochs/query.lcd";
import * as _302 from "./feetiers/query.lcd";
import * as _303 from "./perpetuals/query.lcd";
import * as _304 from "./prices/query.lcd";
import * as _305 from "./ratelimit/query.lcd";
import * as _306 from "./rewards/query.lcd";
import * as _307 from "./stats/query.lcd";
import * as _308 from "./subaccounts/query.lcd";
import * as _309 from "./vest/query.lcd";
import * as _310 from "./assets/query.rpc.Query";
import * as _311 from "./blocktime/query.rpc.Query";
import * as _312 from "./bridge/query.rpc.Query";
import * as _313 from "./clob/query.rpc.Query";
import * as _314 from "./delaymsg/query.rpc.Query";
import * as _315 from "./epochs/query.rpc.Query";
import * as _316 from "./feetiers/query.rpc.Query";
import * as _317 from "./perpetuals/query.rpc.Query";
import * as _318 from "./prices/query.rpc.Query";
import * as _319 from "./ratelimit/query.rpc.Query";
import * as _320 from "./rewards/query.rpc.Query";
import * as _321 from "./sending/query.rpc.Query";
import * as _322 from "./stats/query.rpc.Query";
import * as _323 from "./subaccounts/query.rpc.Query";
import * as _324 from "./vest/query.rpc.Query";
import * as _325 from "./blocktime/tx.rpc.msg";
import * as _326 from "./bridge/tx.rpc.msg";
import * as _327 from "./clob/tx.rpc.msg";
import * as _328 from "./delaymsg/tx.rpc.msg";
import * as _329 from "./feetiers/tx.rpc.msg";
import * as _330 from "./perpetuals/tx.rpc.msg";
import * as _331 from "./prices/tx.rpc.msg";
import * as _332 from "./ratelimit/tx.rpc.msg";
import * as _333 from "./rewards/tx.rpc.msg";
import * as _334 from "./sending/tx.rpc.msg";
import * as _335 from "./stats/tx.rpc.msg";
import * as _336 from "./vest/tx.rpc.msg";
export declare namespace dydxprotocol {
    const assets: {
        QueryClientImpl: typeof _310.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            asset(request: _130.QueryAssetRequest): Promise<_130.QueryAssetResponse>;
            allAssets(request?: _130.QueryAllAssetsRequest | undefined): Promise<_130.QueryAllAssetsResponse>;
        };
        LCDQueryClient: typeof _296.LCDQueryClient;
        QueryAssetRequest: {
            encode(message: _130.QueryAssetRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _130.QueryAssetRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _130.QueryAssetRequest;
        };
        QueryAssetResponse: {
            encode(message: _130.QueryAssetResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _130.QueryAssetResponse;
            fromPartial(object: {
                asset?: {
                    id?: number | undefined;
                    symbol?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    hasMarket?: boolean | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                } | undefined;
            }): _130.QueryAssetResponse;
        };
        QueryAllAssetsRequest: {
            encode(message: _130.QueryAllAssetsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _130.QueryAllAssetsRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _130.QueryAllAssetsRequest;
        };
        QueryAllAssetsResponse: {
            encode(message: _130.QueryAllAssetsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _130.QueryAllAssetsResponse;
            fromPartial(object: {
                asset?: {
                    id?: number | undefined;
                    symbol?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    hasMarket?: boolean | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _130.QueryAllAssetsResponse;
        };
        GenesisState: {
            encode(message: _129.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _129.GenesisState;
            fromPartial(object: {
                assets?: {
                    id?: number | undefined;
                    symbol?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    hasMarket?: boolean | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                }[] | undefined;
            }): _129.GenesisState;
        };
        Asset: {
            encode(message: _128.Asset, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _128.Asset;
            fromPartial(object: {
                id?: number | undefined;
                symbol?: string | undefined;
                denom?: string | undefined;
                denomExponent?: number | undefined;
                hasMarket?: boolean | undefined;
                marketId?: number | undefined;
                atomicResolution?: number | undefined;
            }): _128.Asset;
        };
    };
    const blocktime: {
        MsgClientImpl: typeof _325.MsgClientImpl;
        QueryClientImpl: typeof _311.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            downtimeParams(request?: _135.QueryDowntimeParamsRequest | undefined): Promise<_135.QueryDowntimeParamsResponse>;
            previousBlockInfo(request?: _135.QueryPreviousBlockInfoRequest | undefined): Promise<_135.QueryPreviousBlockInfoResponse>;
            allDowntimeInfo(request?: _135.QueryAllDowntimeInfoRequest | undefined): Promise<_135.QueryAllDowntimeInfoResponse>;
        };
        LCDQueryClient: typeof _297.LCDQueryClient;
        MsgUpdateDowntimeParams: {
            encode(message: _136.MsgUpdateDowntimeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _136.MsgUpdateDowntimeParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    durations?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _136.MsgUpdateDowntimeParams;
        };
        MsgUpdateDowntimeParamsResponse: {
            encode(_: _136.MsgUpdateDowntimeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _136.MsgUpdateDowntimeParamsResponse;
            fromPartial(_: {}): _136.MsgUpdateDowntimeParamsResponse;
        };
        QueryDowntimeParamsRequest: {
            encode(_: _135.QueryDowntimeParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryDowntimeParamsRequest;
            fromPartial(_: {}): _135.QueryDowntimeParamsRequest;
        };
        QueryDowntimeParamsResponse: {
            encode(message: _135.QueryDowntimeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryDowntimeParamsResponse;
            fromPartial(object: {
                params?: {
                    durations?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _135.QueryDowntimeParamsResponse;
        };
        QueryPreviousBlockInfoRequest: {
            encode(_: _135.QueryPreviousBlockInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryPreviousBlockInfoRequest;
            fromPartial(_: {}): _135.QueryPreviousBlockInfoRequest;
        };
        QueryPreviousBlockInfoResponse: {
            encode(message: _135.QueryPreviousBlockInfoResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryPreviousBlockInfoResponse;
            fromPartial(object: {
                info?: {
                    height?: number | undefined;
                    timestamp?: Date | undefined;
                } | undefined;
            }): _135.QueryPreviousBlockInfoResponse;
        };
        QueryAllDowntimeInfoRequest: {
            encode(_: _135.QueryAllDowntimeInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryAllDowntimeInfoRequest;
            fromPartial(_: {}): _135.QueryAllDowntimeInfoRequest;
        };
        QueryAllDowntimeInfoResponse: {
            encode(message: _135.QueryAllDowntimeInfoResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _135.QueryAllDowntimeInfoResponse;
            fromPartial(object: {
                info?: {
                    infos?: {
                        duration?: {
                            seconds?: string | number | import("long").Long | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        blockInfo?: {
                            height?: number | undefined;
                            timestamp?: Date | undefined;
                        } | undefined;
                    }[] | undefined;
                } | undefined;
            }): _135.QueryAllDowntimeInfoResponse;
        };
        DowntimeParams: {
            encode(message: _134.DowntimeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _134.DowntimeParams;
            fromPartial(object: {
                durations?: {
                    seconds?: string | number | import("long").Long | undefined;
                    nanos?: number | undefined;
                }[] | undefined;
            }): _134.DowntimeParams;
        };
        GenesisState: {
            encode(message: _133.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _133.GenesisState;
            fromPartial(object: {
                params?: {
                    durations?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _133.GenesisState;
        };
        BlockInfo: {
            encode(message: _132.BlockInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _132.BlockInfo;
            fromPartial(object: {
                height?: number | undefined;
                timestamp?: Date | undefined;
            }): _132.BlockInfo;
        };
        AllDowntimeInfo: {
            encode(message: _132.AllDowntimeInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _132.AllDowntimeInfo;
            fromPartial(object: {
                infos?: {
                    duration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    blockInfo?: {
                        height?: number | undefined;
                        timestamp?: Date | undefined;
                    } | undefined;
                }[] | undefined;
            }): _132.AllDowntimeInfo;
        };
        AllDowntimeInfo_DowntimeInfo: {
            encode(message: _132.AllDowntimeInfo_DowntimeInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _132.AllDowntimeInfo_DowntimeInfo;
            fromPartial(object: {
                duration?: {
                    seconds?: string | number | import("long").Long | undefined;
                    nanos?: number | undefined;
                } | undefined;
                blockInfo?: {
                    height?: number | undefined;
                    timestamp?: Date | undefined;
                } | undefined;
            }): _132.AllDowntimeInfo_DowntimeInfo;
        };
    };
    const bridge: {
        MsgClientImpl: typeof _326.MsgClientImpl;
        QueryClientImpl: typeof _312.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            eventParams(request?: _141.QueryEventParamsRequest | undefined): Promise<_141.QueryEventParamsResponse>;
            proposeParams(request?: _141.QueryProposeParamsRequest | undefined): Promise<_141.QueryProposeParamsResponse>;
            safetyParams(request?: _141.QuerySafetyParamsRequest | undefined): Promise<_141.QuerySafetyParamsResponse>;
            acknowledgedEventInfo(request?: _141.QueryAcknowledgedEventInfoRequest | undefined): Promise<_141.QueryAcknowledgedEventInfoResponse>;
            recognizedEventInfo(request?: _141.QueryRecognizedEventInfoRequest | undefined): Promise<_141.QueryRecognizedEventInfoResponse>;
            delayedCompleteBridgeMessages(request: _141.QueryDelayedCompleteBridgeMessagesRequest): Promise<_141.QueryDelayedCompleteBridgeMessagesResponse>;
        };
        LCDQueryClient: typeof _298.LCDQueryClient;
        MsgAcknowledgeBridges: {
            encode(message: _142.MsgAcknowledgeBridges, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgAcknowledgeBridges;
            fromPartial(object: {
                events?: {
                    id?: number | undefined;
                    coin?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                    address?: string | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _142.MsgAcknowledgeBridges;
        };
        MsgAcknowledgeBridgesResponse: {
            encode(_: _142.MsgAcknowledgeBridgesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgAcknowledgeBridgesResponse;
            fromPartial(_: {}): _142.MsgAcknowledgeBridgesResponse;
        };
        MsgCompleteBridge: {
            encode(message: _142.MsgCompleteBridge, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgCompleteBridge;
            fromPartial(object: {
                authority?: string | undefined;
                event?: {
                    id?: number | undefined;
                    coin?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                    address?: string | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _142.MsgCompleteBridge;
        };
        MsgCompleteBridgeResponse: {
            encode(_: _142.MsgCompleteBridgeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgCompleteBridgeResponse;
            fromPartial(_: {}): _142.MsgCompleteBridgeResponse;
        };
        MsgUpdateEventParams: {
            encode(message: _142.MsgUpdateEventParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateEventParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    denom?: string | undefined;
                    ethChainId?: string | number | import("long").Long | undefined;
                    ethAddress?: string | undefined;
                } | undefined;
            }): _142.MsgUpdateEventParams;
        };
        MsgUpdateEventParamsResponse: {
            encode(_: _142.MsgUpdateEventParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateEventParamsResponse;
            fromPartial(_: {}): _142.MsgUpdateEventParamsResponse;
        };
        MsgUpdateProposeParams: {
            encode(message: _142.MsgUpdateProposeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateProposeParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    maxBridgesPerBlock?: number | undefined;
                    proposeDelayDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    skipRatePpm?: number | undefined;
                    skipIfBlockDelayedByDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _142.MsgUpdateProposeParams;
        };
        MsgUpdateProposeParamsResponse: {
            encode(_: _142.MsgUpdateProposeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateProposeParamsResponse;
            fromPartial(_: {}): _142.MsgUpdateProposeParamsResponse;
        };
        MsgUpdateSafetyParams: {
            encode(message: _142.MsgUpdateSafetyParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateSafetyParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    isDisabled?: boolean | undefined;
                    delayBlocks?: number | undefined;
                } | undefined;
            }): _142.MsgUpdateSafetyParams;
        };
        MsgUpdateSafetyParamsResponse: {
            encode(_: _142.MsgUpdateSafetyParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _142.MsgUpdateSafetyParamsResponse;
            fromPartial(_: {}): _142.MsgUpdateSafetyParamsResponse;
        };
        QueryEventParamsRequest: {
            encode(_: _141.QueryEventParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryEventParamsRequest;
            fromPartial(_: {}): _141.QueryEventParamsRequest;
        };
        QueryEventParamsResponse: {
            encode(message: _141.QueryEventParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryEventParamsResponse;
            fromPartial(object: {
                params?: {
                    denom?: string | undefined;
                    ethChainId?: string | number | import("long").Long | undefined;
                    ethAddress?: string | undefined;
                } | undefined;
            }): _141.QueryEventParamsResponse;
        };
        QueryProposeParamsRequest: {
            encode(_: _141.QueryProposeParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryProposeParamsRequest;
            fromPartial(_: {}): _141.QueryProposeParamsRequest;
        };
        QueryProposeParamsResponse: {
            encode(message: _141.QueryProposeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryProposeParamsResponse;
            fromPartial(object: {
                params?: {
                    maxBridgesPerBlock?: number | undefined;
                    proposeDelayDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    skipRatePpm?: number | undefined;
                    skipIfBlockDelayedByDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _141.QueryProposeParamsResponse;
        };
        QuerySafetyParamsRequest: {
            encode(_: _141.QuerySafetyParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QuerySafetyParamsRequest;
            fromPartial(_: {}): _141.QuerySafetyParamsRequest;
        };
        QuerySafetyParamsResponse: {
            encode(message: _141.QuerySafetyParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QuerySafetyParamsResponse;
            fromPartial(object: {
                params?: {
                    isDisabled?: boolean | undefined;
                    delayBlocks?: number | undefined;
                } | undefined;
            }): _141.QuerySafetyParamsResponse;
        };
        QueryAcknowledgedEventInfoRequest: {
            encode(_: _141.QueryAcknowledgedEventInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryAcknowledgedEventInfoRequest;
            fromPartial(_: {}): _141.QueryAcknowledgedEventInfoRequest;
        };
        QueryAcknowledgedEventInfoResponse: {
            encode(message: _141.QueryAcknowledgedEventInfoResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryAcknowledgedEventInfoResponse;
            fromPartial(object: {
                info?: {
                    nextId?: number | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _141.QueryAcknowledgedEventInfoResponse;
        };
        QueryRecognizedEventInfoRequest: {
            encode(_: _141.QueryRecognizedEventInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryRecognizedEventInfoRequest;
            fromPartial(_: {}): _141.QueryRecognizedEventInfoRequest;
        };
        QueryRecognizedEventInfoResponse: {
            encode(message: _141.QueryRecognizedEventInfoResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryRecognizedEventInfoResponse;
            fromPartial(object: {
                info?: {
                    nextId?: number | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _141.QueryRecognizedEventInfoResponse;
        };
        QueryDelayedCompleteBridgeMessagesRequest: {
            encode(message: _141.QueryDelayedCompleteBridgeMessagesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryDelayedCompleteBridgeMessagesRequest;
            fromPartial(object: {
                address?: string | undefined;
            }): _141.QueryDelayedCompleteBridgeMessagesRequest;
        };
        QueryDelayedCompleteBridgeMessagesResponse: {
            encode(message: _141.QueryDelayedCompleteBridgeMessagesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.QueryDelayedCompleteBridgeMessagesResponse;
            fromPartial(object: {
                messages?: {
                    message?: {
                        authority?: string | undefined;
                        event?: {
                            id?: number | undefined;
                            coin?: {
                                denom?: string | undefined;
                                amount?: string | undefined;
                            } | undefined;
                            address?: string | undefined;
                            ethBlockHeight?: string | number | import("long").Long | undefined;
                        } | undefined;
                    } | undefined;
                    blockHeight?: number | undefined;
                }[] | undefined;
            }): _141.QueryDelayedCompleteBridgeMessagesResponse;
        };
        DelayedCompleteBridgeMessage: {
            encode(message: _141.DelayedCompleteBridgeMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _141.DelayedCompleteBridgeMessage;
            fromPartial(object: {
                message?: {
                    authority?: string | undefined;
                    event?: {
                        id?: number | undefined;
                        coin?: {
                            denom?: string | undefined;
                            amount?: string | undefined;
                        } | undefined;
                        address?: string | undefined;
                        ethBlockHeight?: string | number | import("long").Long | undefined;
                    } | undefined;
                } | undefined;
                blockHeight?: number | undefined;
            }): _141.DelayedCompleteBridgeMessage;
        };
        EventParams: {
            encode(message: _140.EventParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _140.EventParams;
            fromPartial(object: {
                denom?: string | undefined;
                ethChainId?: string | number | import("long").Long | undefined;
                ethAddress?: string | undefined;
            }): _140.EventParams;
        };
        ProposeParams: {
            encode(message: _140.ProposeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _140.ProposeParams;
            fromPartial(object: {
                maxBridgesPerBlock?: number | undefined;
                proposeDelayDuration?: {
                    seconds?: string | number | import("long").Long | undefined;
                    nanos?: number | undefined;
                } | undefined;
                skipRatePpm?: number | undefined;
                skipIfBlockDelayedByDuration?: {
                    seconds?: string | number | import("long").Long | undefined;
                    nanos?: number | undefined;
                } | undefined;
            }): _140.ProposeParams;
        };
        SafetyParams: {
            encode(message: _140.SafetyParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _140.SafetyParams;
            fromPartial(object: {
                isDisabled?: boolean | undefined;
                delayBlocks?: number | undefined;
            }): _140.SafetyParams;
        };
        GenesisState: {
            encode(message: _139.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _139.GenesisState;
            fromPartial(object: {
                eventParams?: {
                    denom?: string | undefined;
                    ethChainId?: string | number | import("long").Long | undefined;
                    ethAddress?: string | undefined;
                } | undefined;
                proposeParams?: {
                    maxBridgesPerBlock?: number | undefined;
                    proposeDelayDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    skipRatePpm?: number | undefined;
                    skipIfBlockDelayedByDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
                safetyParams?: {
                    isDisabled?: boolean | undefined;
                    delayBlocks?: number | undefined;
                } | undefined;
                acknowledgedEventInfo?: {
                    nextId?: number | undefined;
                    ethBlockHeight?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _139.GenesisState;
        };
        BridgeEvent: {
            encode(message: _138.BridgeEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _138.BridgeEvent;
            fromPartial(object: {
                id?: number | undefined;
                coin?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
                address?: string | undefined;
                ethBlockHeight?: string | number | import("long").Long | undefined;
            }): _138.BridgeEvent;
        };
        BridgeEventInfo: {
            encode(message: _137.BridgeEventInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _137.BridgeEventInfo;
            fromPartial(object: {
                nextId?: number | undefined;
                ethBlockHeight?: string | number | import("long").Long | undefined;
            }): _137.BridgeEventInfo;
        };
    };
    const clob: {
        MsgClientImpl: typeof _327.MsgClientImpl;
        QueryClientImpl: typeof _313.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            clobPair(request: _155.QueryGetClobPairRequest): Promise<_155.QueryClobPairResponse>;
            clobPairAll(request?: _155.QueryAllClobPairRequest | undefined): Promise<_155.QueryClobPairAllResponse>;
            areSubaccountsLiquidatable(request: _155.AreSubaccountsLiquidatableRequest): Promise<_155.AreSubaccountsLiquidatableResponse>;
            mevNodeToNodeCalculation(request: _155.MevNodeToNodeCalculationRequest): Promise<_155.MevNodeToNodeCalculationResponse>;
            equityTierLimitConfiguration(request?: _155.QueryEquityTierLimitConfigurationRequest | undefined): Promise<_155.QueryEquityTierLimitConfigurationResponse>;
            blockRateLimitConfiguration(request?: _155.QueryBlockRateLimitConfigurationRequest | undefined): Promise<_155.QueryBlockRateLimitConfigurationResponse>;
            liquidationsConfiguration(request?: _155.QueryLiquidationsConfigurationRequest | undefined): Promise<_155.QueryLiquidationsConfigurationResponse>;
        };
        LCDQueryClient: typeof _299.LCDQueryClient;
        MsgCreateClobPair: {
            encode(message: _156.MsgCreateClobPair, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgCreateClobPair;
            fromPartial(object: {
                authority?: string | undefined;
                clobPair?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                } | undefined;
            }): _156.MsgCreateClobPair;
        };
        MsgCreateClobPairResponse: {
            encode(_: _156.MsgCreateClobPairResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgCreateClobPairResponse;
            fromPartial(_: {}): _156.MsgCreateClobPairResponse;
        };
        MsgProposedOperations: {
            encode(message: _156.MsgProposedOperations, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgProposedOperations;
            fromPartial(object: {
                operationsQueue?: {
                    match?: {
                        matchOrders?: {
                            takerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                            fills?: {
                                fillAmount?: string | number | import("long").Long | undefined;
                                makerOrderId?: {
                                    subaccountId?: {
                                        owner?: string | undefined;
                                        number?: number | undefined;
                                    } | undefined;
                                    clientId?: number | undefined;
                                    orderFlags?: number | undefined;
                                    clobPairId?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                        } | undefined;
                        matchPerpetualLiquidation?: {
                            liquidated?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clobPairId?: number | undefined;
                            perpetualId?: number | undefined;
                            totalSize?: string | number | import("long").Long | undefined;
                            isBuy?: boolean | undefined;
                            fills?: {
                                fillAmount?: string | number | import("long").Long | undefined;
                                makerOrderId?: {
                                    subaccountId?: {
                                        owner?: string | undefined;
                                        number?: number | undefined;
                                    } | undefined;
                                    clientId?: number | undefined;
                                    orderFlags?: number | undefined;
                                    clobPairId?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                        } | undefined;
                        matchPerpetualDeleveraging?: {
                            liquidated?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            perpetualId?: number | undefined;
                            fills?: {
                                offsettingSubaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                fillAmount?: string | number | import("long").Long | undefined;
                            }[] | undefined;
                            isFinalSettlement?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    shortTermOrderPlacement?: Uint8Array | undefined;
                    orderRemoval?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        removalReason?: _152.OrderRemoval_RemovalReason | undefined;
                    } | undefined;
                }[] | undefined;
            }): _156.MsgProposedOperations;
        };
        MsgProposedOperationsResponse: {
            encode(_: _156.MsgProposedOperationsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgProposedOperationsResponse;
            fromPartial(_: {}): _156.MsgProposedOperationsResponse;
        };
        MsgPlaceOrder: {
            encode(message: _156.MsgPlaceOrder, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgPlaceOrder;
            fromPartial(object: {
                order?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    side?: _153.Order_Side | undefined;
                    quantums?: string | number | import("long").Long | undefined;
                    subticks?: string | number | import("long").Long | undefined;
                    goodTilBlock?: number | undefined;
                    goodTilBlockTime?: number | undefined;
                    timeInForce?: _153.Order_TimeInForce | undefined;
                    reduceOnly?: boolean | undefined;
                    clientMetadata?: number | undefined;
                    conditionType?: _153.Order_ConditionType | undefined;
                    conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _156.MsgPlaceOrder;
        };
        MsgPlaceOrderResponse: {
            encode(_: _156.MsgPlaceOrderResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgPlaceOrderResponse;
            fromPartial(_: {}): _156.MsgPlaceOrderResponse;
        };
        MsgCancelOrder: {
            encode(message: _156.MsgCancelOrder, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgCancelOrder;
            fromPartial(object: {
                orderId?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
                goodTilBlock?: number | undefined;
                goodTilBlockTime?: number | undefined;
            }): _156.MsgCancelOrder;
        };
        MsgCancelOrderResponse: {
            encode(_: _156.MsgCancelOrderResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgCancelOrderResponse;
            fromPartial(_: {}): _156.MsgCancelOrderResponse;
        };
        MsgUpdateClobPair: {
            encode(message: _156.MsgUpdateClobPair, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateClobPair;
            fromPartial(object: {
                authority?: string | undefined;
                clobPair?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                } | undefined;
            }): _156.MsgUpdateClobPair;
        };
        MsgUpdateClobPairResponse: {
            encode(_: _156.MsgUpdateClobPairResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateClobPairResponse;
            fromPartial(_: {}): _156.MsgUpdateClobPairResponse;
        };
        OperationRaw: {
            encode(message: _156.OperationRaw, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.OperationRaw;
            fromPartial(object: {
                match?: {
                    matchOrders?: {
                        takerOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualLiquidation?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clobPairId?: number | undefined;
                        perpetualId?: number | undefined;
                        totalSize?: string | number | import("long").Long | undefined;
                        isBuy?: boolean | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualDeleveraging?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        perpetualId?: number | undefined;
                        fills?: {
                            offsettingSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                        isFinalSettlement?: boolean | undefined;
                    } | undefined;
                } | undefined;
                shortTermOrderPlacement?: Uint8Array | undefined;
                orderRemoval?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    removalReason?: _152.OrderRemoval_RemovalReason | undefined;
                } | undefined;
            }): _156.OperationRaw;
        };
        MsgUpdateEquityTierLimitConfiguration: {
            encode(message: _156.MsgUpdateEquityTierLimitConfiguration, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateEquityTierLimitConfiguration;
            fromPartial(object: {
                authority?: string | undefined;
                equityTierLimitConfig?: {
                    shortTermOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    statefulOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _156.MsgUpdateEquityTierLimitConfiguration;
        };
        MsgUpdateEquityTierLimitConfigurationResponse: {
            encode(_: _156.MsgUpdateEquityTierLimitConfigurationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateEquityTierLimitConfigurationResponse;
            fromPartial(_: {}): _156.MsgUpdateEquityTierLimitConfigurationResponse;
        };
        MsgUpdateBlockRateLimitConfiguration: {
            encode(message: _156.MsgUpdateBlockRateLimitConfiguration, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateBlockRateLimitConfiguration;
            fromPartial(object: {
                authority?: string | undefined;
                blockRateLimitConfig?: {
                    maxShortTermOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxStatefulOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxShortTermOrderCancellationsPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _156.MsgUpdateBlockRateLimitConfiguration;
        };
        MsgUpdateBlockRateLimitConfigurationResponse: {
            encode(_: _156.MsgUpdateBlockRateLimitConfigurationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateBlockRateLimitConfigurationResponse;
            fromPartial(_: {}): _156.MsgUpdateBlockRateLimitConfigurationResponse;
        };
        MsgUpdateLiquidationsConfig: {
            encode(message: _156.MsgUpdateLiquidationsConfig, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateLiquidationsConfig;
            fromPartial(object: {
                authority?: string | undefined;
                liquidationsConfig?: {
                    maxLiquidationFeePpm?: number | undefined;
                    positionBlockLimits?: {
                        minPositionNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxPositionPortionLiquidatedPpm?: number | undefined;
                    } | undefined;
                    subaccountBlockLimits?: {
                        maxNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxQuantumsInsuranceLost?: string | number | import("long").Long | undefined;
                    } | undefined;
                    fillablePriceConfig?: {
                        bankruptcyAdjustmentPpm?: number | undefined;
                        spreadToMaintenanceMarginRatioPpm?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _156.MsgUpdateLiquidationsConfig;
        };
        MsgUpdateLiquidationsConfigResponse: {
            encode(_: _156.MsgUpdateLiquidationsConfigResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _156.MsgUpdateLiquidationsConfigResponse;
            fromPartial(_: {}): _156.MsgUpdateLiquidationsConfigResponse;
        };
        QueryGetClobPairRequest: {
            encode(message: _155.QueryGetClobPairRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryGetClobPairRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _155.QueryGetClobPairRequest;
        };
        QueryClobPairResponse: {
            encode(message: _155.QueryClobPairResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryClobPairResponse;
            fromPartial(object: {
                clobPair?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                } | undefined;
            }): _155.QueryClobPairResponse;
        };
        QueryAllClobPairRequest: {
            encode(message: _155.QueryAllClobPairRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryAllClobPairRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _155.QueryAllClobPairRequest;
        };
        QueryClobPairAllResponse: {
            encode(message: _155.QueryClobPairAllResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryClobPairAllResponse;
            fromPartial(object: {
                clobPair?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _155.QueryClobPairAllResponse;
        };
        AreSubaccountsLiquidatableRequest: {
            encode(message: _155.AreSubaccountsLiquidatableRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.AreSubaccountsLiquidatableRequest;
            fromPartial(object: {
                subaccountIds?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                }[] | undefined;
            }): _155.AreSubaccountsLiquidatableRequest;
        };
        AreSubaccountsLiquidatableResponse: {
            encode(message: _155.AreSubaccountsLiquidatableResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.AreSubaccountsLiquidatableResponse;
            fromPartial(object: {
                results?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    isLiquidatable?: boolean | undefined;
                }[] | undefined;
            }): _155.AreSubaccountsLiquidatableResponse;
        };
        AreSubaccountsLiquidatableResponse_Result: {
            encode(message: _155.AreSubaccountsLiquidatableResponse_Result, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.AreSubaccountsLiquidatableResponse_Result;
            fromPartial(object: {
                subaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                isLiquidatable?: boolean | undefined;
            }): _155.AreSubaccountsLiquidatableResponse_Result;
        };
        MevNodeToNodeCalculationRequest: {
            encode(message: _155.MevNodeToNodeCalculationRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.MevNodeToNodeCalculationRequest;
            fromPartial(object: {
                blockProposerMatches?: {
                    matches?: {
                        takerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        takerFeePpm?: number | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    liquidationMatches?: {
                        liquidatedSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                } | undefined;
                validatorMevMetrics?: {
                    validatorMevMatches?: {
                        matches?: {
                            takerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            takerFeePpm?: number | undefined;
                            makerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            makerOrderSubticks?: string | number | import("long").Long | undefined;
                            makerOrderIsBuy?: boolean | undefined;
                            makerFeePpm?: number | undefined;
                            clobPairId?: number | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                        liquidationMatches?: {
                            liquidatedSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                            makerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            makerOrderSubticks?: string | number | import("long").Long | undefined;
                            makerOrderIsBuy?: boolean | undefined;
                            makerFeePpm?: number | undefined;
                            clobPairId?: number | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                    } | undefined;
                    clobMidPrices?: {
                        clobPair?: {
                            id?: number | undefined;
                            perpetualClobMetadata?: {
                                perpetualId?: number | undefined;
                            } | undefined;
                            spotClobMetadata?: {
                                baseAssetId?: number | undefined;
                                quoteAssetId?: number | undefined;
                            } | undefined;
                            stepBaseQuantums?: string | number | import("long").Long | undefined;
                            subticksPerTick?: number | undefined;
                            quantumConversionExponent?: number | undefined;
                            status?: _144.ClobPair_Status | undefined;
                        } | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    bpMevMatches?: {
                        matches?: {
                            takerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            takerFeePpm?: number | undefined;
                            makerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            makerOrderSubticks?: string | number | import("long").Long | undefined;
                            makerOrderIsBuy?: boolean | undefined;
                            makerFeePpm?: number | undefined;
                            clobPairId?: number | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                        liquidationMatches?: {
                            liquidatedSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                            makerOrderSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            makerOrderSubticks?: string | number | import("long").Long | undefined;
                            makerOrderIsBuy?: boolean | undefined;
                            makerFeePpm?: number | undefined;
                            clobPairId?: number | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                    } | undefined;
                    proposalReceiveTime?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _155.MevNodeToNodeCalculationRequest;
        };
        MevNodeToNodeCalculationResponse: {
            encode(message: _155.MevNodeToNodeCalculationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.MevNodeToNodeCalculationResponse;
            fromPartial(object: {
                results?: {
                    clobPairId?: number | undefined;
                    mev?: number | undefined;
                    volume?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _155.MevNodeToNodeCalculationResponse;
        };
        MevNodeToNodeCalculationResponse_MevAndVolumePerClob: {
            encode(message: _155.MevNodeToNodeCalculationResponse_MevAndVolumePerClob, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.MevNodeToNodeCalculationResponse_MevAndVolumePerClob;
            fromPartial(object: {
                clobPairId?: number | undefined;
                mev?: number | undefined;
                volume?: string | number | import("long").Long | undefined;
            }): _155.MevNodeToNodeCalculationResponse_MevAndVolumePerClob;
        };
        QueryEquityTierLimitConfigurationRequest: {
            encode(_: _155.QueryEquityTierLimitConfigurationRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryEquityTierLimitConfigurationRequest;
            fromPartial(_: {}): _155.QueryEquityTierLimitConfigurationRequest;
        };
        QueryEquityTierLimitConfigurationResponse: {
            encode(message: _155.QueryEquityTierLimitConfigurationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryEquityTierLimitConfigurationResponse;
            fromPartial(object: {
                equityTierLimitConfig?: {
                    shortTermOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    statefulOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _155.QueryEquityTierLimitConfigurationResponse;
        };
        QueryBlockRateLimitConfigurationRequest: {
            encode(_: _155.QueryBlockRateLimitConfigurationRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryBlockRateLimitConfigurationRequest;
            fromPartial(_: {}): _155.QueryBlockRateLimitConfigurationRequest;
        };
        QueryBlockRateLimitConfigurationResponse: {
            encode(message: _155.QueryBlockRateLimitConfigurationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryBlockRateLimitConfigurationResponse;
            fromPartial(object: {
                blockRateLimitConfig?: {
                    maxShortTermOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxStatefulOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxShortTermOrderCancellationsPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _155.QueryBlockRateLimitConfigurationResponse;
        };
        QueryLiquidationsConfigurationRequest: {
            encode(_: _155.QueryLiquidationsConfigurationRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryLiquidationsConfigurationRequest;
            fromPartial(_: {}): _155.QueryLiquidationsConfigurationRequest;
        };
        QueryLiquidationsConfigurationResponse: {
            encode(message: _155.QueryLiquidationsConfigurationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _155.QueryLiquidationsConfigurationResponse;
            fromPartial(object: {
                liquidationsConfig?: {
                    maxLiquidationFeePpm?: number | undefined;
                    positionBlockLimits?: {
                        minPositionNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxPositionPortionLiquidatedPpm?: number | undefined;
                    } | undefined;
                    subaccountBlockLimits?: {
                        maxNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxQuantumsInsuranceLost?: string | number | import("long").Long | undefined;
                    } | undefined;
                    fillablePriceConfig?: {
                        bankruptcyAdjustmentPpm?: number | undefined;
                        spreadToMaintenanceMarginRatioPpm?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _155.QueryLiquidationsConfigurationResponse;
        };
        ProcessProposerMatchesEvents: {
            encode(message: _154.ProcessProposerMatchesEvents, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _154.ProcessProposerMatchesEvents;
            fromPartial(object: {
                placedLongTermOrderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                expiredStatefulOrderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                orderIdsFilledInLastBlock?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                placedStatefulCancellationOrderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                removedStatefulOrderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                conditionalOrderIdsTriggeredInLastBlock?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                placedConditionalOrderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
                blockHeight?: number | undefined;
            }): _154.ProcessProposerMatchesEvents;
        };
        order_SideFromJSON(object: any): _153.Order_Side;
        order_SideToJSON(object: _153.Order_Side): string;
        order_TimeInForceFromJSON(object: any): _153.Order_TimeInForce;
        order_TimeInForceToJSON(object: _153.Order_TimeInForce): string;
        order_ConditionTypeFromJSON(object: any): _153.Order_ConditionType;
        order_ConditionTypeToJSON(object: _153.Order_ConditionType): string;
        Order_Side: typeof _153.Order_Side;
        Order_SideSDKType: typeof _153.Order_Side;
        Order_TimeInForce: typeof _153.Order_TimeInForce;
        Order_TimeInForceSDKType: typeof _153.Order_TimeInForce;
        Order_ConditionType: typeof _153.Order_ConditionType;
        Order_ConditionTypeSDKType: typeof _153.Order_ConditionType;
        OrderId: {
            encode(message: _153.OrderId, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.OrderId;
            fromPartial(object: {
                subaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                clientId?: number | undefined;
                orderFlags?: number | undefined;
                clobPairId?: number | undefined;
            }): _153.OrderId;
        };
        OrdersFilledDuringLatestBlock: {
            encode(message: _153.OrdersFilledDuringLatestBlock, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.OrdersFilledDuringLatestBlock;
            fromPartial(object: {
                orderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
            }): _153.OrdersFilledDuringLatestBlock;
        };
        PotentiallyPrunableOrders: {
            encode(message: _153.PotentiallyPrunableOrders, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.PotentiallyPrunableOrders;
            fromPartial(object: {
                orderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
            }): _153.PotentiallyPrunableOrders;
        };
        OrderFillState: {
            encode(message: _153.OrderFillState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.OrderFillState;
            fromPartial(object: {
                fillAmount?: string | number | import("long").Long | undefined;
                prunableBlockHeight?: number | undefined;
            }): _153.OrderFillState;
        };
        StatefulOrderTimeSliceValue: {
            encode(message: _153.StatefulOrderTimeSliceValue, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.StatefulOrderTimeSliceValue;
            fromPartial(object: {
                orderIds?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                }[] | undefined;
            }): _153.StatefulOrderTimeSliceValue;
        };
        LongTermOrderPlacement: {
            encode(message: _153.LongTermOrderPlacement, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.LongTermOrderPlacement;
            fromPartial(object: {
                order?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    side?: _153.Order_Side | undefined;
                    quantums?: string | number | import("long").Long | undefined;
                    subticks?: string | number | import("long").Long | undefined;
                    goodTilBlock?: number | undefined;
                    goodTilBlockTime?: number | undefined;
                    timeInForce?: _153.Order_TimeInForce | undefined;
                    reduceOnly?: boolean | undefined;
                    clientMetadata?: number | undefined;
                    conditionType?: _153.Order_ConditionType | undefined;
                    conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                } | undefined;
                placementIndex?: {
                    blockHeight?: number | undefined;
                    transactionIndex?: number | undefined;
                } | undefined;
            }): _153.LongTermOrderPlacement;
        };
        ConditionalOrderPlacement: {
            encode(message: _153.ConditionalOrderPlacement, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.ConditionalOrderPlacement;
            fromPartial(object: {
                order?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    side?: _153.Order_Side | undefined;
                    quantums?: string | number | import("long").Long | undefined;
                    subticks?: string | number | import("long").Long | undefined;
                    goodTilBlock?: number | undefined;
                    goodTilBlockTime?: number | undefined;
                    timeInForce?: _153.Order_TimeInForce | undefined;
                    reduceOnly?: boolean | undefined;
                    clientMetadata?: number | undefined;
                    conditionType?: _153.Order_ConditionType | undefined;
                    conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                } | undefined;
                placementIndex?: {
                    blockHeight?: number | undefined;
                    transactionIndex?: number | undefined;
                } | undefined;
                triggerIndex?: {
                    blockHeight?: number | undefined;
                    transactionIndex?: number | undefined;
                } | undefined;
            }): _153.ConditionalOrderPlacement;
        };
        Order: {
            encode(message: _153.Order, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.Order;
            fromPartial(object: {
                orderId?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
                side?: _153.Order_Side | undefined;
                quantums?: string | number | import("long").Long | undefined;
                subticks?: string | number | import("long").Long | undefined;
                goodTilBlock?: number | undefined;
                goodTilBlockTime?: number | undefined;
                timeInForce?: _153.Order_TimeInForce | undefined;
                reduceOnly?: boolean | undefined;
                clientMetadata?: number | undefined;
                conditionType?: _153.Order_ConditionType | undefined;
                conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
            }): _153.Order;
        };
        TransactionOrdering: {
            encode(message: _153.TransactionOrdering, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _153.TransactionOrdering;
            fromPartial(object: {
                blockHeight?: number | undefined;
                transactionIndex?: number | undefined;
            }): _153.TransactionOrdering;
        };
        orderRemoval_RemovalReasonFromJSON(object: any): _152.OrderRemoval_RemovalReason;
        orderRemoval_RemovalReasonToJSON(object: _152.OrderRemoval_RemovalReason): string;
        OrderRemoval_RemovalReason: typeof _152.OrderRemoval_RemovalReason;
        OrderRemoval_RemovalReasonSDKType: typeof _152.OrderRemoval_RemovalReason;
        OrderRemoval: {
            encode(message: _152.OrderRemoval, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _152.OrderRemoval;
            fromPartial(object: {
                orderId?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
                removalReason?: _152.OrderRemoval_RemovalReason | undefined;
            }): _152.OrderRemoval;
        };
        Operation: {
            encode(message: _151.Operation, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _151.Operation;
            fromPartial(object: {
                match?: {
                    matchOrders?: {
                        takerOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualLiquidation?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clobPairId?: number | undefined;
                        perpetualId?: number | undefined;
                        totalSize?: string | number | import("long").Long | undefined;
                        isBuy?: boolean | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualDeleveraging?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        perpetualId?: number | undefined;
                        fills?: {
                            offsettingSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                        isFinalSettlement?: boolean | undefined;
                    } | undefined;
                } | undefined;
                shortTermOrderPlacement?: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _153.Order_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _153.Order_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _153.Order_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                } | undefined;
                shortTermOrderCancellation?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    goodTilBlock?: number | undefined;
                    goodTilBlockTime?: number | undefined;
                } | undefined;
                preexistingStatefulOrder?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
            }): _151.Operation;
        };
        InternalOperation: {
            encode(message: _151.InternalOperation, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _151.InternalOperation;
            fromPartial(object: {
                match?: {
                    matchOrders?: {
                        takerOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualLiquidation?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clobPairId?: number | undefined;
                        perpetualId?: number | undefined;
                        totalSize?: string | number | import("long").Long | undefined;
                        isBuy?: boolean | undefined;
                        fills?: {
                            fillAmount?: string | number | import("long").Long | undefined;
                            makerOrderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                    matchPerpetualDeleveraging?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        perpetualId?: number | undefined;
                        fills?: {
                            offsettingSubaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            fillAmount?: string | number | import("long").Long | undefined;
                        }[] | undefined;
                        isFinalSettlement?: boolean | undefined;
                    } | undefined;
                } | undefined;
                shortTermOrderPlacement?: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _153.Order_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _153.Order_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _153.Order_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                } | undefined;
                preexistingStatefulOrder?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
                orderRemoval?: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    removalReason?: _152.OrderRemoval_RemovalReason | undefined;
                } | undefined;
            }): _151.InternalOperation;
        };
        MEVMatch: {
            encode(message: _150.MEVMatch, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _150.MEVMatch;
            fromPartial(object: {
                takerOrderSubaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                takerFeePpm?: number | undefined;
                makerOrderSubaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                makerOrderSubticks?: string | number | import("long").Long | undefined;
                makerOrderIsBuy?: boolean | undefined;
                makerFeePpm?: number | undefined;
                clobPairId?: number | undefined;
                fillAmount?: string | number | import("long").Long | undefined;
            }): _150.MEVMatch;
        };
        MEVLiquidationMatch: {
            encode(message: _150.MEVLiquidationMatch, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _150.MEVLiquidationMatch;
            fromPartial(object: {
                liquidatedSubaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                makerOrderSubaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                makerOrderSubticks?: string | number | import("long").Long | undefined;
                makerOrderIsBuy?: boolean | undefined;
                makerFeePpm?: number | undefined;
                clobPairId?: number | undefined;
                fillAmount?: string | number | import("long").Long | undefined;
            }): _150.MEVLiquidationMatch;
        };
        ClobMidPrice: {
            encode(message: _150.ClobMidPrice, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _150.ClobMidPrice;
            fromPartial(object: {
                clobPair?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                } | undefined;
                subticks?: string | number | import("long").Long | undefined;
            }): _150.ClobMidPrice;
        };
        ValidatorMevMatches: {
            encode(message: _150.ValidatorMevMatches, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _150.ValidatorMevMatches;
            fromPartial(object: {
                matches?: {
                    takerOrderSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    takerFeePpm?: number | undefined;
                    makerOrderSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    makerOrderSubticks?: string | number | import("long").Long | undefined;
                    makerOrderIsBuy?: boolean | undefined;
                    makerFeePpm?: number | undefined;
                    clobPairId?: number | undefined;
                    fillAmount?: string | number | import("long").Long | undefined;
                }[] | undefined;
                liquidationMatches?: {
                    liquidatedSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                    makerOrderSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    makerOrderSubticks?: string | number | import("long").Long | undefined;
                    makerOrderIsBuy?: boolean | undefined;
                    makerFeePpm?: number | undefined;
                    clobPairId?: number | undefined;
                    fillAmount?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _150.ValidatorMevMatches;
        };
        MevNodeToNodeMetrics: {
            encode(message: _150.MevNodeToNodeMetrics, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _150.MevNodeToNodeMetrics;
            fromPartial(object: {
                validatorMevMatches?: {
                    matches?: {
                        takerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        takerFeePpm?: number | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    liquidationMatches?: {
                        liquidatedSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                } | undefined;
                clobMidPrices?: {
                    clobPair?: {
                        id?: number | undefined;
                        perpetualClobMetadata?: {
                            perpetualId?: number | undefined;
                        } | undefined;
                        spotClobMetadata?: {
                            baseAssetId?: number | undefined;
                            quoteAssetId?: number | undefined;
                        } | undefined;
                        stepBaseQuantums?: string | number | import("long").Long | undefined;
                        subticksPerTick?: number | undefined;
                        quantumConversionExponent?: number | undefined;
                        status?: _144.ClobPair_Status | undefined;
                    } | undefined;
                    subticks?: string | number | import("long").Long | undefined;
                }[] | undefined;
                bpMevMatches?: {
                    matches?: {
                        takerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        takerFeePpm?: number | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    liquidationMatches?: {
                        liquidatedSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        insuranceFundDeltaQuoteQuantums?: string | number | import("long").Long | undefined;
                        makerOrderSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        makerOrderSubticks?: string | number | import("long").Long | undefined;
                        makerOrderIsBuy?: boolean | undefined;
                        makerFeePpm?: number | undefined;
                        clobPairId?: number | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                } | undefined;
                proposalReceiveTime?: string | number | import("long").Long | undefined;
            }): _150.MevNodeToNodeMetrics;
        };
        ClobMatch: {
            encode(message: _149.ClobMatch, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.ClobMatch;
            fromPartial(object: {
                matchOrders?: {
                    takerOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    fills?: {
                        fillAmount?: string | number | import("long").Long | undefined;
                        makerOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                } | undefined;
                matchPerpetualLiquidation?: {
                    liquidated?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clobPairId?: number | undefined;
                    perpetualId?: number | undefined;
                    totalSize?: string | number | import("long").Long | undefined;
                    isBuy?: boolean | undefined;
                    fills?: {
                        fillAmount?: string | number | import("long").Long | undefined;
                        makerOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                } | undefined;
                matchPerpetualDeleveraging?: {
                    liquidated?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    perpetualId?: number | undefined;
                    fills?: {
                        offsettingSubaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        fillAmount?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    isFinalSettlement?: boolean | undefined;
                } | undefined;
            }): _149.ClobMatch;
        };
        MakerFill: {
            encode(message: _149.MakerFill, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.MakerFill;
            fromPartial(object: {
                fillAmount?: string | number | import("long").Long | undefined;
                makerOrderId?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
            }): _149.MakerFill;
        };
        MatchOrders: {
            encode(message: _149.MatchOrders, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.MatchOrders;
            fromPartial(object: {
                takerOrderId?: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clientId?: number | undefined;
                    orderFlags?: number | undefined;
                    clobPairId?: number | undefined;
                } | undefined;
                fills?: {
                    fillAmount?: string | number | import("long").Long | undefined;
                    makerOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }): _149.MatchOrders;
        };
        MatchPerpetualLiquidation: {
            encode(message: _149.MatchPerpetualLiquidation, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.MatchPerpetualLiquidation;
            fromPartial(object: {
                liquidated?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                clobPairId?: number | undefined;
                perpetualId?: number | undefined;
                totalSize?: string | number | import("long").Long | undefined;
                isBuy?: boolean | undefined;
                fills?: {
                    fillAmount?: string | number | import("long").Long | undefined;
                    makerOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }): _149.MatchPerpetualLiquidation;
        };
        MatchPerpetualDeleveraging: {
            encode(message: _149.MatchPerpetualDeleveraging, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.MatchPerpetualDeleveraging;
            fromPartial(object: {
                liquidated?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                perpetualId?: number | undefined;
                fills?: {
                    offsettingSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    fillAmount?: string | number | import("long").Long | undefined;
                }[] | undefined;
                isFinalSettlement?: boolean | undefined;
            }): _149.MatchPerpetualDeleveraging;
        };
        MatchPerpetualDeleveraging_Fill: {
            encode(message: _149.MatchPerpetualDeleveraging_Fill, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _149.MatchPerpetualDeleveraging_Fill;
            fromPartial(object: {
                offsettingSubaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                fillAmount?: string | number | import("long").Long | undefined;
            }): _149.MatchPerpetualDeleveraging_Fill;
        };
        PerpetualLiquidationInfo: {
            encode(message: _148.PerpetualLiquidationInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _148.PerpetualLiquidationInfo;
            fromPartial(object: {
                subaccountId?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                perpetualId?: number | undefined;
            }): _148.PerpetualLiquidationInfo;
        };
        SubaccountLiquidationInfo: {
            encode(message: _148.SubaccountLiquidationInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _148.SubaccountLiquidationInfo;
            fromPartial(object: {
                perpetualsLiquidated?: number[] | undefined;
                notionalLiquidated?: string | number | import("long").Long | undefined;
                quantumsInsuranceLost?: string | number | import("long").Long | undefined;
            }): _148.SubaccountLiquidationInfo;
        };
        SubaccountOpenPositionInfo: {
            encode(message: _148.SubaccountOpenPositionInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _148.SubaccountOpenPositionInfo;
            fromPartial(object: {
                perpetualId?: number | undefined;
                subaccountsWithLongPosition?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                }[] | undefined;
                subaccountsWithShortPosition?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                }[] | undefined;
            }): _148.SubaccountOpenPositionInfo;
        };
        LiquidationsConfig: {
            encode(message: _147.LiquidationsConfig, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _147.LiquidationsConfig;
            fromPartial(object: {
                maxLiquidationFeePpm?: number | undefined;
                positionBlockLimits?: {
                    minPositionNotionalLiquidated?: string | number | import("long").Long | undefined;
                    maxPositionPortionLiquidatedPpm?: number | undefined;
                } | undefined;
                subaccountBlockLimits?: {
                    maxNotionalLiquidated?: string | number | import("long").Long | undefined;
                    maxQuantumsInsuranceLost?: string | number | import("long").Long | undefined;
                } | undefined;
                fillablePriceConfig?: {
                    bankruptcyAdjustmentPpm?: number | undefined;
                    spreadToMaintenanceMarginRatioPpm?: number | undefined;
                } | undefined;
            }): _147.LiquidationsConfig;
        };
        PositionBlockLimits: {
            encode(message: _147.PositionBlockLimits, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _147.PositionBlockLimits;
            fromPartial(object: {
                minPositionNotionalLiquidated?: string | number | import("long").Long | undefined;
                maxPositionPortionLiquidatedPpm?: number | undefined;
            }): _147.PositionBlockLimits;
        };
        SubaccountBlockLimits: {
            encode(message: _147.SubaccountBlockLimits, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _147.SubaccountBlockLimits;
            fromPartial(object: {
                maxNotionalLiquidated?: string | number | import("long").Long | undefined;
                maxQuantumsInsuranceLost?: string | number | import("long").Long | undefined;
            }): _147.SubaccountBlockLimits;
        };
        FillablePriceConfig: {
            encode(message: _147.FillablePriceConfig, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _147.FillablePriceConfig;
            fromPartial(object: {
                bankruptcyAdjustmentPpm?: number | undefined;
                spreadToMaintenanceMarginRatioPpm?: number | undefined;
            }): _147.FillablePriceConfig;
        };
        GenesisState: {
            encode(message: _146.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _146.GenesisState;
            fromPartial(object: {
                clobPairs?: {
                    id?: number | undefined;
                    perpetualClobMetadata?: {
                        perpetualId?: number | undefined;
                    } | undefined;
                    spotClobMetadata?: {
                        baseAssetId?: number | undefined;
                        quoteAssetId?: number | undefined;
                    } | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    subticksPerTick?: number | undefined;
                    quantumConversionExponent?: number | undefined;
                    status?: _144.ClobPair_Status | undefined;
                }[] | undefined;
                liquidationsConfig?: {
                    maxLiquidationFeePpm?: number | undefined;
                    positionBlockLimits?: {
                        minPositionNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxPositionPortionLiquidatedPpm?: number | undefined;
                    } | undefined;
                    subaccountBlockLimits?: {
                        maxNotionalLiquidated?: string | number | import("long").Long | undefined;
                        maxQuantumsInsuranceLost?: string | number | import("long").Long | undefined;
                    } | undefined;
                    fillablePriceConfig?: {
                        bankruptcyAdjustmentPpm?: number | undefined;
                        spreadToMaintenanceMarginRatioPpm?: number | undefined;
                    } | undefined;
                } | undefined;
                blockRateLimitConfig?: {
                    maxShortTermOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxStatefulOrdersPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    maxShortTermOrderCancellationsPerNBlocks?: {
                        numBlocks?: number | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
                equityTierLimitConfig?: {
                    shortTermOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                    statefulOrderEquityTiers?: {
                        usdTncRequired?: Uint8Array | undefined;
                        limit?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _146.GenesisState;
        };
        EquityTierLimitConfiguration: {
            encode(message: _145.EquityTierLimitConfiguration, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _145.EquityTierLimitConfiguration;
            fromPartial(object: {
                shortTermOrderEquityTiers?: {
                    usdTncRequired?: Uint8Array | undefined;
                    limit?: number | undefined;
                }[] | undefined;
                statefulOrderEquityTiers?: {
                    usdTncRequired?: Uint8Array | undefined;
                    limit?: number | undefined;
                }[] | undefined;
            }): _145.EquityTierLimitConfiguration;
        };
        EquityTierLimit: {
            encode(message: _145.EquityTierLimit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _145.EquityTierLimit;
            fromPartial(object: {
                usdTncRequired?: Uint8Array | undefined;
                limit?: number | undefined;
            }): _145.EquityTierLimit;
        };
        clobPair_StatusFromJSON(object: any): _144.ClobPair_Status;
        clobPair_StatusToJSON(object: _144.ClobPair_Status): string;
        ClobPair_Status: typeof _144.ClobPair_Status;
        ClobPair_StatusSDKType: typeof _144.ClobPair_Status;
        PerpetualClobMetadata: {
            encode(message: _144.PerpetualClobMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _144.PerpetualClobMetadata;
            fromPartial(object: {
                perpetualId?: number | undefined;
            }): _144.PerpetualClobMetadata;
        };
        SpotClobMetadata: {
            encode(message: _144.SpotClobMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _144.SpotClobMetadata;
            fromPartial(object: {
                baseAssetId?: number | undefined;
                quoteAssetId?: number | undefined;
            }): _144.SpotClobMetadata;
        };
        ClobPair: {
            encode(message: _144.ClobPair, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _144.ClobPair;
            fromPartial(object: {
                id?: number | undefined;
                perpetualClobMetadata?: {
                    perpetualId?: number | undefined;
                } | undefined;
                spotClobMetadata?: {
                    baseAssetId?: number | undefined;
                    quoteAssetId?: number | undefined;
                } | undefined;
                stepBaseQuantums?: string | number | import("long").Long | undefined;
                subticksPerTick?: number | undefined;
                quantumConversionExponent?: number | undefined;
                status?: _144.ClobPair_Status | undefined;
            }): _144.ClobPair;
        };
        BlockRateLimitConfiguration: {
            encode(message: _143.BlockRateLimitConfiguration, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _143.BlockRateLimitConfiguration;
            fromPartial(object: {
                maxShortTermOrdersPerNBlocks?: {
                    numBlocks?: number | undefined;
                    limit?: number | undefined;
                }[] | undefined;
                maxStatefulOrdersPerNBlocks?: {
                    numBlocks?: number | undefined;
                    limit?: number | undefined;
                }[] | undefined;
                maxShortTermOrderCancellationsPerNBlocks?: {
                    numBlocks?: number | undefined;
                    limit?: number | undefined;
                }[] | undefined;
            }): _143.BlockRateLimitConfiguration;
        };
        MaxPerNBlocksRateLimit: {
            encode(message: _143.MaxPerNBlocksRateLimit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _143.MaxPerNBlocksRateLimit;
            fromPartial(object: {
                numBlocks?: number | undefined;
                limit?: number | undefined;
            }): _143.MaxPerNBlocksRateLimit;
        };
    };
    namespace daemons {
        const bridge: {
            AddBridgeEventsRequest: {
                encode(message: _157.AddBridgeEventsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _157.AddBridgeEventsRequest;
                fromPartial(object: {
                    bridgeEvents?: {
                        id?: number | undefined;
                        coin?: {
                            denom?: string | undefined;
                            amount?: string | undefined;
                        } | undefined;
                        address?: string | undefined;
                        ethBlockHeight?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                }): _157.AddBridgeEventsRequest;
            };
            AddBridgeEventsResponse: {
                encode(_: _157.AddBridgeEventsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _157.AddBridgeEventsResponse;
                fromPartial(_: {}): _157.AddBridgeEventsResponse;
            };
        };
        const liquidation: {
            LiquidateSubaccountsRequest: {
                encode(message: _158.LiquidateSubaccountsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _158.LiquidateSubaccountsRequest;
                fromPartial(object: {
                    subaccountIds?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    }[] | undefined;
                }): _158.LiquidateSubaccountsRequest;
            };
            LiquidateSubaccountsResponse: {
                encode(_: _158.LiquidateSubaccountsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _158.LiquidateSubaccountsResponse;
                fromPartial(_: {}): _158.LiquidateSubaccountsResponse;
            };
        };
        const pricefeed: {
            UpdateMarketPricesRequest: {
                encode(message: _159.UpdateMarketPricesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _159.UpdateMarketPricesRequest;
                fromPartial(object: {
                    marketPriceUpdates?: {
                        marketId?: number | undefined;
                        exchangePrices?: {
                            exchangeId?: string | undefined;
                            price?: string | number | import("long").Long | undefined;
                            lastUpdateTime?: Date | undefined;
                        }[] | undefined;
                    }[] | undefined;
                }): _159.UpdateMarketPricesRequest;
            };
            UpdateMarketPricesResponse: {
                encode(_: _159.UpdateMarketPricesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _159.UpdateMarketPricesResponse;
                fromPartial(_: {}): _159.UpdateMarketPricesResponse;
            };
            ExchangePrice: {
                encode(message: _159.ExchangePrice, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _159.ExchangePrice;
                fromPartial(object: {
                    exchangeId?: string | undefined;
                    price?: string | number | import("long").Long | undefined;
                    lastUpdateTime?: Date | undefined;
                }): _159.ExchangePrice;
            };
            MarketPriceUpdate: {
                encode(message: _159.MarketPriceUpdate, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _159.MarketPriceUpdate;
                fromPartial(object: {
                    marketId?: number | undefined;
                    exchangePrices?: {
                        exchangeId?: string | undefined;
                        price?: string | number | import("long").Long | undefined;
                        lastUpdateTime?: Date | undefined;
                    }[] | undefined;
                }): _159.MarketPriceUpdate;
            };
        };
    }
    const delaymsg: {
        MsgClientImpl: typeof _328.MsgClientImpl;
        QueryClientImpl: typeof _314.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            nextDelayedMessageId(request?: _163.QueryNextDelayedMessageIdRequest | undefined): Promise<_163.QueryNextDelayedMessageIdResponse>;
            message(request: _163.QueryMessageRequest): Promise<_163.QueryMessageResponse>;
            blockMessageIds(request: _163.QueryBlockMessageIdsRequest): Promise<_163.QueryBlockMessageIdsResponse>;
        };
        LCDQueryClient: typeof _300.LCDQueryClient;
        MsgDelayMessage: {
            encode(message: _164.MsgDelayMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _164.MsgDelayMessage;
            fromPartial(object: {
                authority?: string | undefined;
                msg?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                delayBlocks?: number | undefined;
            }): _164.MsgDelayMessage;
        };
        MsgDelayMessageResponse: {
            encode(message: _164.MsgDelayMessageResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _164.MsgDelayMessageResponse;
            fromPartial(object: {
                id?: string | number | import("long").Long | undefined;
            }): _164.MsgDelayMessageResponse;
        };
        QueryNextDelayedMessageIdRequest: {
            encode(_: _163.QueryNextDelayedMessageIdRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryNextDelayedMessageIdRequest;
            fromPartial(_: {}): _163.QueryNextDelayedMessageIdRequest;
        };
        QueryNextDelayedMessageIdResponse: {
            encode(message: _163.QueryNextDelayedMessageIdResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryNextDelayedMessageIdResponse;
            fromPartial(object: {
                nextDelayedMessageId?: number | undefined;
            }): _163.QueryNextDelayedMessageIdResponse;
        };
        QueryMessageRequest: {
            encode(message: _163.QueryMessageRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryMessageRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _163.QueryMessageRequest;
        };
        QueryMessageResponse: {
            encode(message: _163.QueryMessageResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryMessageResponse;
            fromPartial(object: {
                message?: {
                    id?: number | undefined;
                    msg?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    blockHeight?: number | undefined;
                } | undefined;
            }): _163.QueryMessageResponse;
        };
        QueryBlockMessageIdsRequest: {
            encode(message: _163.QueryBlockMessageIdsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryBlockMessageIdsRequest;
            fromPartial(object: {
                blockHeight?: number | undefined;
            }): _163.QueryBlockMessageIdsRequest;
        };
        QueryBlockMessageIdsResponse: {
            encode(message: _163.QueryBlockMessageIdsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _163.QueryBlockMessageIdsResponse;
            fromPartial(object: {
                messageIds?: number[] | undefined;
            }): _163.QueryBlockMessageIdsResponse;
        };
        GenesisState: {
            encode(message: _162.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _162.GenesisState;
            fromPartial(object: {
                delayedMessages?: {
                    id?: number | undefined;
                    msg?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    blockHeight?: number | undefined;
                }[] | undefined;
                nextDelayedMessageId?: number | undefined;
            }): _162.GenesisState;
        };
        DelayedMessage: {
            encode(message: _161.DelayedMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _161.DelayedMessage;
            fromPartial(object: {
                id?: number | undefined;
                msg?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                blockHeight?: number | undefined;
            }): _161.DelayedMessage;
        };
        BlockMessageIds: {
            encode(message: _160.BlockMessageIds, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _160.BlockMessageIds;
            fromPartial(object: {
                ids?: number[] | undefined;
            }): _160.BlockMessageIds;
        };
    };
    const epochs: {
        QueryClientImpl: typeof _315.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            epochInfo(request: _167.QueryGetEpochInfoRequest): Promise<_167.QueryEpochInfoResponse>;
            epochInfoAll(request?: _167.QueryAllEpochInfoRequest | undefined): Promise<_167.QueryEpochInfoAllResponse>;
        };
        LCDQueryClient: typeof _301.LCDQueryClient;
        QueryGetEpochInfoRequest: {
            encode(message: _167.QueryGetEpochInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _167.QueryGetEpochInfoRequest;
            fromPartial(object: {
                name?: string | undefined;
            }): _167.QueryGetEpochInfoRequest;
        };
        QueryEpochInfoResponse: {
            encode(message: _167.QueryEpochInfoResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _167.QueryEpochInfoResponse;
            fromPartial(object: {
                epochInfo?: {
                    name?: string | undefined;
                    nextTick?: number | undefined;
                    duration?: number | undefined;
                    currentEpoch?: number | undefined;
                    currentEpochStartBlock?: number | undefined;
                    isInitialized?: boolean | undefined;
                    fastForwardNextTick?: boolean | undefined;
                } | undefined;
            }): _167.QueryEpochInfoResponse;
        };
        QueryAllEpochInfoRequest: {
            encode(message: _167.QueryAllEpochInfoRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _167.QueryAllEpochInfoRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _167.QueryAllEpochInfoRequest;
        };
        QueryEpochInfoAllResponse: {
            encode(message: _167.QueryEpochInfoAllResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _167.QueryEpochInfoAllResponse;
            fromPartial(object: {
                epochInfo?: {
                    name?: string | undefined;
                    nextTick?: number | undefined;
                    duration?: number | undefined;
                    currentEpoch?: number | undefined;
                    currentEpochStartBlock?: number | undefined;
                    isInitialized?: boolean | undefined;
                    fastForwardNextTick?: boolean | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _167.QueryEpochInfoAllResponse;
        };
        GenesisState: {
            encode(message: _166.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _166.GenesisState;
            fromPartial(object: {
                epochInfoList?: {
                    name?: string | undefined;
                    nextTick?: number | undefined;
                    duration?: number | undefined;
                    currentEpoch?: number | undefined;
                    currentEpochStartBlock?: number | undefined;
                    isInitialized?: boolean | undefined;
                    fastForwardNextTick?: boolean | undefined;
                }[] | undefined;
            }): _166.GenesisState;
        };
        EpochInfo: {
            encode(message: _165.EpochInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _165.EpochInfo;
            fromPartial(object: {
                name?: string | undefined;
                nextTick?: number | undefined;
                duration?: number | undefined;
                currentEpoch?: number | undefined;
                currentEpochStartBlock?: number | undefined;
                isInitialized?: boolean | undefined;
                fastForwardNextTick?: boolean | undefined;
            }): _165.EpochInfo;
        };
    };
    const feetiers: {
        MsgClientImpl: typeof _329.MsgClientImpl;
        QueryClientImpl: typeof _316.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            perpetualFeeParams(request?: _170.QueryPerpetualFeeParamsRequest | undefined): Promise<_170.QueryPerpetualFeeParamsResponse>;
            userFeeTier(request: _170.QueryUserFeeTierRequest): Promise<_170.QueryUserFeeTierResponse>;
        };
        LCDQueryClient: typeof _302.LCDQueryClient;
        MsgUpdatePerpetualFeeParams: {
            encode(message: _171.MsgUpdatePerpetualFeeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _171.MsgUpdatePerpetualFeeParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    tiers?: {
                        name?: string | undefined;
                        absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                        totalVolumeShareRequirementPpm?: number | undefined;
                        makerVolumeShareRequirementPpm?: number | undefined;
                        makerFeePpm?: number | undefined;
                        takerFeePpm?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _171.MsgUpdatePerpetualFeeParams;
        };
        MsgUpdatePerpetualFeeParamsResponse: {
            encode(_: _171.MsgUpdatePerpetualFeeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _171.MsgUpdatePerpetualFeeParamsResponse;
            fromPartial(_: {}): _171.MsgUpdatePerpetualFeeParamsResponse;
        };
        QueryPerpetualFeeParamsRequest: {
            encode(_: _170.QueryPerpetualFeeParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _170.QueryPerpetualFeeParamsRequest;
            fromPartial(_: {}): _170.QueryPerpetualFeeParamsRequest;
        };
        QueryPerpetualFeeParamsResponse: {
            encode(message: _170.QueryPerpetualFeeParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _170.QueryPerpetualFeeParamsResponse;
            fromPartial(object: {
                params?: {
                    tiers?: {
                        name?: string | undefined;
                        absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                        totalVolumeShareRequirementPpm?: number | undefined;
                        makerVolumeShareRequirementPpm?: number | undefined;
                        makerFeePpm?: number | undefined;
                        takerFeePpm?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _170.QueryPerpetualFeeParamsResponse;
        };
        QueryUserFeeTierRequest: {
            encode(message: _170.QueryUserFeeTierRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _170.QueryUserFeeTierRequest;
            fromPartial(object: {
                user?: string | undefined;
            }): _170.QueryUserFeeTierRequest;
        };
        QueryUserFeeTierResponse: {
            encode(message: _170.QueryUserFeeTierResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _170.QueryUserFeeTierResponse;
            fromPartial(object: {
                index?: number | undefined;
                tier?: {
                    name?: string | undefined;
                    absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                    totalVolumeShareRequirementPpm?: number | undefined;
                    makerVolumeShareRequirementPpm?: number | undefined;
                    makerFeePpm?: number | undefined;
                    takerFeePpm?: number | undefined;
                } | undefined;
            }): _170.QueryUserFeeTierResponse;
        };
        PerpetualFeeParams: {
            encode(message: _169.PerpetualFeeParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _169.PerpetualFeeParams;
            fromPartial(object: {
                tiers?: {
                    name?: string | undefined;
                    absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                    totalVolumeShareRequirementPpm?: number | undefined;
                    makerVolumeShareRequirementPpm?: number | undefined;
                    makerFeePpm?: number | undefined;
                    takerFeePpm?: number | undefined;
                }[] | undefined;
            }): _169.PerpetualFeeParams;
        };
        PerpetualFeeTier: {
            encode(message: _169.PerpetualFeeTier, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _169.PerpetualFeeTier;
            fromPartial(object: {
                name?: string | undefined;
                absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                totalVolumeShareRequirementPpm?: number | undefined;
                makerVolumeShareRequirementPpm?: number | undefined;
                makerFeePpm?: number | undefined;
                takerFeePpm?: number | undefined;
            }): _169.PerpetualFeeTier;
        };
        GenesisState: {
            encode(message: _168.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _168.GenesisState;
            fromPartial(object: {
                params?: {
                    tiers?: {
                        name?: string | undefined;
                        absoluteVolumeRequirement?: string | number | import("long").Long | undefined;
                        totalVolumeShareRequirementPpm?: number | undefined;
                        makerVolumeShareRequirementPpm?: number | undefined;
                        makerFeePpm?: number | undefined;
                        takerFeePpm?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _168.GenesisState;
        };
    };
    namespace indexer {
        const events: {
            fundingEventV1_TypeFromJSON(object: any): _172.FundingEventV1_Type;
            fundingEventV1_TypeToJSON(object: _172.FundingEventV1_Type): string;
            FundingEventV1_Type: typeof _172.FundingEventV1_Type;
            FundingEventV1_TypeSDKType: typeof _172.FundingEventV1_Type;
            FundingUpdateV1: {
                encode(message: _172.FundingUpdateV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.FundingUpdateV1;
                fromPartial(object: {
                    perpetualId?: number | undefined;
                    fundingValuePpm?: number | undefined;
                    fundingIndex?: Uint8Array | undefined;
                }): _172.FundingUpdateV1;
            };
            FundingEventV1: {
                encode(message: _172.FundingEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.FundingEventV1;
                fromPartial(object: {
                    updates?: {
                        perpetualId?: number | undefined;
                        fundingValuePpm?: number | undefined;
                        fundingIndex?: Uint8Array | undefined;
                    }[] | undefined;
                    type?: _172.FundingEventV1_Type | undefined;
                }): _172.FundingEventV1;
            };
            MarketEventV1: {
                encode(message: _172.MarketEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.MarketEventV1;
                fromPartial(object: {
                    marketId?: number | undefined;
                    priceUpdate?: {
                        priceWithExponent?: string | number | import("long").Long | undefined;
                    } | undefined;
                    marketCreate?: {
                        base?: {
                            pair?: string | undefined;
                            minPriceChangePpm?: number | undefined;
                        } | undefined;
                        exponent?: number | undefined;
                    } | undefined;
                    marketModify?: {
                        base?: {
                            pair?: string | undefined;
                            minPriceChangePpm?: number | undefined;
                        } | undefined;
                    } | undefined;
                }): _172.MarketEventV1;
            };
            MarketPriceUpdateEventV1: {
                encode(message: _172.MarketPriceUpdateEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.MarketPriceUpdateEventV1;
                fromPartial(object: {
                    priceWithExponent?: string | number | import("long").Long | undefined;
                }): _172.MarketPriceUpdateEventV1;
            };
            MarketBaseEventV1: {
                encode(message: _172.MarketBaseEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.MarketBaseEventV1;
                fromPartial(object: {
                    pair?: string | undefined;
                    minPriceChangePpm?: number | undefined;
                }): _172.MarketBaseEventV1;
            };
            MarketCreateEventV1: {
                encode(message: _172.MarketCreateEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.MarketCreateEventV1;
                fromPartial(object: {
                    base?: {
                        pair?: string | undefined;
                        minPriceChangePpm?: number | undefined;
                    } | undefined;
                    exponent?: number | undefined;
                }): _172.MarketCreateEventV1;
            };
            MarketModifyEventV1: {
                encode(message: _172.MarketModifyEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.MarketModifyEventV1;
                fromPartial(object: {
                    base?: {
                        pair?: string | undefined;
                        minPriceChangePpm?: number | undefined;
                    } | undefined;
                }): _172.MarketModifyEventV1;
            };
            SourceOfFunds: {
                encode(message: _172.SourceOfFunds, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.SourceOfFunds;
                fromPartial(object: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    address?: string | undefined;
                }): _172.SourceOfFunds;
            };
            TransferEventV1: {
                encode(message: _172.TransferEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.TransferEventV1;
                fromPartial(object: {
                    senderSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    recipientSubaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    assetId?: number | undefined;
                    amount?: string | number | import("long").Long | undefined;
                    sender?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        address?: string | undefined;
                    } | undefined;
                    recipient?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        address?: string | undefined;
                    } | undefined;
                }): _172.TransferEventV1;
            };
            OrderFillEventV1: {
                encode(message: _172.OrderFillEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.OrderFillEventV1;
                fromPartial(object: {
                    makerOrder?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                    liquidationOrder?: {
                        liquidated?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clobPairId?: number | undefined;
                        perpetualId?: number | undefined;
                        totalSize?: string | number | import("long").Long | undefined;
                        isBuy?: boolean | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                    fillAmount?: string | number | import("long").Long | undefined;
                    makerFee?: string | number | import("long").Long | undefined;
                    takerFee?: string | number | import("long").Long | undefined;
                    totalFilledMaker?: string | number | import("long").Long | undefined;
                    totalFilledTaker?: string | number | import("long").Long | undefined;
                }): _172.OrderFillEventV1;
            };
            DeleveragingEventV1: {
                encode(message: _172.DeleveragingEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.DeleveragingEventV1;
                fromPartial(object: {
                    liquidated?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    offsetting?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    perpetualId?: number | undefined;
                    fillAmount?: string | number | import("long").Long | undefined;
                    price?: string | number | import("long").Long | undefined;
                    isBuy?: boolean | undefined;
                    isFinalSettlement?: boolean | undefined;
                }): _172.DeleveragingEventV1;
            };
            LiquidationOrderV1: {
                encode(message: _172.LiquidationOrderV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.LiquidationOrderV1;
                fromPartial(object: {
                    liquidated?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    clobPairId?: number | undefined;
                    perpetualId?: number | undefined;
                    totalSize?: string | number | import("long").Long | undefined;
                    isBuy?: boolean | undefined;
                    subticks?: string | number | import("long").Long | undefined;
                }): _172.LiquidationOrderV1;
            };
            SubaccountUpdateEventV1: {
                encode(message: _172.SubaccountUpdateEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.SubaccountUpdateEventV1;
                fromPartial(object: {
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    updatedPerpetualPositions?: {
                        perpetualId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        fundingIndex?: Uint8Array | undefined;
                        fundingPayment?: Uint8Array | undefined;
                    }[] | undefined;
                    updatedAssetPositions?: {
                        assetId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        index?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                }): _172.SubaccountUpdateEventV1;
            };
            StatefulOrderEventV1: {
                encode(message: _172.StatefulOrderEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1;
                fromPartial(object: {
                    orderPlace?: {
                        order?: {
                            orderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                            side?: _175.IndexerOrder_Side | undefined;
                            quantums?: string | number | import("long").Long | undefined;
                            subticks?: string | number | import("long").Long | undefined;
                            goodTilBlock?: number | undefined;
                            goodTilBlockTime?: number | undefined;
                            timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                            reduceOnly?: boolean | undefined;
                            clientMetadata?: number | undefined;
                            conditionType?: _175.IndexerOrder_ConditionType | undefined;
                            conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                        } | undefined;
                    } | undefined;
                    orderRemoval?: {
                        removedOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        reason?: _178.OrderRemovalReason | undefined;
                    } | undefined;
                    conditionalOrderPlacement?: {
                        order?: {
                            orderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                            side?: _175.IndexerOrder_Side | undefined;
                            quantums?: string | number | import("long").Long | undefined;
                            subticks?: string | number | import("long").Long | undefined;
                            goodTilBlock?: number | undefined;
                            goodTilBlockTime?: number | undefined;
                            timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                            reduceOnly?: boolean | undefined;
                            clientMetadata?: number | undefined;
                            conditionType?: _175.IndexerOrder_ConditionType | undefined;
                            conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                        } | undefined;
                    } | undefined;
                    conditionalOrderTriggered?: {
                        triggeredOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                    } | undefined;
                    longTermOrderPlacement?: {
                        order?: {
                            orderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                            side?: _175.IndexerOrder_Side | undefined;
                            quantums?: string | number | import("long").Long | undefined;
                            subticks?: string | number | import("long").Long | undefined;
                            goodTilBlock?: number | undefined;
                            goodTilBlockTime?: number | undefined;
                            timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                            reduceOnly?: boolean | undefined;
                            clientMetadata?: number | undefined;
                            conditionType?: _175.IndexerOrder_ConditionType | undefined;
                            conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                        } | undefined;
                    } | undefined;
                }): _172.StatefulOrderEventV1;
            };
            StatefulOrderEventV1_StatefulOrderPlacementV1: {
                encode(message: _172.StatefulOrderEventV1_StatefulOrderPlacementV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1_StatefulOrderPlacementV1;
                fromPartial(object: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                }): _172.StatefulOrderEventV1_StatefulOrderPlacementV1;
            };
            StatefulOrderEventV1_StatefulOrderRemovalV1: {
                encode(message: _172.StatefulOrderEventV1_StatefulOrderRemovalV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1_StatefulOrderRemovalV1;
                fromPartial(object: {
                    removedOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    reason?: _178.OrderRemovalReason | undefined;
                }): _172.StatefulOrderEventV1_StatefulOrderRemovalV1;
            };
            StatefulOrderEventV1_ConditionalOrderPlacementV1: {
                encode(message: _172.StatefulOrderEventV1_ConditionalOrderPlacementV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1_ConditionalOrderPlacementV1;
                fromPartial(object: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                }): _172.StatefulOrderEventV1_ConditionalOrderPlacementV1;
            };
            StatefulOrderEventV1_ConditionalOrderTriggeredV1: {
                encode(message: _172.StatefulOrderEventV1_ConditionalOrderTriggeredV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1_ConditionalOrderTriggeredV1;
                fromPartial(object: {
                    triggeredOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                }): _172.StatefulOrderEventV1_ConditionalOrderTriggeredV1;
            };
            StatefulOrderEventV1_LongTermOrderPlacementV1: {
                encode(message: _172.StatefulOrderEventV1_LongTermOrderPlacementV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.StatefulOrderEventV1_LongTermOrderPlacementV1;
                fromPartial(object: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                }): _172.StatefulOrderEventV1_LongTermOrderPlacementV1;
            };
            AssetCreateEventV1: {
                encode(message: _172.AssetCreateEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.AssetCreateEventV1;
                fromPartial(object: {
                    id?: number | undefined;
                    symbol?: string | undefined;
                    hasMarket?: boolean | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                }): _172.AssetCreateEventV1;
            };
            PerpetualMarketCreateEventV1: {
                encode(message: _172.PerpetualMarketCreateEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.PerpetualMarketCreateEventV1;
                fromPartial(object: {
                    id?: number | undefined;
                    clobPairId?: number | undefined;
                    ticker?: string | undefined;
                    marketId?: number | undefined;
                    status?: _175.ClobPairStatus | undefined;
                    quantumConversionExponent?: number | undefined;
                    atomicResolution?: number | undefined;
                    subticksPerTick?: number | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                    liquidityTier?: number | undefined;
                }): _172.PerpetualMarketCreateEventV1;
            };
            LiquidityTierUpsertEventV1: {
                encode(message: _172.LiquidityTierUpsertEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.LiquidityTierUpsertEventV1;
                fromPartial(object: {
                    id?: number | undefined;
                    name?: string | undefined;
                    initialMarginPpm?: number | undefined;
                    maintenanceFractionPpm?: number | undefined;
                    basePositionNotional?: string | number | import("long").Long | undefined;
                }): _172.LiquidityTierUpsertEventV1;
            };
            UpdateClobPairEventV1: {
                encode(message: _172.UpdateClobPairEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.UpdateClobPairEventV1;
                fromPartial(object: {
                    clobPairId?: number | undefined;
                    status?: _175.ClobPairStatus | undefined;
                    quantumConversionExponent?: number | undefined;
                    subticksPerTick?: number | undefined;
                    stepBaseQuantums?: string | number | import("long").Long | undefined;
                }): _172.UpdateClobPairEventV1;
            };
            UpdatePerpetualEventV1: {
                encode(message: _172.UpdatePerpetualEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.UpdatePerpetualEventV1;
                fromPartial(object: {
                    id?: number | undefined;
                    ticker?: string | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                    liquidityTier?: number | undefined;
                }): _172.UpdatePerpetualEventV1;
            };
            TradingRewardsEventV1: {
                encode(message: _172.TradingRewardsEventV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.TradingRewardsEventV1;
                fromPartial(object: {
                    tradingRewards?: {
                        owner?: string | undefined;
                        denomAmount?: Uint8Array | undefined;
                    }[] | undefined;
                }): _172.TradingRewardsEventV1;
            };
            AddressTradingReward: {
                encode(message: _172.AddressTradingReward, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _172.AddressTradingReward;
                fromPartial(object: {
                    owner?: string | undefined;
                    denomAmount?: Uint8Array | undefined;
                }): _172.AddressTradingReward;
            };
        };
        const indexer_manager: {
            indexerTendermintEvent_BlockEventFromJSON(object: any): _173.IndexerTendermintEvent_BlockEvent;
            indexerTendermintEvent_BlockEventToJSON(object: _173.IndexerTendermintEvent_BlockEvent): string;
            IndexerTendermintEvent_BlockEvent: typeof _173.IndexerTendermintEvent_BlockEvent;
            IndexerTendermintEvent_BlockEventSDKType: typeof _173.IndexerTendermintEvent_BlockEvent;
            IndexerTendermintEventWrapper: {
                encode(message: _173.IndexerTendermintEventWrapper, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _173.IndexerTendermintEventWrapper;
                fromPartial(object: {
                    event?: {
                        subtype?: string | undefined;
                        transactionIndex?: number | undefined;
                        blockEvent?: _173.IndexerTendermintEvent_BlockEvent | undefined;
                        eventIndex?: number | undefined;
                        version?: number | undefined;
                        dataBytes?: Uint8Array | undefined;
                    } | undefined;
                    txnHash?: string | undefined;
                }): _173.IndexerTendermintEventWrapper;
            };
            IndexerEventsStoreValue: {
                encode(message: _173.IndexerEventsStoreValue, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _173.IndexerEventsStoreValue;
                fromPartial(object: {
                    events?: {
                        event?: {
                            subtype?: string | undefined;
                            transactionIndex?: number | undefined;
                            blockEvent?: _173.IndexerTendermintEvent_BlockEvent | undefined;
                            eventIndex?: number | undefined;
                            version?: number | undefined;
                            dataBytes?: Uint8Array | undefined;
                        } | undefined;
                        txnHash?: string | undefined;
                    }[] | undefined;
                }): _173.IndexerEventsStoreValue;
            };
            IndexerTendermintEvent: {
                encode(message: _173.IndexerTendermintEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _173.IndexerTendermintEvent;
                fromPartial(object: {
                    subtype?: string | undefined;
                    transactionIndex?: number | undefined;
                    blockEvent?: _173.IndexerTendermintEvent_BlockEvent | undefined;
                    eventIndex?: number | undefined;
                    version?: number | undefined;
                    dataBytes?: Uint8Array | undefined;
                }): _173.IndexerTendermintEvent;
            };
            IndexerTendermintBlock: {
                encode(message: _173.IndexerTendermintBlock, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _173.IndexerTendermintBlock;
                fromPartial(object: {
                    height?: number | undefined;
                    time?: Date | undefined;
                    events?: {
                        subtype?: string | undefined;
                        transactionIndex?: number | undefined;
                        blockEvent?: _173.IndexerTendermintEvent_BlockEvent | undefined;
                        eventIndex?: number | undefined;
                        version?: number | undefined;
                        dataBytes?: Uint8Array | undefined;
                    }[] | undefined;
                    txHashes?: string[] | undefined;
                }): _173.IndexerTendermintBlock;
            };
        };
        const off_chain_updates: {
            orderPlaceV1_OrderPlacementStatusFromJSON(object: any): _174.OrderPlaceV1_OrderPlacementStatus;
            orderPlaceV1_OrderPlacementStatusToJSON(object: _174.OrderPlaceV1_OrderPlacementStatus): string;
            orderRemoveV1_OrderRemovalStatusFromJSON(object: any): _174.OrderRemoveV1_OrderRemovalStatus;
            orderRemoveV1_OrderRemovalStatusToJSON(object: _174.OrderRemoveV1_OrderRemovalStatus): string;
            OrderPlaceV1_OrderPlacementStatus: typeof _174.OrderPlaceV1_OrderPlacementStatus;
            OrderPlaceV1_OrderPlacementStatusSDKType: typeof _174.OrderPlaceV1_OrderPlacementStatus;
            OrderRemoveV1_OrderRemovalStatus: typeof _174.OrderRemoveV1_OrderRemovalStatus;
            OrderRemoveV1_OrderRemovalStatusSDKType: typeof _174.OrderRemoveV1_OrderRemovalStatus;
            OrderPlaceV1: {
                encode(message: _174.OrderPlaceV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _174.OrderPlaceV1;
                fromPartial(object: {
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                    placementStatus?: _174.OrderPlaceV1_OrderPlacementStatus | undefined;
                }): _174.OrderPlaceV1;
            };
            OrderRemoveV1: {
                encode(message: _174.OrderRemoveV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _174.OrderRemoveV1;
                fromPartial(object: {
                    removedOrderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    reason?: _178.OrderRemovalReason | undefined;
                    removalStatus?: _174.OrderRemoveV1_OrderRemovalStatus | undefined;
                }): _174.OrderRemoveV1;
            };
            OrderUpdateV1: {
                encode(message: _174.OrderUpdateV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _174.OrderUpdateV1;
                fromPartial(object: {
                    orderId?: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    } | undefined;
                    totalFilledQuantums?: string | number | import("long").Long | undefined;
                }): _174.OrderUpdateV1;
            };
            OffChainUpdateV1: {
                encode(message: _174.OffChainUpdateV1, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _174.OffChainUpdateV1;
                fromPartial(object: {
                    orderPlace?: {
                        order?: {
                            orderId?: {
                                subaccountId?: {
                                    owner?: string | undefined;
                                    number?: number | undefined;
                                } | undefined;
                                clientId?: number | undefined;
                                orderFlags?: number | undefined;
                                clobPairId?: number | undefined;
                            } | undefined;
                            side?: _175.IndexerOrder_Side | undefined;
                            quantums?: string | number | import("long").Long | undefined;
                            subticks?: string | number | import("long").Long | undefined;
                            goodTilBlock?: number | undefined;
                            goodTilBlockTime?: number | undefined;
                            timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                            reduceOnly?: boolean | undefined;
                            clientMetadata?: number | undefined;
                            conditionType?: _175.IndexerOrder_ConditionType | undefined;
                            conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                        } | undefined;
                        placementStatus?: _174.OrderPlaceV1_OrderPlacementStatus | undefined;
                    } | undefined;
                    orderRemove?: {
                        removedOrderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        reason?: _178.OrderRemovalReason | undefined;
                        removalStatus?: _174.OrderRemoveV1_OrderRemovalStatus | undefined;
                    } | undefined;
                    orderUpdate?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        totalFilledQuantums?: string | number | import("long").Long | undefined;
                    } | undefined;
                }): _174.OffChainUpdateV1;
            };
        };
        namespace protocol {
            const v1: {
                IndexerSubaccountId: {
                    encode(message: _176.IndexerSubaccountId, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _176.IndexerSubaccountId;
                    fromPartial(object: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    }): _176.IndexerSubaccountId;
                };
                IndexerPerpetualPosition: {
                    encode(message: _176.IndexerPerpetualPosition, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _176.IndexerPerpetualPosition;
                    fromPartial(object: {
                        perpetualId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        fundingIndex?: Uint8Array | undefined;
                        fundingPayment?: Uint8Array | undefined;
                    }): _176.IndexerPerpetualPosition;
                };
                IndexerAssetPosition: {
                    encode(message: _176.IndexerAssetPosition, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _176.IndexerAssetPosition;
                    fromPartial(object: {
                        assetId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        index?: string | number | import("long").Long | undefined;
                    }): _176.IndexerAssetPosition;
                };
                indexerOrder_SideFromJSON(object: any): _175.IndexerOrder_Side;
                indexerOrder_SideToJSON(object: _175.IndexerOrder_Side): string;
                indexerOrder_TimeInForceFromJSON(object: any): _175.IndexerOrder_TimeInForce;
                indexerOrder_TimeInForceToJSON(object: _175.IndexerOrder_TimeInForce): string;
                indexerOrder_ConditionTypeFromJSON(object: any): _175.IndexerOrder_ConditionType;
                indexerOrder_ConditionTypeToJSON(object: _175.IndexerOrder_ConditionType): string;
                clobPairStatusFromJSON(object: any): _175.ClobPairStatus;
                clobPairStatusToJSON(object: _175.ClobPairStatus): string;
                IndexerOrder_Side: typeof _175.IndexerOrder_Side;
                IndexerOrder_SideSDKType: typeof _175.IndexerOrder_Side;
                IndexerOrder_TimeInForce: typeof _175.IndexerOrder_TimeInForce;
                IndexerOrder_TimeInForceSDKType: typeof _175.IndexerOrder_TimeInForce;
                IndexerOrder_ConditionType: typeof _175.IndexerOrder_ConditionType;
                IndexerOrder_ConditionTypeSDKType: typeof _175.IndexerOrder_ConditionType;
                ClobPairStatus: typeof _175.ClobPairStatus;
                ClobPairStatusSDKType: typeof _175.ClobPairStatus;
                IndexerOrderId: {
                    encode(message: _175.IndexerOrderId, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _175.IndexerOrderId;
                    fromPartial(object: {
                        subaccountId?: {
                            owner?: string | undefined;
                            number?: number | undefined;
                        } | undefined;
                        clientId?: number | undefined;
                        orderFlags?: number | undefined;
                        clobPairId?: number | undefined;
                    }): _175.IndexerOrderId;
                };
                IndexerOrder: {
                    encode(message: _175.IndexerOrder, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _175.IndexerOrder;
                    fromPartial(object: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    }): _175.IndexerOrder;
                };
            };
        }
        const redis: {
            redisOrder_TickerTypeFromJSON(object: any): _177.RedisOrder_TickerType;
            redisOrder_TickerTypeToJSON(object: _177.RedisOrder_TickerType): string;
            RedisOrder_TickerType: typeof _177.RedisOrder_TickerType;
            RedisOrder_TickerTypeSDKType: typeof _177.RedisOrder_TickerType;
            RedisOrder: {
                encode(message: _177.RedisOrder, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _177.RedisOrder;
                fromPartial(object: {
                    id?: string | undefined;
                    order?: {
                        orderId?: {
                            subaccountId?: {
                                owner?: string | undefined;
                                number?: number | undefined;
                            } | undefined;
                            clientId?: number | undefined;
                            orderFlags?: number | undefined;
                            clobPairId?: number | undefined;
                        } | undefined;
                        side?: _175.IndexerOrder_Side | undefined;
                        quantums?: string | number | import("long").Long | undefined;
                        subticks?: string | number | import("long").Long | undefined;
                        goodTilBlock?: number | undefined;
                        goodTilBlockTime?: number | undefined;
                        timeInForce?: _175.IndexerOrder_TimeInForce | undefined;
                        reduceOnly?: boolean | undefined;
                        clientMetadata?: number | undefined;
                        conditionType?: _175.IndexerOrder_ConditionType | undefined;
                        conditionalOrderTriggerSubticks?: string | number | import("long").Long | undefined;
                    } | undefined;
                    ticker?: string | undefined;
                    tickerType?: _177.RedisOrder_TickerType | undefined;
                    price?: string | undefined;
                    size?: string | undefined;
                }): _177.RedisOrder;
            };
        };
        const shared: {
            orderRemovalReasonFromJSON(object: any): _178.OrderRemovalReason;
            orderRemovalReasonToJSON(object: _178.OrderRemovalReason): string;
            OrderRemovalReason: typeof _178.OrderRemovalReason;
            OrderRemovalReasonSDKType: typeof _178.OrderRemovalReason;
        };
        const socks: {
            candleMessage_ResolutionFromJSON(object: any): _179.CandleMessage_Resolution;
            candleMessage_ResolutionToJSON(object: _179.CandleMessage_Resolution): string;
            CandleMessage_Resolution: typeof _179.CandleMessage_Resolution;
            CandleMessage_ResolutionSDKType: typeof _179.CandleMessage_Resolution;
            OrderbookMessage: {
                encode(message: _179.OrderbookMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _179.OrderbookMessage;
                fromPartial(object: {
                    contents?: string | undefined;
                    clobPairId?: string | undefined;
                    version?: string | undefined;
                }): _179.OrderbookMessage;
            };
            SubaccountMessage: {
                encode(message: _179.SubaccountMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _179.SubaccountMessage;
                fromPartial(object: {
                    blockHeight?: string | undefined;
                    transactionIndex?: number | undefined;
                    eventIndex?: number | undefined;
                    contents?: string | undefined;
                    subaccountId?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    version?: string | undefined;
                }): _179.SubaccountMessage;
            };
            TradeMessage: {
                encode(message: _179.TradeMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _179.TradeMessage;
                fromPartial(object: {
                    blockHeight?: string | undefined;
                    contents?: string | undefined;
                    clobPairId?: string | undefined;
                    version?: string | undefined;
                }): _179.TradeMessage;
            };
            MarketMessage: {
                encode(message: _179.MarketMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _179.MarketMessage;
                fromPartial(object: {
                    contents?: string | undefined;
                    version?: string | undefined;
                }): _179.MarketMessage;
            };
            CandleMessage: {
                encode(message: _179.CandleMessage, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _179.CandleMessage;
                fromPartial(object: {
                    contents?: string | undefined;
                    clobPairId?: string | undefined;
                    resolution?: _179.CandleMessage_Resolution | undefined;
                    version?: string | undefined;
                }): _179.CandleMessage;
            };
        };
    }
    const perpetuals: {
        MsgClientImpl: typeof _330.MsgClientImpl;
        QueryClientImpl: typeof _317.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            perpetual(request: _183.QueryPerpetualRequest): Promise<_183.QueryPerpetualResponse>;
            allPerpetuals(request?: _183.QueryAllPerpetualsRequest | undefined): Promise<_183.QueryAllPerpetualsResponse>;
            allLiquidityTiers(request?: _183.QueryAllLiquidityTiersRequest | undefined): Promise<_183.QueryAllLiquidityTiersResponse>;
            premiumVotes(request?: _183.QueryPremiumVotesRequest | undefined): Promise<_183.QueryPremiumVotesResponse>;
            premiumSamples(request?: _183.QueryPremiumSamplesRequest | undefined): Promise<_183.QueryPremiumSamplesResponse>;
            params(request?: _183.QueryParamsRequest | undefined): Promise<_183.QueryParamsResponse>;
        };
        LCDQueryClient: typeof _303.LCDQueryClient;
        MsgCreatePerpetual: {
            encode(message: _184.MsgCreatePerpetual, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgCreatePerpetual;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    id?: number | undefined;
                    ticker?: string | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                    defaultFundingPpm?: number | undefined;
                    liquidityTier?: number | undefined;
                } | undefined;
            }): _184.MsgCreatePerpetual;
        };
        MsgCreatePerpetualResponse: {
            encode(_: _184.MsgCreatePerpetualResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgCreatePerpetualResponse;
            fromPartial(_: {}): _184.MsgCreatePerpetualResponse;
        };
        MsgSetLiquidityTier: {
            encode(message: _184.MsgSetLiquidityTier, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgSetLiquidityTier;
            fromPartial(object: {
                authority?: string | undefined;
                liquidityTier?: {
                    id?: number | undefined;
                    name?: string | undefined;
                    initialMarginPpm?: number | undefined;
                    maintenanceFractionPpm?: number | undefined;
                    basePositionNotional?: string | number | import("long").Long | undefined;
                    impactNotional?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _184.MsgSetLiquidityTier;
        };
        MsgSetLiquidityTierResponse: {
            encode(_: _184.MsgSetLiquidityTierResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgSetLiquidityTierResponse;
            fromPartial(_: {}): _184.MsgSetLiquidityTierResponse;
        };
        MsgUpdatePerpetualParams: {
            encode(message: _184.MsgUpdatePerpetualParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgUpdatePerpetualParams;
            fromPartial(object: {
                authority?: string | undefined;
                perpetualParams?: {
                    id?: number | undefined;
                    ticker?: string | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                    defaultFundingPpm?: number | undefined;
                    liquidityTier?: number | undefined;
                } | undefined;
            }): _184.MsgUpdatePerpetualParams;
        };
        MsgUpdatePerpetualParamsResponse: {
            encode(_: _184.MsgUpdatePerpetualParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgUpdatePerpetualParamsResponse;
            fromPartial(_: {}): _184.MsgUpdatePerpetualParamsResponse;
        };
        FundingPremium: {
            encode(message: _184.FundingPremium, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.FundingPremium;
            fromPartial(object: {
                perpetualId?: number | undefined;
                premiumPpm?: number | undefined;
            }): _184.FundingPremium;
        };
        MsgAddPremiumVotes: {
            encode(message: _184.MsgAddPremiumVotes, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgAddPremiumVotes;
            fromPartial(object: {
                votes?: {
                    perpetualId?: number | undefined;
                    premiumPpm?: number | undefined;
                }[] | undefined;
            }): _184.MsgAddPremiumVotes;
        };
        MsgAddPremiumVotesResponse: {
            encode(_: _184.MsgAddPremiumVotesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgAddPremiumVotesResponse;
            fromPartial(_: {}): _184.MsgAddPremiumVotesResponse;
        };
        MsgUpdateParams: {
            encode(message: _184.MsgUpdateParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgUpdateParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    fundingRateClampFactorPpm?: number | undefined;
                    premiumVoteClampFactorPpm?: number | undefined;
                    minNumVotesPerSample?: number | undefined;
                } | undefined;
            }): _184.MsgUpdateParams;
        };
        MsgUpdateParamsResponse: {
            encode(_: _184.MsgUpdateParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _184.MsgUpdateParamsResponse;
            fromPartial(_: {}): _184.MsgUpdateParamsResponse;
        };
        QueryPerpetualRequest: {
            encode(message: _183.QueryPerpetualRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPerpetualRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _183.QueryPerpetualRequest;
        };
        QueryPerpetualResponse: {
            encode(message: _183.QueryPerpetualResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPerpetualResponse;
            fromPartial(object: {
                perpetual?: {
                    params?: {
                        id?: number | undefined;
                        ticker?: string | undefined;
                        marketId?: number | undefined;
                        atomicResolution?: number | undefined;
                        defaultFundingPpm?: number | undefined;
                        liquidityTier?: number | undefined;
                    } | undefined;
                    fundingIndex?: Uint8Array | undefined;
                } | undefined;
            }): _183.QueryPerpetualResponse;
        };
        QueryAllPerpetualsRequest: {
            encode(message: _183.QueryAllPerpetualsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryAllPerpetualsRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _183.QueryAllPerpetualsRequest;
        };
        QueryAllPerpetualsResponse: {
            encode(message: _183.QueryAllPerpetualsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryAllPerpetualsResponse;
            fromPartial(object: {
                perpetual?: {
                    params?: {
                        id?: number | undefined;
                        ticker?: string | undefined;
                        marketId?: number | undefined;
                        atomicResolution?: number | undefined;
                        defaultFundingPpm?: number | undefined;
                        liquidityTier?: number | undefined;
                    } | undefined;
                    fundingIndex?: Uint8Array | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _183.QueryAllPerpetualsResponse;
        };
        QueryAllLiquidityTiersRequest: {
            encode(message: _183.QueryAllLiquidityTiersRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryAllLiquidityTiersRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _183.QueryAllLiquidityTiersRequest;
        };
        QueryAllLiquidityTiersResponse: {
            encode(message: _183.QueryAllLiquidityTiersResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryAllLiquidityTiersResponse;
            fromPartial(object: {
                liquidityTiers?: {
                    id?: number | undefined;
                    name?: string | undefined;
                    initialMarginPpm?: number | undefined;
                    maintenanceFractionPpm?: number | undefined;
                    basePositionNotional?: string | number | import("long").Long | undefined;
                    impactNotional?: string | number | import("long").Long | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _183.QueryAllLiquidityTiersResponse;
        };
        QueryPremiumVotesRequest: {
            encode(_: _183.QueryPremiumVotesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPremiumVotesRequest;
            fromPartial(_: {}): _183.QueryPremiumVotesRequest;
        };
        QueryPremiumVotesResponse: {
            encode(message: _183.QueryPremiumVotesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPremiumVotesResponse;
            fromPartial(object: {
                premiumVotes?: {
                    allMarketPremiums?: {
                        perpetualId?: number | undefined;
                        premiums?: number[] | undefined;
                    }[] | undefined;
                    numPremiums?: number | undefined;
                } | undefined;
            }): _183.QueryPremiumVotesResponse;
        };
        QueryPremiumSamplesRequest: {
            encode(_: _183.QueryPremiumSamplesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPremiumSamplesRequest;
            fromPartial(_: {}): _183.QueryPremiumSamplesRequest;
        };
        QueryPremiumSamplesResponse: {
            encode(message: _183.QueryPremiumSamplesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryPremiumSamplesResponse;
            fromPartial(object: {
                premiumSamples?: {
                    allMarketPremiums?: {
                        perpetualId?: number | undefined;
                        premiums?: number[] | undefined;
                    }[] | undefined;
                    numPremiums?: number | undefined;
                } | undefined;
            }): _183.QueryPremiumSamplesResponse;
        };
        QueryParamsRequest: {
            encode(_: _183.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryParamsRequest;
            fromPartial(_: {}): _183.QueryParamsRequest;
        };
        QueryParamsResponse: {
            encode(message: _183.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _183.QueryParamsResponse;
            fromPartial(object: {
                params?: {
                    fundingRateClampFactorPpm?: number | undefined;
                    premiumVoteClampFactorPpm?: number | undefined;
                    minNumVotesPerSample?: number | undefined;
                } | undefined;
            }): _183.QueryParamsResponse;
        };
        Perpetual: {
            encode(message: _182.Perpetual, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _182.Perpetual;
            fromPartial(object: {
                params?: {
                    id?: number | undefined;
                    ticker?: string | undefined;
                    marketId?: number | undefined;
                    atomicResolution?: number | undefined;
                    defaultFundingPpm?: number | undefined;
                    liquidityTier?: number | undefined;
                } | undefined;
                fundingIndex?: Uint8Array | undefined;
            }): _182.Perpetual;
        };
        PerpetualParams: {
            encode(message: _182.PerpetualParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _182.PerpetualParams;
            fromPartial(object: {
                id?: number | undefined;
                ticker?: string | undefined;
                marketId?: number | undefined;
                atomicResolution?: number | undefined;
                defaultFundingPpm?: number | undefined;
                liquidityTier?: number | undefined;
            }): _182.PerpetualParams;
        };
        MarketPremiums: {
            encode(message: _182.MarketPremiums, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _182.MarketPremiums;
            fromPartial(object: {
                perpetualId?: number | undefined;
                premiums?: number[] | undefined;
            }): _182.MarketPremiums;
        };
        PremiumStore: {
            encode(message: _182.PremiumStore, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _182.PremiumStore;
            fromPartial(object: {
                allMarketPremiums?: {
                    perpetualId?: number | undefined;
                    premiums?: number[] | undefined;
                }[] | undefined;
                numPremiums?: number | undefined;
            }): _182.PremiumStore;
        };
        LiquidityTier: {
            encode(message: _182.LiquidityTier, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _182.LiquidityTier;
            fromPartial(object: {
                id?: number | undefined;
                name?: string | undefined;
                initialMarginPpm?: number | undefined;
                maintenanceFractionPpm?: number | undefined;
                basePositionNotional?: string | number | import("long").Long | undefined;
                impactNotional?: string | number | import("long").Long | undefined;
            }): _182.LiquidityTier;
        };
        Params: {
            encode(message: _181.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _181.Params;
            fromPartial(object: {
                fundingRateClampFactorPpm?: number | undefined;
                premiumVoteClampFactorPpm?: number | undefined;
                minNumVotesPerSample?: number | undefined;
            }): _181.Params;
        };
        GenesisState: {
            encode(message: _180.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _180.GenesisState;
            fromPartial(object: {
                perpetuals?: {
                    params?: {
                        id?: number | undefined;
                        ticker?: string | undefined;
                        marketId?: number | undefined;
                        atomicResolution?: number | undefined;
                        defaultFundingPpm?: number | undefined;
                        liquidityTier?: number | undefined;
                    } | undefined;
                    fundingIndex?: Uint8Array | undefined;
                }[] | undefined;
                liquidityTiers?: {
                    id?: number | undefined;
                    name?: string | undefined;
                    initialMarginPpm?: number | undefined;
                    maintenanceFractionPpm?: number | undefined;
                    basePositionNotional?: string | number | import("long").Long | undefined;
                    impactNotional?: string | number | import("long").Long | undefined;
                }[] | undefined;
                params?: {
                    fundingRateClampFactorPpm?: number | undefined;
                    premiumVoteClampFactorPpm?: number | undefined;
                    minNumVotesPerSample?: number | undefined;
                } | undefined;
            }): _180.GenesisState;
        };
    };
    const prices: {
        MsgClientImpl: typeof _331.MsgClientImpl;
        QueryClientImpl: typeof _318.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            marketPrice(request: _188.QueryMarketPriceRequest): Promise<_188.QueryMarketPriceResponse>;
            allMarketPrices(request?: _188.QueryAllMarketPricesRequest | undefined): Promise<_188.QueryAllMarketPricesResponse>;
            marketParam(request: _188.QueryMarketParamRequest): Promise<_188.QueryMarketParamResponse>;
            allMarketParams(request?: _188.QueryAllMarketParamsRequest | undefined): Promise<_188.QueryAllMarketParamsResponse>;
        };
        LCDQueryClient: typeof _304.LCDQueryClient;
        MsgCreateOracleMarket: {
            encode(message: _189.MsgCreateOracleMarket, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgCreateOracleMarket;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    id?: number | undefined;
                    pair?: string | undefined;
                    exponent?: number | undefined;
                    minExchanges?: number | undefined;
                    minPriceChangePpm?: number | undefined;
                    exchangeConfigJson?: string | undefined;
                } | undefined;
            }): _189.MsgCreateOracleMarket;
        };
        MsgCreateOracleMarketResponse: {
            encode(_: _189.MsgCreateOracleMarketResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgCreateOracleMarketResponse;
            fromPartial(_: {}): _189.MsgCreateOracleMarketResponse;
        };
        MsgUpdateMarketPrices: {
            encode(message: _189.MsgUpdateMarketPrices, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgUpdateMarketPrices;
            fromPartial(object: {
                marketPriceUpdates?: {
                    marketId?: number | undefined;
                    price?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _189.MsgUpdateMarketPrices;
        };
        MsgUpdateMarketPrices_MarketPrice: {
            encode(message: _189.MsgUpdateMarketPrices_MarketPrice, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgUpdateMarketPrices_MarketPrice;
            fromPartial(object: {
                marketId?: number | undefined;
                price?: string | number | import("long").Long | undefined;
            }): _189.MsgUpdateMarketPrices_MarketPrice;
        };
        MsgUpdateMarketPricesResponse: {
            encode(_: _189.MsgUpdateMarketPricesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgUpdateMarketPricesResponse;
            fromPartial(_: {}): _189.MsgUpdateMarketPricesResponse;
        };
        MsgUpdateMarketParam: {
            encode(message: _189.MsgUpdateMarketParam, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgUpdateMarketParam;
            fromPartial(object: {
                authority?: string | undefined;
                marketParam?: {
                    id?: number | undefined;
                    pair?: string | undefined;
                    exponent?: number | undefined;
                    minExchanges?: number | undefined;
                    minPriceChangePpm?: number | undefined;
                    exchangeConfigJson?: string | undefined;
                } | undefined;
            }): _189.MsgUpdateMarketParam;
        };
        MsgUpdateMarketParamResponse: {
            encode(_: _189.MsgUpdateMarketParamResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _189.MsgUpdateMarketParamResponse;
            fromPartial(_: {}): _189.MsgUpdateMarketParamResponse;
        };
        QueryMarketPriceRequest: {
            encode(message: _188.QueryMarketPriceRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryMarketPriceRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _188.QueryMarketPriceRequest;
        };
        QueryMarketPriceResponse: {
            encode(message: _188.QueryMarketPriceResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryMarketPriceResponse;
            fromPartial(object: {
                marketPrice?: {
                    id?: number | undefined;
                    exponent?: number | undefined;
                    price?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _188.QueryMarketPriceResponse;
        };
        QueryAllMarketPricesRequest: {
            encode(message: _188.QueryAllMarketPricesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryAllMarketPricesRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _188.QueryAllMarketPricesRequest;
        };
        QueryAllMarketPricesResponse: {
            encode(message: _188.QueryAllMarketPricesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryAllMarketPricesResponse;
            fromPartial(object: {
                marketPrices?: {
                    id?: number | undefined;
                    exponent?: number | undefined;
                    price?: string | number | import("long").Long | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _188.QueryAllMarketPricesResponse;
        };
        QueryMarketParamRequest: {
            encode(message: _188.QueryMarketParamRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryMarketParamRequest;
            fromPartial(object: {
                id?: number | undefined;
            }): _188.QueryMarketParamRequest;
        };
        QueryMarketParamResponse: {
            encode(message: _188.QueryMarketParamResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryMarketParamResponse;
            fromPartial(object: {
                marketParam?: {
                    id?: number | undefined;
                    pair?: string | undefined;
                    exponent?: number | undefined;
                    minExchanges?: number | undefined;
                    minPriceChangePpm?: number | undefined;
                    exchangeConfigJson?: string | undefined;
                } | undefined;
            }): _188.QueryMarketParamResponse;
        };
        QueryAllMarketParamsRequest: {
            encode(message: _188.QueryAllMarketParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryAllMarketParamsRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _188.QueryAllMarketParamsRequest;
        };
        QueryAllMarketParamsResponse: {
            encode(message: _188.QueryAllMarketParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _188.QueryAllMarketParamsResponse;
            fromPartial(object: {
                marketParams?: {
                    id?: number | undefined;
                    pair?: string | undefined;
                    exponent?: number | undefined;
                    minExchanges?: number | undefined;
                    minPriceChangePpm?: number | undefined;
                    exchangeConfigJson?: string | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _188.QueryAllMarketParamsResponse;
        };
        MarketPrice: {
            encode(message: _187.MarketPrice, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _187.MarketPrice;
            fromPartial(object: {
                id?: number | undefined;
                exponent?: number | undefined;
                price?: string | number | import("long").Long | undefined;
            }): _187.MarketPrice;
        };
        MarketParam: {
            encode(message: _186.MarketParam, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _186.MarketParam;
            fromPartial(object: {
                id?: number | undefined;
                pair?: string | undefined;
                exponent?: number | undefined;
                minExchanges?: number | undefined;
                minPriceChangePpm?: number | undefined;
                exchangeConfigJson?: string | undefined;
            }): _186.MarketParam;
        };
        GenesisState: {
            encode(message: _185.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _185.GenesisState;
            fromPartial(object: {
                marketParams?: {
                    id?: number | undefined;
                    pair?: string | undefined;
                    exponent?: number | undefined;
                    minExchanges?: number | undefined;
                    minPriceChangePpm?: number | undefined;
                    exchangeConfigJson?: string | undefined;
                }[] | undefined;
                marketPrices?: {
                    id?: number | undefined;
                    exponent?: number | undefined;
                    price?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _185.GenesisState;
        };
    };
    const ratelimit: {
        MsgClientImpl: typeof _332.MsgClientImpl;
        QueryClientImpl: typeof _319.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            listLimitParams(request?: _193.ListLimitParamsRequest | undefined): Promise<_193.ListLimitParamsResponse>;
            capacityByDenom(request: _193.QueryCapacityByDenomRequest): Promise<_193.QueryCapacityByDenomResponse>;
        };
        LCDQueryClient: typeof _305.LCDQueryClient;
        MsgSetLimitParams: {
            encode(message: _194.MsgSetLimitParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _194.MsgSetLimitParams;
            fromPartial(object: {
                authority?: string | undefined;
                limitParams?: {
                    denom?: string | undefined;
                    limiters?: {
                        periodSec?: number | undefined;
                        baselineMinimum?: Uint8Array | undefined;
                        baselineTvlPpm?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }): _194.MsgSetLimitParams;
        };
        MsgSetLimitParamsResponse: {
            encode(_: _194.MsgSetLimitParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _194.MsgSetLimitParamsResponse;
            fromPartial(_: {}): _194.MsgSetLimitParamsResponse;
        };
        MsgDeleteLimitParams: {
            encode(message: _194.MsgDeleteLimitParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _194.MsgDeleteLimitParams;
            fromPartial(object: {
                authority?: string | undefined;
                denom?: string | undefined;
            }): _194.MsgDeleteLimitParams;
        };
        MsgDeleteLimitParamsResponse: {
            encode(_: _194.MsgDeleteLimitParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _194.MsgDeleteLimitParamsResponse;
            fromPartial(_: {}): _194.MsgDeleteLimitParamsResponse;
        };
        ListLimitParamsRequest: {
            encode(_: _193.ListLimitParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _193.ListLimitParamsRequest;
            fromPartial(_: {}): _193.ListLimitParamsRequest;
        };
        ListLimitParamsResponse: {
            encode(message: _193.ListLimitParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _193.ListLimitParamsResponse;
            fromPartial(object: {
                limitParamsList?: {
                    denom?: string | undefined;
                    limiters?: {
                        periodSec?: number | undefined;
                        baselineMinimum?: Uint8Array | undefined;
                        baselineTvlPpm?: number | undefined;
                    }[] | undefined;
                }[] | undefined;
            }): _193.ListLimitParamsResponse;
        };
        QueryCapacityByDenomRequest: {
            encode(message: _193.QueryCapacityByDenomRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _193.QueryCapacityByDenomRequest;
            fromPartial(object: {
                denom?: string | undefined;
            }): _193.QueryCapacityByDenomRequest;
        };
        CapacityResult: {
            encode(message: _193.CapacityResult, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _193.CapacityResult;
            fromPartial(object: {
                periodSec?: number | undefined;
                capacity?: Uint8Array | undefined;
            }): _193.CapacityResult;
        };
        QueryCapacityByDenomResponse: {
            encode(message: _193.QueryCapacityByDenomResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _193.QueryCapacityByDenomResponse;
            fromPartial(object: {
                results?: {
                    periodSec?: number | undefined;
                    capacity?: Uint8Array | undefined;
                }[] | undefined;
            }): _193.QueryCapacityByDenomResponse;
        };
        LimitParams: {
            encode(message: _192.LimitParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _192.LimitParams;
            fromPartial(object: {
                denom?: string | undefined;
                limiters?: {
                    periodSec?: number | undefined;
                    baselineMinimum?: Uint8Array | undefined;
                    baselineTvlPpm?: number | undefined;
                }[] | undefined;
            }): _192.LimitParams;
        };
        Limiter: {
            encode(message: _192.Limiter, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _192.Limiter;
            fromPartial(object: {
                periodSec?: number | undefined;
                baselineMinimum?: Uint8Array | undefined;
                baselineTvlPpm?: number | undefined;
            }): _192.Limiter;
        };
        GenesisState: {
            encode(message: _191.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _191.GenesisState;
            fromPartial(object: {
                limitParamsList?: {
                    denom?: string | undefined;
                    limiters?: {
                        periodSec?: number | undefined;
                        baselineMinimum?: Uint8Array | undefined;
                        baselineTvlPpm?: number | undefined;
                    }[] | undefined;
                }[] | undefined;
            }): _191.GenesisState;
        };
        DenomCapacity: {
            encode(message: _190.DenomCapacity, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _190.DenomCapacity;
            fromPartial(object: {
                denom?: string | undefined;
                capacityList?: Uint8Array[] | undefined;
            }): _190.DenomCapacity;
        };
    };
    const rewards: {
        MsgClientImpl: typeof _333.MsgClientImpl;
        QueryClientImpl: typeof _320.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            params(request?: _197.QueryParamsRequest | undefined): Promise<_197.QueryParamsResponse>;
        };
        LCDQueryClient: typeof _306.LCDQueryClient;
        MsgUpdateParams: {
            encode(message: _199.MsgUpdateParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _199.MsgUpdateParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    marketId?: number | undefined;
                    feeMultiplierPpm?: number | undefined;
                } | undefined;
            }): _199.MsgUpdateParams;
        };
        MsgUpdateParamsResponse: {
            encode(_: _199.MsgUpdateParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _199.MsgUpdateParamsResponse;
            fromPartial(_: {}): _199.MsgUpdateParamsResponse;
        };
        RewardShare: {
            encode(message: _198.RewardShare, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _198.RewardShare;
            fromPartial(object: {
                address?: string | undefined;
                weight?: Uint8Array | undefined;
            }): _198.RewardShare;
        };
        QueryParamsRequest: {
            encode(_: _197.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _197.QueryParamsRequest;
            fromPartial(_: {}): _197.QueryParamsRequest;
        };
        QueryParamsResponse: {
            encode(message: _197.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _197.QueryParamsResponse;
            fromPartial(object: {
                params?: {
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    marketId?: number | undefined;
                    feeMultiplierPpm?: number | undefined;
                } | undefined;
            }): _197.QueryParamsResponse;
        };
        Params: {
            encode(message: _196.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _196.Params;
            fromPartial(object: {
                treasuryAccount?: string | undefined;
                denom?: string | undefined;
                denomExponent?: number | undefined;
                marketId?: number | undefined;
                feeMultiplierPpm?: number | undefined;
            }): _196.Params;
        };
        GenesisState: {
            encode(message: _195.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _195.GenesisState;
            fromPartial(object: {
                params?: {
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    denomExponent?: number | undefined;
                    marketId?: number | undefined;
                    feeMultiplierPpm?: number | undefined;
                } | undefined;
            }): _195.GenesisState;
        };
    };
    const sending: {
        MsgClientImpl: typeof _334.MsgClientImpl;
        QueryClientImpl: typeof _321.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {};
        MsgCreateTransfer: {
            encode(message: _203.MsgCreateTransfer, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _203.MsgCreateTransfer;
            fromPartial(object: {
                transfer?: {
                    sender?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    recipient?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    assetId?: number | undefined;
                    amount?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _203.MsgCreateTransfer;
        };
        MsgCreateTransferResponse: {
            encode(_: _203.MsgCreateTransferResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _203.MsgCreateTransferResponse;
            fromPartial(_: {}): _203.MsgCreateTransferResponse;
        };
        MsgDepositToSubaccountResponse: {
            encode(_: _203.MsgDepositToSubaccountResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _203.MsgDepositToSubaccountResponse;
            fromPartial(_: {}): _203.MsgDepositToSubaccountResponse;
        };
        MsgWithdrawFromSubaccountResponse: {
            encode(_: _203.MsgWithdrawFromSubaccountResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _203.MsgWithdrawFromSubaccountResponse;
            fromPartial(_: {}): _203.MsgWithdrawFromSubaccountResponse;
        };
        MsgSendFromModuleToAccountResponse: {
            encode(_: _203.MsgSendFromModuleToAccountResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _203.MsgSendFromModuleToAccountResponse;
            fromPartial(_: {}): _203.MsgSendFromModuleToAccountResponse;
        };
        Transfer: {
            encode(message: _202.Transfer, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _202.Transfer;
            fromPartial(object: {
                sender?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                recipient?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                assetId?: number | undefined;
                amount?: string | number | import("long").Long | undefined;
            }): _202.Transfer;
        };
        MsgDepositToSubaccount: {
            encode(message: _202.MsgDepositToSubaccount, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _202.MsgDepositToSubaccount;
            fromPartial(object: {
                sender?: string | undefined;
                recipient?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                assetId?: number | undefined;
                quantums?: string | number | import("long").Long | undefined;
            }): _202.MsgDepositToSubaccount;
        };
        MsgWithdrawFromSubaccount: {
            encode(message: _202.MsgWithdrawFromSubaccount, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _202.MsgWithdrawFromSubaccount;
            fromPartial(object: {
                sender?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                recipient?: string | undefined;
                assetId?: number | undefined;
                quantums?: string | number | import("long").Long | undefined;
            }): _202.MsgWithdrawFromSubaccount;
        };
        MsgSendFromModuleToAccount: {
            encode(message: _202.MsgSendFromModuleToAccount, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _202.MsgSendFromModuleToAccount;
            fromPartial(object: {
                authority?: string | undefined;
                senderModuleName?: string | undefined;
                recipient?: string | undefined;
                coin?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            }): _202.MsgSendFromModuleToAccount;
        };
        GenesisState: {
            encode(_: _200.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _200.GenesisState;
            fromPartial(_: {}): _200.GenesisState;
        };
    };
    const stats: {
        MsgClientImpl: typeof _335.MsgClientImpl;
        QueryClientImpl: typeof _322.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            params(request?: _206.QueryParamsRequest | undefined): Promise<_206.QueryParamsResponse>;
            statsMetadata(request?: _206.QueryStatsMetadataRequest | undefined): Promise<_206.QueryStatsMetadataResponse>;
            globalStats(request?: _206.QueryGlobalStatsRequest | undefined): Promise<_206.QueryGlobalStatsResponse>;
            userStats(request: _206.QueryUserStatsRequest): Promise<_206.QueryUserStatsResponse>;
        };
        LCDQueryClient: typeof _307.LCDQueryClient;
        MsgUpdateParams: {
            encode(message: _208.MsgUpdateParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _208.MsgUpdateParams;
            fromPartial(object: {
                authority?: string | undefined;
                params?: {
                    windowDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _208.MsgUpdateParams;
        };
        MsgUpdateParamsResponse: {
            encode(_: _208.MsgUpdateParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _208.MsgUpdateParamsResponse;
            fromPartial(_: {}): _208.MsgUpdateParamsResponse;
        };
        BlockStats: {
            encode(message: _207.BlockStats, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.BlockStats;
            fromPartial(object: {
                fills?: {
                    taker?: string | undefined;
                    maker?: string | undefined;
                    notional?: string | number | import("long").Long | undefined;
                }[] | undefined;
            }): _207.BlockStats;
        };
        BlockStats_Fill: {
            encode(message: _207.BlockStats_Fill, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.BlockStats_Fill;
            fromPartial(object: {
                taker?: string | undefined;
                maker?: string | undefined;
                notional?: string | number | import("long").Long | undefined;
            }): _207.BlockStats_Fill;
        };
        StatsMetadata: {
            encode(message: _207.StatsMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.StatsMetadata;
            fromPartial(object: {
                trailingEpoch?: number | undefined;
            }): _207.StatsMetadata;
        };
        EpochStats: {
            encode(message: _207.EpochStats, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.EpochStats;
            fromPartial(object: {
                epochEndTime?: Date | undefined;
                stats?: {
                    user?: string | undefined;
                    stats?: {
                        takerNotional?: string | number | import("long").Long | undefined;
                        makerNotional?: string | number | import("long").Long | undefined;
                    } | undefined;
                }[] | undefined;
            }): _207.EpochStats;
        };
        EpochStats_UserWithStats: {
            encode(message: _207.EpochStats_UserWithStats, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.EpochStats_UserWithStats;
            fromPartial(object: {
                user?: string | undefined;
                stats?: {
                    takerNotional?: string | number | import("long").Long | undefined;
                    makerNotional?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _207.EpochStats_UserWithStats;
        };
        GlobalStats: {
            encode(message: _207.GlobalStats, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.GlobalStats;
            fromPartial(object: {
                notionalTraded?: string | number | import("long").Long | undefined;
            }): _207.GlobalStats;
        };
        UserStats: {
            encode(message: _207.UserStats, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _207.UserStats;
            fromPartial(object: {
                takerNotional?: string | number | import("long").Long | undefined;
                makerNotional?: string | number | import("long").Long | undefined;
            }): _207.UserStats;
        };
        QueryParamsRequest: {
            encode(_: _206.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryParamsRequest;
            fromPartial(_: {}): _206.QueryParamsRequest;
        };
        QueryParamsResponse: {
            encode(message: _206.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryParamsResponse;
            fromPartial(object: {
                params?: {
                    windowDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _206.QueryParamsResponse;
        };
        QueryStatsMetadataRequest: {
            encode(_: _206.QueryStatsMetadataRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryStatsMetadataRequest;
            fromPartial(_: {}): _206.QueryStatsMetadataRequest;
        };
        QueryStatsMetadataResponse: {
            encode(message: _206.QueryStatsMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryStatsMetadataResponse;
            fromPartial(object: {
                metadata?: {
                    trailingEpoch?: number | undefined;
                } | undefined;
            }): _206.QueryStatsMetadataResponse;
        };
        QueryGlobalStatsRequest: {
            encode(_: _206.QueryGlobalStatsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryGlobalStatsRequest;
            fromPartial(_: {}): _206.QueryGlobalStatsRequest;
        };
        QueryGlobalStatsResponse: {
            encode(message: _206.QueryGlobalStatsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryGlobalStatsResponse;
            fromPartial(object: {
                stats?: {
                    notionalTraded?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _206.QueryGlobalStatsResponse;
        };
        QueryUserStatsRequest: {
            encode(message: _206.QueryUserStatsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryUserStatsRequest;
            fromPartial(object: {
                user?: string | undefined;
            }): _206.QueryUserStatsRequest;
        };
        QueryUserStatsResponse: {
            encode(message: _206.QueryUserStatsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _206.QueryUserStatsResponse;
            fromPartial(object: {
                stats?: {
                    takerNotional?: string | number | import("long").Long | undefined;
                    makerNotional?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _206.QueryUserStatsResponse;
        };
        Params: {
            encode(message: _205.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _205.Params;
            fromPartial(object: {
                windowDuration?: {
                    seconds?: string | number | import("long").Long | undefined;
                    nanos?: number | undefined;
                } | undefined;
            }): _205.Params;
        };
        GenesisState: {
            encode(message: _204.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _204.GenesisState;
            fromPartial(object: {
                params?: {
                    windowDuration?: {
                        seconds?: string | number | import("long").Long | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                } | undefined;
            }): _204.GenesisState;
        };
    };
    const subaccounts: {
        QueryClientImpl: typeof _323.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            subaccount(request: _212.QueryGetSubaccountRequest): Promise<_212.QuerySubaccountResponse>;
            subaccountAll(request?: _212.QueryAllSubaccountRequest | undefined): Promise<_212.QuerySubaccountAllResponse>;
        };
        LCDQueryClient: typeof _308.LCDQueryClient;
        SubaccountId: {
            encode(message: _213.SubaccountId, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _213.SubaccountId;
            fromPartial(object: {
                owner?: string | undefined;
                number?: number | undefined;
            }): _213.SubaccountId;
        };
        Subaccount: {
            encode(message: _213.Subaccount, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _213.Subaccount;
            fromPartial(object: {
                id?: {
                    owner?: string | undefined;
                    number?: number | undefined;
                } | undefined;
                assetPositions?: {
                    assetId?: number | undefined;
                    quantums?: Uint8Array | undefined;
                    index?: string | number | import("long").Long | undefined;
                }[] | undefined;
                perpetualPositions?: {
                    perpetualId?: number | undefined;
                    quantums?: Uint8Array | undefined;
                    fundingIndex?: Uint8Array | undefined;
                }[] | undefined;
                marginEnabled?: boolean | undefined;
            }): _213.Subaccount;
        };
        QueryGetSubaccountRequest: {
            encode(message: _212.QueryGetSubaccountRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _212.QueryGetSubaccountRequest;
            fromPartial(object: {
                owner?: string | undefined;
                number?: number | undefined;
            }): _212.QueryGetSubaccountRequest;
        };
        QuerySubaccountResponse: {
            encode(message: _212.QuerySubaccountResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _212.QuerySubaccountResponse;
            fromPartial(object: {
                subaccount?: {
                    id?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    assetPositions?: {
                        assetId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        index?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    perpetualPositions?: {
                        perpetualId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        fundingIndex?: Uint8Array | undefined;
                    }[] | undefined;
                    marginEnabled?: boolean | undefined;
                } | undefined;
            }): _212.QuerySubaccountResponse;
        };
        QueryAllSubaccountRequest: {
            encode(message: _212.QueryAllSubaccountRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _212.QueryAllSubaccountRequest;
            fromPartial(object: {
                pagination?: {
                    key?: Uint8Array | undefined;
                    offset?: string | number | import("long").Long | undefined;
                    limit?: string | number | import("long").Long | undefined;
                    countTotal?: boolean | undefined;
                    reverse?: boolean | undefined;
                } | undefined;
            }): _212.QueryAllSubaccountRequest;
        };
        QuerySubaccountAllResponse: {
            encode(message: _212.QuerySubaccountAllResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _212.QuerySubaccountAllResponse;
            fromPartial(object: {
                subaccount?: {
                    id?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    assetPositions?: {
                        assetId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        index?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    perpetualPositions?: {
                        perpetualId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        fundingIndex?: Uint8Array | undefined;
                    }[] | undefined;
                    marginEnabled?: boolean | undefined;
                }[] | undefined;
                pagination?: {
                    nextKey?: Uint8Array | undefined;
                    total?: string | number | import("long").Long | undefined;
                } | undefined;
            }): _212.QuerySubaccountAllResponse;
        };
        PerpetualPosition: {
            encode(message: _211.PerpetualPosition, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _211.PerpetualPosition;
            fromPartial(object: {
                perpetualId?: number | undefined;
                quantums?: Uint8Array | undefined;
                fundingIndex?: Uint8Array | undefined;
            }): _211.PerpetualPosition;
        };
        GenesisState: {
            encode(message: _210.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _210.GenesisState;
            fromPartial(object: {
                subaccounts?: {
                    id?: {
                        owner?: string | undefined;
                        number?: number | undefined;
                    } | undefined;
                    assetPositions?: {
                        assetId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        index?: string | number | import("long").Long | undefined;
                    }[] | undefined;
                    perpetualPositions?: {
                        perpetualId?: number | undefined;
                        quantums?: Uint8Array | undefined;
                        fundingIndex?: Uint8Array | undefined;
                    }[] | undefined;
                    marginEnabled?: boolean | undefined;
                }[] | undefined;
            }): _210.GenesisState;
        };
        AssetPosition: {
            encode(message: _209.AssetPosition, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _209.AssetPosition;
            fromPartial(object: {
                assetId?: number | undefined;
                quantums?: Uint8Array | undefined;
                index?: string | number | import("long").Long | undefined;
            }): _209.AssetPosition;
        };
    };
    const vest: {
        MsgClientImpl: typeof _336.MsgClientImpl;
        QueryClientImpl: typeof _324.QueryClientImpl;
        createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
            vestEntry(request: _215.QueryVestEntryRequest): Promise<_215.QueryVestEntryResponse>;
        };
        LCDQueryClient: typeof _309.LCDQueryClient;
        VestEntry: {
            encode(message: _217.VestEntry, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _217.VestEntry;
            fromPartial(object: {
                vesterAccount?: string | undefined;
                treasuryAccount?: string | undefined;
                denom?: string | undefined;
                startTime?: Date | undefined;
                endTime?: Date | undefined;
            }): _217.VestEntry;
        };
        MsgDeleteVestEntry: {
            encode(message: _216.MsgDeleteVestEntry, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _216.MsgDeleteVestEntry;
            fromPartial(object: {
                authority?: string | undefined;
                vesterAccount?: string | undefined;
            }): _216.MsgDeleteVestEntry;
        };
        MsgDeleteVestEntryResponse: {
            encode(_: _216.MsgDeleteVestEntryResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _216.MsgDeleteVestEntryResponse;
            fromPartial(_: {}): _216.MsgDeleteVestEntryResponse;
        };
        MsgSetVestEntry: {
            encode(message: _216.MsgSetVestEntry, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _216.MsgSetVestEntry;
            fromPartial(object: {
                authority?: string | undefined;
                entry?: {
                    vesterAccount?: string | undefined;
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    startTime?: Date | undefined;
                    endTime?: Date | undefined;
                } | undefined;
            }): _216.MsgSetVestEntry;
        };
        MsgSetVestEntryResponse: {
            encode(_: _216.MsgSetVestEntryResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _216.MsgSetVestEntryResponse;
            fromPartial(_: {}): _216.MsgSetVestEntryResponse;
        };
        QueryVestEntryRequest: {
            encode(message: _215.QueryVestEntryRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _215.QueryVestEntryRequest;
            fromPartial(object: {
                vesterAccount?: string | undefined;
            }): _215.QueryVestEntryRequest;
        };
        QueryVestEntryResponse: {
            encode(message: _215.QueryVestEntryResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _215.QueryVestEntryResponse;
            fromPartial(object: {
                entry?: {
                    vesterAccount?: string | undefined;
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    startTime?: Date | undefined;
                    endTime?: Date | undefined;
                } | undefined;
            }): _215.QueryVestEntryResponse;
        };
        GenesisState: {
            encode(message: _214.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
            decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): _214.GenesisState;
            fromPartial(object: {
                vestEntries?: {
                    vesterAccount?: string | undefined;
                    treasuryAccount?: string | undefined;
                    denom?: string | undefined;
                    startTime?: Date | undefined;
                    endTime?: Date | undefined;
                }[] | undefined;
            }): _214.GenesisState;
        };
    };
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("@dydxprotocol/v4-proto/src/codegen/helpers").Rpc;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                authz: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                bank: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                circuit: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/tx.rpc.msg").MsgClientImpl;
                };
                consensus: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/consensus/v1/tx.rpc.msg").MsgClientImpl;
                };
                crisis: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/crisis/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                distribution: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                evidence: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                feegrant: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                gov: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/tx.rpc.msg").MsgClientImpl;
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                group: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/tx.rpc.msg").MsgClientImpl;
                };
                mint: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                nft: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                slashing: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                staking: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                upgrade: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                vesting: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/vesting/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
            };
            dydxprotocol: {
                blocktime: _325.MsgClientImpl;
                bridge: _326.MsgClientImpl;
                clob: _327.MsgClientImpl;
                delaymsg: _328.MsgClientImpl;
                feetiers: _329.MsgClientImpl;
                perpetuals: _330.MsgClientImpl;
                prices: _331.MsgClientImpl;
                ratelimit: _332.MsgClientImpl;
                rewards: _333.MsgClientImpl;
                sending: _334.MsgClientImpl;
                stats: _335.MsgClientImpl;
                vest: _336.MsgClientImpl;
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                app: {
                    v1alpha1: {
                        config(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/app/v1alpha1/query").QueryConfigRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/app/v1alpha1/query").QueryConfigResponse>;
                    };
                };
                auth: {
                    v1beta1: {
                        accounts(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountsResponse>;
                        account(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountResponse>;
                        accountAddressByID(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountAddressByIDRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountAddressByIDResponse>;
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryParamsResponse>;
                        moduleAccounts(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryModuleAccountsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryModuleAccountsResponse>;
                        moduleAccountByName(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryModuleAccountByNameRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryModuleAccountByNameResponse>;
                        bech32Prefix(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").Bech32PrefixRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").Bech32PrefixResponse>;
                        addressBytesToString(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").AddressBytesToStringRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").AddressBytesToStringResponse>;
                        addressStringToBytes(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").AddressStringToBytesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").AddressStringToBytesResponse>;
                        accountInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query").QueryAccountInfoResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGrantsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGrantsResponse>;
                        granterGrants(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGranterGrantsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGranterGrantsResponse>;
                        granteeGrants(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGranteeGrantsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query").QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryBalanceRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryBalanceResponse>;
                        allBalances(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryAllBalancesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryAllBalancesResponse>;
                        spendableBalances(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySpendableBalancesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySpendableBalancesResponse>;
                        spendableBalanceByDenom(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomResponse>;
                        totalSupply(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryTotalSupplyRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryTotalSupplyResponse>;
                        supplyOf(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySupplyOfRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySupplyOfResponse>;
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryParamsResponse>;
                        denomMetadata(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomMetadataRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomMetadataResponse>;
                        denomMetadataByQueryString(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomMetadataByQueryStringRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomMetadataByQueryStringResponse>;
                        denomsMetadata(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomsMetadataRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomsMetadataResponse>;
                        denomOwners(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomOwnersRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QueryDenomOwnersResponse>;
                        sendEnabled(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySendEnabledRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query").QuerySendEnabledResponse>;
                    };
                };
                base: {
                    node: {
                        v1beta1: {
                            config(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/node/v1beta1/query").ConfigRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/node/v1beta1/query").ConfigResponse>;
                            status(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/node/v1beta1/query").StatusRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/node/v1beta1/query").StatusResponse>;
                        };
                    };
                    tendermint: {
                        v1beta1: {
                            getNodeInfo(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetNodeInfoRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetNodeInfoResponse>;
                            getSyncing(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetSyncingRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetSyncingResponse>;
                            getLatestBlock(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetLatestBlockRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetLatestBlockResponse>;
                            getBlockByHeight(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetBlockByHeightRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetBlockByHeightResponse>;
                            getLatestValidatorSet(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetLatestValidatorSetRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetLatestValidatorSetResponse>;
                            getValidatorSetByHeight(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetValidatorSetByHeightRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").GetValidatorSetByHeightResponse>;
                            aBCIQuery(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").ABCIQueryRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query").ABCIQueryResponse>;
                        };
                    };
                };
                circuit: {
                    v1: {
                        account(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").QueryAccountRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").AccountResponse>;
                        accounts(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").QueryAccountsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").AccountsResponse>;
                        disabledList(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").QueryDisabledListRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query").DisabledListResponse>;
                    };
                };
                consensus: {
                    v1: {
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/consensus/v1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/consensus/v1/query").QueryParamsResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryParamsResponse>;
                        validatorDistributionInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoResponse>;
                        validatorOutstandingRewards(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorCommissionRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorCommissionResponse>;
                        validatorSlashes(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorSlashesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryValidatorSlashesResponse>;
                        delegationRewards(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegationRewardsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryCommunityPoolRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query").QueryCommunityPoolResponse>;
                    };
                };
                evidence: {
                    v1beta1: {
                        evidence(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/query").QueryEvidenceRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/query").QueryEvidenceResponse>;
                        allEvidence(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/query").QueryAllEvidenceRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/query").QueryAllEvidenceResponse>;
                    };
                };
                feegrant: {
                    v1beta1: {
                        allowance(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowanceRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowanceResponse>;
                        allowances(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowancesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowancesResponse>;
                        allowancesByGranter(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowancesByGranterRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query").QueryAllowancesByGranterResponse>;
                    };
                };
                gov: {
                    v1: {
                        constitution(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryConstitutionRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryConstitutionResponse>;
                        proposal(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryProposalRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryProposalResponse>;
                        proposals(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryProposalsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryProposalsResponse>;
                        vote(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryVoteRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryVoteResponse>;
                        votes(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryVotesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryVotesResponse>;
                        params(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryParamsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryParamsResponse>;
                        deposit(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryDepositRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryDepositResponse>;
                        deposits(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryDepositsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryDepositsResponse>;
                        tallyResult(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryTallyResultRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query").QueryTallyResultResponse>;
                    };
                    v1beta1: {
                        proposal(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryProposalRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryProposalResponse>;
                        proposals(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryProposalsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryProposalsResponse>;
                        vote(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryVoteRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryVoteResponse>;
                        votes(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryVotesRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryVotesResponse>;
                        params(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryParamsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryParamsResponse>;
                        deposit(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryDepositRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryDepositResponse>;
                        deposits(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryDepositsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryDepositsResponse>;
                        tallyResult(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryTallyResultRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query").QueryTallyResultResponse>;
                    };
                };
                group: {
                    v1: {
                        groupInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupInfoResponse>;
                        groupPolicyInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPolicyInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPolicyInfoResponse>;
                        groupMembers(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupMembersRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupMembersResponse>;
                        groupsByAdmin(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsByAdminRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsByAdminResponse>;
                        groupPoliciesByGroup(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPoliciesByGroupRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPoliciesByGroupResponse>;
                        groupPoliciesByAdmin(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPoliciesByAdminRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupPoliciesByAdminResponse>;
                        proposal(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryProposalRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryProposalResponse>;
                        proposalsByGroupPolicy(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryProposalsByGroupPolicyRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryProposalsByGroupPolicyResponse>;
                        voteByProposalVoter(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVoteByProposalVoterRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVoteByProposalVoterResponse>;
                        votesByProposal(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVotesByProposalRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVotesByProposalResponse>;
                        votesByVoter(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVotesByVoterRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryVotesByVoterResponse>;
                        groupsByMember(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsByMemberRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsByMemberResponse>;
                        tallyResult(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryTallyResultRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryTallyResultResponse>;
                        groups(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query").QueryGroupsResponse>;
                    };
                };
                mint: {
                    v1beta1: {
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryParamsResponse>;
                        inflation(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryInflationRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryInflationResponse>;
                        annualProvisions(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryAnnualProvisionsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query").QueryAnnualProvisionsResponse>;
                    };
                };
                nft: {
                    v1beta1: {
                        balance(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryBalanceRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryBalanceResponse>;
                        owner(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryOwnerRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryOwnerResponse>;
                        supply(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QuerySupplyRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QuerySupplyResponse>;
                        nFTs(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryNFTsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryNFTsResponse>;
                        nFT(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryNFTRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryNFTResponse>;
                        class(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryClassRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryClassResponse>;
                        classes(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryClassesRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query").QueryClassesResponse>;
                    };
                };
                orm: {
                    query: {
                        v1alpha1: {
                            get(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/orm/query/v1alpha1/query").GetRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/orm/query/v1alpha1/query").GetResponse>;
                            list(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/orm/query/v1alpha1/query").ListRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/orm/query/v1alpha1/query").ListResponse>;
                        };
                    };
                };
                params: {
                    v1beta1: {
                        params(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/params/v1beta1/query").QueryParamsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/params/v1beta1/query").QueryParamsResponse>;
                        subspaces(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/params/v1beta1/query").QuerySubspacesRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/params/v1beta1/query").QuerySubspacesResponse>;
                    };
                };
                slashing: {
                    v1beta1: {
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QueryParamsResponse>;
                        signingInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QuerySigningInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QuerySigningInfoResponse>;
                        signingInfos(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QuerySigningInfosRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query").QuerySigningInfosResponse>;
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorsResponse>;
                        validator(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorResponse>;
                        validatorDelegations(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorDelegationsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegationRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegationResponse>;
                        unbondingDelegation(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryUnbondingDelegationRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorDelegationsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryRedelegationsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryRedelegationsResponse>;
                        delegatorValidators(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorValidatorRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryDelegatorValidatorResponse>;
                        historicalInfo(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryHistoricalInfoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryHistoricalInfoResponse>;
                        pool(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryPoolRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryPoolResponse>;
                        params(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryParamsRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query").QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").SimulateRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").SimulateResponse>;
                        getTx(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetTxRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetTxResponse>;
                        broadcastTx(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").BroadcastTxRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").BroadcastTxResponse>;
                        getTxsEvent(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetTxsEventRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetTxsEventResponse>;
                        getBlockWithTxs(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetBlockWithTxsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").GetBlockWithTxsResponse>;
                        txDecode(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxDecodeRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxDecodeResponse>;
                        txEncode(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxEncodeRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxEncodeResponse>;
                        txEncodeAmino(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxEncodeAminoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxEncodeAminoResponse>;
                        txDecodeAmino(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxDecodeAminoRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service").TxDecodeAminoResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryCurrentPlanRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryCurrentPlanResponse>;
                        appliedPlan(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryAppliedPlanRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryModuleVersionsRequest): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryModuleVersionsResponse>;
                        authority(request?: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryAuthorityRequest | undefined): Promise<import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query").QueryAuthorityResponse>;
                    };
                };
            };
            dydxprotocol: {
                assets: {
                    asset(request: _130.QueryAssetRequest): Promise<_130.QueryAssetResponse>;
                    allAssets(request?: _130.QueryAllAssetsRequest | undefined): Promise<_130.QueryAllAssetsResponse>;
                };
                blocktime: {
                    downtimeParams(request?: _135.QueryDowntimeParamsRequest | undefined): Promise<_135.QueryDowntimeParamsResponse>;
                    previousBlockInfo(request?: _135.QueryPreviousBlockInfoRequest | undefined): Promise<_135.QueryPreviousBlockInfoResponse>;
                    allDowntimeInfo(request?: _135.QueryAllDowntimeInfoRequest | undefined): Promise<_135.QueryAllDowntimeInfoResponse>;
                };
                bridge: {
                    eventParams(request?: _141.QueryEventParamsRequest | undefined): Promise<_141.QueryEventParamsResponse>;
                    proposeParams(request?: _141.QueryProposeParamsRequest | undefined): Promise<_141.QueryProposeParamsResponse>;
                    safetyParams(request?: _141.QuerySafetyParamsRequest | undefined): Promise<_141.QuerySafetyParamsResponse>;
                    acknowledgedEventInfo(request?: _141.QueryAcknowledgedEventInfoRequest | undefined): Promise<_141.QueryAcknowledgedEventInfoResponse>;
                    recognizedEventInfo(request?: _141.QueryRecognizedEventInfoRequest | undefined): Promise<_141.QueryRecognizedEventInfoResponse>;
                    delayedCompleteBridgeMessages(request: _141.QueryDelayedCompleteBridgeMessagesRequest): Promise<_141.QueryDelayedCompleteBridgeMessagesResponse>;
                };
                clob: {
                    clobPair(request: _155.QueryGetClobPairRequest): Promise<_155.QueryClobPairResponse>;
                    clobPairAll(request?: _155.QueryAllClobPairRequest | undefined): Promise<_155.QueryClobPairAllResponse>;
                    areSubaccountsLiquidatable(request: _155.AreSubaccountsLiquidatableRequest): Promise<_155.AreSubaccountsLiquidatableResponse>;
                    mevNodeToNodeCalculation(request: _155.MevNodeToNodeCalculationRequest): Promise<_155.MevNodeToNodeCalculationResponse>;
                    equityTierLimitConfiguration(request?: _155.QueryEquityTierLimitConfigurationRequest | undefined): Promise<_155.QueryEquityTierLimitConfigurationResponse>;
                    blockRateLimitConfiguration(request?: _155.QueryBlockRateLimitConfigurationRequest | undefined): Promise<_155.QueryBlockRateLimitConfigurationResponse>;
                    liquidationsConfiguration(request?: _155.QueryLiquidationsConfigurationRequest | undefined): Promise<_155.QueryLiquidationsConfigurationResponse>;
                };
                delaymsg: {
                    nextDelayedMessageId(request?: _163.QueryNextDelayedMessageIdRequest | undefined): Promise<_163.QueryNextDelayedMessageIdResponse>;
                    message(request: _163.QueryMessageRequest): Promise<_163.QueryMessageResponse>;
                    blockMessageIds(request: _163.QueryBlockMessageIdsRequest): Promise<_163.QueryBlockMessageIdsResponse>;
                };
                epochs: {
                    epochInfo(request: _167.QueryGetEpochInfoRequest): Promise<_167.QueryEpochInfoResponse>;
                    epochInfoAll(request?: _167.QueryAllEpochInfoRequest | undefined): Promise<_167.QueryEpochInfoAllResponse>;
                };
                feetiers: {
                    perpetualFeeParams(request?: _170.QueryPerpetualFeeParamsRequest | undefined): Promise<_170.QueryPerpetualFeeParamsResponse>;
                    userFeeTier(request: _170.QueryUserFeeTierRequest): Promise<_170.QueryUserFeeTierResponse>;
                };
                perpetuals: {
                    perpetual(request: _183.QueryPerpetualRequest): Promise<_183.QueryPerpetualResponse>;
                    allPerpetuals(request?: _183.QueryAllPerpetualsRequest | undefined): Promise<_183.QueryAllPerpetualsResponse>;
                    allLiquidityTiers(request?: _183.QueryAllLiquidityTiersRequest | undefined): Promise<_183.QueryAllLiquidityTiersResponse>;
                    premiumVotes(request?: _183.QueryPremiumVotesRequest | undefined): Promise<_183.QueryPremiumVotesResponse>;
                    premiumSamples(request?: _183.QueryPremiumSamplesRequest | undefined): Promise<_183.QueryPremiumSamplesResponse>;
                    params(request?: _183.QueryParamsRequest | undefined): Promise<_183.QueryParamsResponse>;
                };
                prices: {
                    marketPrice(request: _188.QueryMarketPriceRequest): Promise<_188.QueryMarketPriceResponse>;
                    allMarketPrices(request?: _188.QueryAllMarketPricesRequest | undefined): Promise<_188.QueryAllMarketPricesResponse>;
                    marketParam(request: _188.QueryMarketParamRequest): Promise<_188.QueryMarketParamResponse>;
                    allMarketParams(request?: _188.QueryAllMarketParamsRequest | undefined): Promise<_188.QueryAllMarketParamsResponse>;
                };
                ratelimit: {
                    listLimitParams(request?: _193.ListLimitParamsRequest | undefined): Promise<_193.ListLimitParamsResponse>;
                    capacityByDenom(request: _193.QueryCapacityByDenomRequest): Promise<_193.QueryCapacityByDenomResponse>;
                };
                rewards: {
                    params(request?: _197.QueryParamsRequest | undefined): Promise<_197.QueryParamsResponse>;
                };
                sending: {};
                stats: {
                    params(request?: _206.QueryParamsRequest | undefined): Promise<_206.QueryParamsResponse>;
                    statsMetadata(request?: _206.QueryStatsMetadataRequest | undefined): Promise<_206.QueryStatsMetadataResponse>;
                    globalStats(request?: _206.QueryGlobalStatsRequest | undefined): Promise<_206.QueryGlobalStatsResponse>;
                    userStats(request: _206.QueryUserStatsRequest): Promise<_206.QueryUserStatsResponse>;
                };
                subaccounts: {
                    subaccount(request: _212.QueryGetSubaccountRequest): Promise<_212.QuerySubaccountResponse>;
                    subaccountAll(request?: _212.QueryAllSubaccountRequest | undefined): Promise<_212.QuerySubaccountAllResponse>;
                };
                vest: {
                    vestEntry(request: _215.QueryVestEntryRequest): Promise<_215.QueryVestEntryResponse>;
                };
            };
        }>;
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/auth/v1beta1/query.lcd").LCDQueryClient;
                };
                authz: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/authz/v1beta1/query.lcd").LCDQueryClient;
                };
                bank: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/bank/v1beta1/query.lcd").LCDQueryClient;
                };
                base: {
                    node: {
                        v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/node/v1beta1/query.lcd").LCDQueryClient;
                    };
                    tendermint: {
                        v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/base/tendermint/v1beta1/query.lcd").LCDQueryClient;
                    };
                };
                circuit: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/circuit/v1/query.lcd").LCDQueryClient;
                };
                consensus: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/consensus/v1/query.lcd").LCDQueryClient;
                };
                distribution: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/distribution/v1beta1/query.lcd").LCDQueryClient;
                };
                evidence: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/evidence/v1beta1/query.lcd").LCDQueryClient;
                };
                feegrant: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/feegrant/v1beta1/query.lcd").LCDQueryClient;
                };
                gov: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1/query.lcd").LCDQueryClient;
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/gov/v1beta1/query.lcd").LCDQueryClient;
                };
                group: {
                    v1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/group/v1/query.lcd").LCDQueryClient;
                };
                mint: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/mint/v1beta1/query.lcd").LCDQueryClient;
                };
                nft: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/nft/v1beta1/query.lcd").LCDQueryClient;
                };
                params: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/params/v1beta1/query.lcd").LCDQueryClient;
                };
                slashing: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/slashing/v1beta1/query.lcd").LCDQueryClient;
                };
                staking: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/staking/v1beta1/query.lcd").LCDQueryClient;
                };
                tx: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/tx/v1beta1/service.lcd").LCDQueryClient;
                };
                upgrade: {
                    v1beta1: import("@dydxprotocol/v4-proto/src/codegen/cosmos/upgrade/v1beta1/query.lcd").LCDQueryClient;
                };
            };
            dydxprotocol: {
                assets: _296.LCDQueryClient;
                blocktime: _297.LCDQueryClient;
                bridge: _298.LCDQueryClient;
                clob: _299.LCDQueryClient;
                delaymsg: _300.LCDQueryClient;
                epochs: _301.LCDQueryClient;
                feetiers: _302.LCDQueryClient;
                perpetuals: _303.LCDQueryClient;
                prices: _304.LCDQueryClient;
                ratelimit: _305.LCDQueryClient;
                rewards: _306.LCDQueryClient;
                stats: _307.LCDQueryClient;
                subaccounts: _308.LCDQueryClient;
                vest: _309.LCDQueryClient;
            };
        }>;
    };
}
